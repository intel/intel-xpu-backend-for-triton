// RUN: triton-opt %s -split-input-file --intel-allocate-shared-memory --convert-triton-intel-gpu-to-llvm | FileCheck %s

#mma = #triton_intel_gpu.dpas<{repeatCount = 8, systolicDepth = 8, executionSize = 16, opsPerChan = 2, threadsPerWarp = 16, warpsPerCTA = [32, 1], repCluster = [1, 2], A = [8, 16], B = [16, 32], C = [8, 32]}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 32 : i32, triton_gpu.target = "xpu:DEVICE_ARCH.PVC", "triton_gpu.threads-per-warp" = 16 : i32, triton_intel_gpu.min_sg_size = 16 : i32, triton_intel_gpu.support_dpas, triton_intel_gpu.support_sg_2d_block} {
  // CHECK-LABEL: convert_dpas_to_dot_rep_cluster_1_2
  // CHECK-SAME:  %[[VAL_0:.*]]: !llvm.struct<({{.*}})>) attributes {noinline = false, triton_gen.intel_reqd_sub_group_size = [16 : i32], triton_gen.max_work_group_size = [512 : i32, 1 : i32, 1 : i32]} {
  tt.func public @convert_dpas_to_dot_rep_cluster_1_2(%arg: tensor<1024x32xf16, #mma>) attributes {noinline = false} {
    // COM: The repetitions order of dot layout and dpas layout are same when the GEMM tiling is clustered as repCluster [1, 2].
    // CHECK:           %[[VAL_2:.*]] = llvm.extractvalue %[[VAL_0]][0]
    // CHECK:           %[[VAL_3:.*]] = llvm.extractvalue %[[VAL_0]][1]
    // CHECK:           %[[VAL_4:.*]] = llvm.extractvalue %[[VAL_0]][2]
    // CHECK:           %[[VAL_5:.*]] = llvm.extractvalue %[[VAL_0]][3]
    // CHECK:           %[[VAL_6:.*]] = llvm.extractvalue %[[VAL_0]][4]
    // CHECK:           %[[VAL_7:.*]] = llvm.extractvalue %[[VAL_0]][5]
    // CHECK:           %[[VAL_8:.*]] = llvm.extractvalue %[[VAL_0]][6]
    // CHECK:           %[[VAL_9:.*]] = llvm.extractvalue %[[VAL_0]][7]
    // CHECK:           %[[VAL_10:.*]] = llvm.extractvalue %[[VAL_0]][8]
    // CHECK:           %[[VAL_11:.*]] = llvm.extractvalue %[[VAL_0]][9]
    // CHECK:           %[[VAL_12:.*]] = llvm.extractvalue %[[VAL_0]][10]
    // CHECK:           %[[VAL_13:.*]] = llvm.extractvalue %[[VAL_0]][11]
    // CHECK:           %[[VAL_14:.*]] = llvm.extractvalue %[[VAL_0]][12]
    // CHECK:           %[[VAL_15:.*]] = llvm.extractvalue %[[VAL_0]][13]
    // CHECK:           %[[VAL_16:.*]] = llvm.extractvalue %[[VAL_0]][14]
    // CHECK:           %[[VAL_17:.*]] = llvm.extractvalue %[[VAL_0]][15]
    // CHECK:           %[[VAL_18:.*]] = llvm.extractvalue %[[VAL_0]][16]
    // CHECK:           %[[VAL_19:.*]] = llvm.extractvalue %[[VAL_0]][17]
    // CHECK:           %[[VAL_20:.*]] = llvm.extractvalue %[[VAL_0]][18]
    // CHECK:           %[[VAL_21:.*]] = llvm.extractvalue %[[VAL_0]][19]
    // CHECK:           %[[VAL_22:.*]] = llvm.extractvalue %[[VAL_0]][20]
    // CHECK:           %[[VAL_23:.*]] = llvm.extractvalue %[[VAL_0]][21]
    // CHECK:           %[[VAL_24:.*]] = llvm.extractvalue %[[VAL_0]][22]
    // CHECK:           %[[VAL_25:.*]] = llvm.extractvalue %[[VAL_0]][23]
    // CHECK:           %[[VAL_26:.*]] = llvm.extractvalue %[[VAL_0]][24]
    // CHECK:           %[[VAL_27:.*]] = llvm.extractvalue %[[VAL_0]][25]
    // CHECK:           %[[VAL_28:.*]] = llvm.extractvalue %[[VAL_0]][26]
    // CHECK:           %[[VAL_29:.*]] = llvm.extractvalue %[[VAL_0]][27]
    // CHECK:           %[[VAL_30:.*]] = llvm.extractvalue %[[VAL_0]][28]
    // CHECK:           %[[VAL_31:.*]] = llvm.extractvalue %[[VAL_0]][29]
    // CHECK:           %[[VAL_32:.*]] = llvm.extractvalue %[[VAL_0]][30]
    // CHECK:           %[[VAL_33:.*]] = llvm.extractvalue %[[VAL_0]][31]
    // CHECK:           %[[VAL_34:.*]] = llvm.extractvalue %[[VAL_0]][32]
    // CHECK:           %[[VAL_35:.*]] = llvm.extractvalue %[[VAL_0]][33]
    // CHECK:           %[[VAL_36:.*]] = llvm.extractvalue %[[VAL_0]][34]
    // CHECK:           %[[VAL_37:.*]] = llvm.extractvalue %[[VAL_0]][35]
    // CHECK:           %[[VAL_38:.*]] = llvm.extractvalue %[[VAL_0]][36]
    // CHECK:           %[[VAL_39:.*]] = llvm.extractvalue %[[VAL_0]][37]
    // CHECK:           %[[VAL_40:.*]] = llvm.extractvalue %[[VAL_0]][38]
    // CHECK:           %[[VAL_41:.*]] = llvm.extractvalue %[[VAL_0]][39]
    // CHECK:           %[[VAL_42:.*]] = llvm.extractvalue %[[VAL_0]][40]
    // CHECK:           %[[VAL_43:.*]] = llvm.extractvalue %[[VAL_0]][41]
    // CHECK:           %[[VAL_44:.*]] = llvm.extractvalue %[[VAL_0]][42]
    // CHECK:           %[[VAL_45:.*]] = llvm.extractvalue %[[VAL_0]][43]
    // CHECK:           %[[VAL_46:.*]] = llvm.extractvalue %[[VAL_0]][44]
    // CHECK:           %[[VAL_47:.*]] = llvm.extractvalue %[[VAL_0]][45]
    // CHECK:           %[[VAL_48:.*]] = llvm.extractvalue %[[VAL_0]][46]
    // CHECK:           %[[VAL_49:.*]] = llvm.extractvalue %[[VAL_0]][47]
    // CHECK:           %[[VAL_50:.*]] = llvm.extractvalue %[[VAL_0]][48]
    // CHECK:           %[[VAL_51:.*]] = llvm.extractvalue %[[VAL_0]][49]
    // CHECK:           %[[VAL_52:.*]] = llvm.extractvalue %[[VAL_0]][50]
    // CHECK:           %[[VAL_53:.*]] = llvm.extractvalue %[[VAL_0]][51]
    // CHECK:           %[[VAL_54:.*]] = llvm.extractvalue %[[VAL_0]][52]
    // CHECK:           %[[VAL_55:.*]] = llvm.extractvalue %[[VAL_0]][53]
    // CHECK:           %[[VAL_56:.*]] = llvm.extractvalue %[[VAL_0]][54]
    // CHECK:           %[[VAL_57:.*]] = llvm.extractvalue %[[VAL_0]][55]
    // CHECK:           %[[VAL_58:.*]] = llvm.extractvalue %[[VAL_0]][56]
    // CHECK:           %[[VAL_59:.*]] = llvm.extractvalue %[[VAL_0]][57]
    // CHECK:           %[[VAL_60:.*]] = llvm.extractvalue %[[VAL_0]][58]
    // CHECK:           %[[VAL_61:.*]] = llvm.extractvalue %[[VAL_0]][59]
    // CHECK:           %[[VAL_62:.*]] = llvm.extractvalue %[[VAL_0]][60]
    // CHECK:           %[[VAL_63:.*]] = llvm.extractvalue %[[VAL_0]][61]
    // CHECK:           %[[VAL_64:.*]] = llvm.extractvalue %[[VAL_0]][62]
    // CHECK:           %[[VAL_65:.*]] = llvm.extractvalue %[[VAL_0]][63]
    // CHECK:           %[[VAL_66:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_67:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_68:.*]] = llvm.insertelement %[[VAL_2]], %[[VAL_66]]{{\[}}%[[VAL_67]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_69:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_70:.*]] = llvm.insertelement %[[VAL_3]], %[[VAL_68]]{{\[}}%[[VAL_69]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_71:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_72:.*]] = llvm.insertelement %[[VAL_4]], %[[VAL_70]]{{\[}}%[[VAL_71]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_73:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_74:.*]] = llvm.insertelement %[[VAL_5]], %[[VAL_72]]{{\[}}%[[VAL_73]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_75:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_76:.*]] = llvm.insertelement %[[VAL_6]], %[[VAL_74]]{{\[}}%[[VAL_75]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_77:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_78:.*]] = llvm.insertelement %[[VAL_7]], %[[VAL_76]]{{\[}}%[[VAL_77]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_79:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_80:.*]] = llvm.insertelement %[[VAL_8]], %[[VAL_78]]{{\[}}%[[VAL_79]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_81:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_0:.*]] = llvm.insertelement %[[VAL_9]], %[[VAL_80]]{{\[}}%[[VAL_81]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_83:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_84:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_85:.*]] = llvm.insertelement %[[VAL_10]], %[[VAL_83]]{{\[}}%[[VAL_84]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_86:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_87:.*]] = llvm.insertelement %[[VAL_11]], %[[VAL_85]]{{\[}}%[[VAL_86]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_88:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_89:.*]] = llvm.insertelement %[[VAL_12]], %[[VAL_87]]{{\[}}%[[VAL_88]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_90:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_91:.*]] = llvm.insertelement %[[VAL_13]], %[[VAL_89]]{{\[}}%[[VAL_90]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_92:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_93:.*]] = llvm.insertelement %[[VAL_14]], %[[VAL_91]]{{\[}}%[[VAL_92]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_94:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_95:.*]] = llvm.insertelement %[[VAL_15]], %[[VAL_93]]{{\[}}%[[VAL_94]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_96:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_97:.*]] = llvm.insertelement %[[VAL_16]], %[[VAL_95]]{{\[}}%[[VAL_96]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_98:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_1:.*]] = llvm.insertelement %[[VAL_17]], %[[VAL_97]]{{\[}}%[[VAL_98]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_100:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_101:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_102:.*]] = llvm.insertelement %[[VAL_18]], %[[VAL_100]]{{\[}}%[[VAL_101]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_103:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_104:.*]] = llvm.insertelement %[[VAL_19]], %[[VAL_102]]{{\[}}%[[VAL_103]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_105:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_106:.*]] = llvm.insertelement %[[VAL_20]], %[[VAL_104]]{{\[}}%[[VAL_105]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_107:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_108:.*]] = llvm.insertelement %[[VAL_21]], %[[VAL_106]]{{\[}}%[[VAL_107]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_109:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_110:.*]] = llvm.insertelement %[[VAL_22]], %[[VAL_108]]{{\[}}%[[VAL_109]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_111:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_112:.*]] = llvm.insertelement %[[VAL_23]], %[[VAL_110]]{{\[}}%[[VAL_111]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_113:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_114:.*]] = llvm.insertelement %[[VAL_24]], %[[VAL_112]]{{\[}}%[[VAL_113]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_115:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_2:.*]] = llvm.insertelement %[[VAL_25]], %[[VAL_114]]{{\[}}%[[VAL_115]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_117:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_118:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_119:.*]] = llvm.insertelement %[[VAL_26]], %[[VAL_117]]{{\[}}%[[VAL_118]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_120:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_121:.*]] = llvm.insertelement %[[VAL_27]], %[[VAL_119]]{{\[}}%[[VAL_120]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_122:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_123:.*]] = llvm.insertelement %[[VAL_28]], %[[VAL_121]]{{\[}}%[[VAL_122]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_124:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_125:.*]] = llvm.insertelement %[[VAL_29]], %[[VAL_123]]{{\[}}%[[VAL_124]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_126:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_127:.*]] = llvm.insertelement %[[VAL_30]], %[[VAL_125]]{{\[}}%[[VAL_126]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_128:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_129:.*]] = llvm.insertelement %[[VAL_31]], %[[VAL_127]]{{\[}}%[[VAL_128]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_130:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_131:.*]] = llvm.insertelement %[[VAL_32]], %[[VAL_129]]{{\[}}%[[VAL_130]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_132:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_3:.*]] = llvm.insertelement %[[VAL_33]], %[[VAL_131]]{{\[}}%[[VAL_132]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_134:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_135:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_136:.*]] = llvm.insertelement %[[VAL_34]], %[[VAL_134]]{{\[}}%[[VAL_135]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_137:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_138:.*]] = llvm.insertelement %[[VAL_35]], %[[VAL_136]]{{\[}}%[[VAL_137]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_139:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_140:.*]] = llvm.insertelement %[[VAL_36]], %[[VAL_138]]{{\[}}%[[VAL_139]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_141:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_142:.*]] = llvm.insertelement %[[VAL_37]], %[[VAL_140]]{{\[}}%[[VAL_141]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_143:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_144:.*]] = llvm.insertelement %[[VAL_38]], %[[VAL_142]]{{\[}}%[[VAL_143]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_145:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_146:.*]] = llvm.insertelement %[[VAL_39]], %[[VAL_144]]{{\[}}%[[VAL_145]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_147:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_148:.*]] = llvm.insertelement %[[VAL_40]], %[[VAL_146]]{{\[}}%[[VAL_147]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_149:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_4:.*]] = llvm.insertelement %[[VAL_41]], %[[VAL_148]]{{\[}}%[[VAL_149]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_151:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_152:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_153:.*]] = llvm.insertelement %[[VAL_42]], %[[VAL_151]]{{\[}}%[[VAL_152]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_154:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_155:.*]] = llvm.insertelement %[[VAL_43]], %[[VAL_153]]{{\[}}%[[VAL_154]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_156:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_157:.*]] = llvm.insertelement %[[VAL_44]], %[[VAL_155]]{{\[}}%[[VAL_156]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_158:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_159:.*]] = llvm.insertelement %[[VAL_45]], %[[VAL_157]]{{\[}}%[[VAL_158]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_160:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_161:.*]] = llvm.insertelement %[[VAL_46]], %[[VAL_159]]{{\[}}%[[VAL_160]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_162:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_163:.*]] = llvm.insertelement %[[VAL_47]], %[[VAL_161]]{{\[}}%[[VAL_162]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_164:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_165:.*]] = llvm.insertelement %[[VAL_48]], %[[VAL_163]]{{\[}}%[[VAL_164]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_166:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_5:.*]] = llvm.insertelement %[[VAL_49]], %[[VAL_165]]{{\[}}%[[VAL_166]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_168:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_169:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_170:.*]] = llvm.insertelement %[[VAL_50]], %[[VAL_168]]{{\[}}%[[VAL_169]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_171:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_172:.*]] = llvm.insertelement %[[VAL_51]], %[[VAL_170]]{{\[}}%[[VAL_171]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_173:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_174:.*]] = llvm.insertelement %[[VAL_52]], %[[VAL_172]]{{\[}}%[[VAL_173]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_175:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_176:.*]] = llvm.insertelement %[[VAL_53]], %[[VAL_174]]{{\[}}%[[VAL_175]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_177:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_178:.*]] = llvm.insertelement %[[VAL_54]], %[[VAL_176]]{{\[}}%[[VAL_177]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_179:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_180:.*]] = llvm.insertelement %[[VAL_55]], %[[VAL_178]]{{\[}}%[[VAL_179]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_181:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_182:.*]] = llvm.insertelement %[[VAL_56]], %[[VAL_180]]{{\[}}%[[VAL_181]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_183:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_6:.*]] = llvm.insertelement %[[VAL_57]], %[[VAL_182]]{{\[}}%[[VAL_183]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_185:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_186:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_187:.*]] = llvm.insertelement %[[VAL_58]], %[[VAL_185]]{{\[}}%[[VAL_186]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_188:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_189:.*]] = llvm.insertelement %[[VAL_59]], %[[VAL_187]]{{\[}}%[[VAL_188]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_190:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_191:.*]] = llvm.insertelement %[[VAL_60]], %[[VAL_189]]{{\[}}%[[VAL_190]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_192:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_193:.*]] = llvm.insertelement %[[VAL_61]], %[[VAL_191]]{{\[}}%[[VAL_192]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_194:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_195:.*]] = llvm.insertelement %[[VAL_62]], %[[VAL_193]]{{\[}}%[[VAL_194]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_196:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_197:.*]] = llvm.insertelement %[[VAL_63]], %[[VAL_195]]{{\[}}%[[VAL_196]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_198:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_199:.*]] = llvm.insertelement %[[VAL_64]], %[[VAL_197]]{{\[}}%[[VAL_198]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_200:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_7:.*]] = llvm.insertelement %[[VAL_65]], %[[VAL_199]]{{\[}}%[[VAL_200]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_202:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_203:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_202]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_204:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_205:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_204]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_206:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_207:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_206]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_208:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_209:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_208]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_210:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_211:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_210]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_212:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_213:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_212]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_214:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_215:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_214]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_216:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_217:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_216]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_218:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_219:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_218]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_220:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_221:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_220]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_222:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_223:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_222]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_224:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_225:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_224]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_226:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_227:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_226]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_228:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_229:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_228]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_230:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_231:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_230]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_232:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_233:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_232]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_234:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_235:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_234]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_236:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_237:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_236]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_238:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_239:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_238]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_240:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_241:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_240]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_242:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_243:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_242]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_244:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_245:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_244]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_246:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_247:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_246]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_248:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_249:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_248]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_250:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_251:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_250]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_252:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_253:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_252]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_254:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_255:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_254]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_256:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_257:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_256]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_258:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_259:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_258]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_260:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_261:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_260]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_262:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_263:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_262]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_264:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_265:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_264]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_266:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_267:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_266]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_268:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_269:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_268]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_270:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_271:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_270]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_272:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_273:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_272]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_274:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_275:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_274]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_276:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_277:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_276]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_278:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_279:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_278]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_280:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_281:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_280]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_282:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_283:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_282]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_284:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_285:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_284]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_286:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_287:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_286]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_288:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_289:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_288]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_290:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_291:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_290]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_292:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_293:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_292]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_294:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_295:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_294]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_296:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_297:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_296]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_298:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_299:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_298]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_300:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_301:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_300]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_302:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_303:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_302]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_304:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_305:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_304]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_306:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_307:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_306]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_308:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_309:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_308]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_310:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_311:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_310]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_312:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_313:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_312]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_314:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_315:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_314]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_316:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_317:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_316]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_318:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_319:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_318]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_320:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_321:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_320]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_322:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_323:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_322]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_324:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_325:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_324]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_326:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_327:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_326]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_328:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_329:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_328]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_330:.*]] = llvm.mlir.undef
    // CHECK:           %[[VAL_331:.*]] = llvm.insertvalue %[[VAL_203]], %[[VAL_330]][0]
    // CHECK:           %[[VAL_332:.*]] = llvm.insertvalue %[[VAL_205]], %[[VAL_331]][1]
    // CHECK:           %[[VAL_333:.*]] = llvm.insertvalue %[[VAL_207]], %[[VAL_332]][2]
    // CHECK:           %[[VAL_334:.*]] = llvm.insertvalue %[[VAL_209]], %[[VAL_333]][3]
    // CHECK:           %[[VAL_335:.*]] = llvm.insertvalue %[[VAL_211]], %[[VAL_334]][4]
    // CHECK:           %[[VAL_336:.*]] = llvm.insertvalue %[[VAL_213]], %[[VAL_335]][5]
    // CHECK:           %[[VAL_337:.*]] = llvm.insertvalue %[[VAL_215]], %[[VAL_336]][6]
    // CHECK:           %[[VAL_338:.*]] = llvm.insertvalue %[[VAL_217]], %[[VAL_337]][7]
    // CHECK:           %[[VAL_339:.*]] = llvm.insertvalue %[[VAL_219]], %[[VAL_338]][8]
    // CHECK:           %[[VAL_340:.*]] = llvm.insertvalue %[[VAL_221]], %[[VAL_339]][9]
    // CHECK:           %[[VAL_341:.*]] = llvm.insertvalue %[[VAL_223]], %[[VAL_340]][10]
    // CHECK:           %[[VAL_342:.*]] = llvm.insertvalue %[[VAL_225]], %[[VAL_341]][11]
    // CHECK:           %[[VAL_343:.*]] = llvm.insertvalue %[[VAL_227]], %[[VAL_342]][12]
    // CHECK:           %[[VAL_344:.*]] = llvm.insertvalue %[[VAL_229]], %[[VAL_343]][13]
    // CHECK:           %[[VAL_345:.*]] = llvm.insertvalue %[[VAL_231]], %[[VAL_344]][14]
    // CHECK:           %[[VAL_346:.*]] = llvm.insertvalue %[[VAL_233]], %[[VAL_345]][15]
    // CHECK:           %[[VAL_347:.*]] = llvm.insertvalue %[[VAL_235]], %[[VAL_346]][16]
    // CHECK:           %[[VAL_348:.*]] = llvm.insertvalue %[[VAL_237]], %[[VAL_347]][17]
    // CHECK:           %[[VAL_349:.*]] = llvm.insertvalue %[[VAL_239]], %[[VAL_348]][18]
    // CHECK:           %[[VAL_350:.*]] = llvm.insertvalue %[[VAL_241]], %[[VAL_349]][19]
    // CHECK:           %[[VAL_351:.*]] = llvm.insertvalue %[[VAL_243]], %[[VAL_350]][20]
    // CHECK:           %[[VAL_352:.*]] = llvm.insertvalue %[[VAL_245]], %[[VAL_351]][21]
    // CHECK:           %[[VAL_353:.*]] = llvm.insertvalue %[[VAL_247]], %[[VAL_352]][22]
    // CHECK:           %[[VAL_354:.*]] = llvm.insertvalue %[[VAL_249]], %[[VAL_353]][23]
    // CHECK:           %[[VAL_355:.*]] = llvm.insertvalue %[[VAL_251]], %[[VAL_354]][24]
    // CHECK:           %[[VAL_356:.*]] = llvm.insertvalue %[[VAL_253]], %[[VAL_355]][25]
    // CHECK:           %[[VAL_357:.*]] = llvm.insertvalue %[[VAL_255]], %[[VAL_356]][26]
    // CHECK:           %[[VAL_358:.*]] = llvm.insertvalue %[[VAL_257]], %[[VAL_357]][27]
    // CHECK:           %[[VAL_359:.*]] = llvm.insertvalue %[[VAL_259]], %[[VAL_358]][28]
    // CHECK:           %[[VAL_360:.*]] = llvm.insertvalue %[[VAL_261]], %[[VAL_359]][29]
    // CHECK:           %[[VAL_361:.*]] = llvm.insertvalue %[[VAL_263]], %[[VAL_360]][30]
    // CHECK:           %[[VAL_362:.*]] = llvm.insertvalue %[[VAL_265]], %[[VAL_361]][31]
    // CHECK:           %[[VAL_363:.*]] = llvm.insertvalue %[[VAL_267]], %[[VAL_362]][32]
    // CHECK:           %[[VAL_364:.*]] = llvm.insertvalue %[[VAL_269]], %[[VAL_363]][33]
    // CHECK:           %[[VAL_365:.*]] = llvm.insertvalue %[[VAL_271]], %[[VAL_364]][34]
    // CHECK:           %[[VAL_366:.*]] = llvm.insertvalue %[[VAL_273]], %[[VAL_365]][35]
    // CHECK:           %[[VAL_367:.*]] = llvm.insertvalue %[[VAL_275]], %[[VAL_366]][36]
    // CHECK:           %[[VAL_368:.*]] = llvm.insertvalue %[[VAL_277]], %[[VAL_367]][37]
    // CHECK:           %[[VAL_369:.*]] = llvm.insertvalue %[[VAL_279]], %[[VAL_368]][38]
    // CHECK:           %[[VAL_370:.*]] = llvm.insertvalue %[[VAL_281]], %[[VAL_369]][39]
    // CHECK:           %[[VAL_371:.*]] = llvm.insertvalue %[[VAL_283]], %[[VAL_370]][40]
    // CHECK:           %[[VAL_372:.*]] = llvm.insertvalue %[[VAL_285]], %[[VAL_371]][41]
    // CHECK:           %[[VAL_373:.*]] = llvm.insertvalue %[[VAL_287]], %[[VAL_372]][42]
    // CHECK:           %[[VAL_374:.*]] = llvm.insertvalue %[[VAL_289]], %[[VAL_373]][43]
    // CHECK:           %[[VAL_375:.*]] = llvm.insertvalue %[[VAL_291]], %[[VAL_374]][44]
    // CHECK:           %[[VAL_376:.*]] = llvm.insertvalue %[[VAL_293]], %[[VAL_375]][45]
    // CHECK:           %[[VAL_377:.*]] = llvm.insertvalue %[[VAL_295]], %[[VAL_376]][46]
    // CHECK:           %[[VAL_378:.*]] = llvm.insertvalue %[[VAL_297]], %[[VAL_377]][47]
    // CHECK:           %[[VAL_379:.*]] = llvm.insertvalue %[[VAL_299]], %[[VAL_378]][48]
    // CHECK:           %[[VAL_380:.*]] = llvm.insertvalue %[[VAL_301]], %[[VAL_379]][49]
    // CHECK:           %[[VAL_381:.*]] = llvm.insertvalue %[[VAL_303]], %[[VAL_380]][50]
    // CHECK:           %[[VAL_382:.*]] = llvm.insertvalue %[[VAL_305]], %[[VAL_381]][51]
    // CHECK:           %[[VAL_383:.*]] = llvm.insertvalue %[[VAL_307]], %[[VAL_382]][52]
    // CHECK:           %[[VAL_384:.*]] = llvm.insertvalue %[[VAL_309]], %[[VAL_383]][53]
    // CHECK:           %[[VAL_385:.*]] = llvm.insertvalue %[[VAL_311]], %[[VAL_384]][54]
    // CHECK:           %[[VAL_386:.*]] = llvm.insertvalue %[[VAL_313]], %[[VAL_385]][55]
    // CHECK:           %[[VAL_387:.*]] = llvm.insertvalue %[[VAL_315]], %[[VAL_386]][56]
    // CHECK:           %[[VAL_388:.*]] = llvm.insertvalue %[[VAL_317]], %[[VAL_387]][57]
    // CHECK:           %[[VAL_389:.*]] = llvm.insertvalue %[[VAL_319]], %[[VAL_388]][58]
    // CHECK:           %[[VAL_390:.*]] = llvm.insertvalue %[[VAL_321]], %[[VAL_389]][59]
    // CHECK:           %[[VAL_391:.*]] = llvm.insertvalue %[[VAL_323]], %[[VAL_390]][60]
    // CHECK:           %[[VAL_392:.*]] = llvm.insertvalue %[[VAL_325]], %[[VAL_391]][61]
    // CHECK:           %[[VAL_393:.*]] = llvm.insertvalue %[[VAL_327]], %[[VAL_392]][62]
    // CHECK:           %[[VAL_394:.*]] = llvm.insertvalue %[[VAL_329]], %[[VAL_393]][63]
    %108 = triton_gpu.convert_layout %arg : tensor<1024x32xf16, #mma> -> tensor<1024x32xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>>
    tt.return
  }
}

// -----

#mma = #triton_intel_gpu.dpas<{repeatCount = 8, systolicDepth = 8, executionSize = 16, opsPerChan = 2, threadsPerWarp = 16, warpsPerCTA = [32, 1], repCluster = [2, 2], A = [8, 16], B = [16, 32], C = [8, 32]}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 32 : i32, triton_gpu.target = "xpu:DEVICE_ARCH.PVC", "triton_gpu.threads-per-warp" = 16 : i32, triton_intel_gpu.min_sg_size = 16 : i32, triton_intel_gpu.support_dpas, triton_intel_gpu.support_sg_2d_block} {
  // CHECK-LABEL: convert_dpas_to_dot_rep_cluster_2_2
  // CHECK-SAME:  %[[VAL_0:.*]]: !llvm.struct<({{.*}})>) attributes {noinline = false, triton_gen.intel_reqd_sub_group_size = [16 : i32], triton_gen.max_work_group_size = [512 : i32, 1 : i32, 1 : i32]} {
  tt.func public @convert_dpas_to_dot_rep_cluster_2_2(%arg: tensor<1024x32xf16, #mma>) attributes {noinline = false} {
    // COM: The repetitions order of dpas layout when the GEMM tiling is clustered as repCluster [1, 2]:
    // COM:   - 0, 1, 2, 3, 4, 5, 6, 7.
    // COM: The repetitions order of dot layout when the GEMM tiling is clustered as repCluster [1, 2]:
    // COM:   - 0, 2, 1, 3, 4, 6, 5, 7.
    // CHECK:           %[[VAL_2:.*]] = llvm.extractvalue %[[VAL_0]][0]
    // CHECK:           %[[VAL_3:.*]] = llvm.extractvalue %[[VAL_0]][1]
    // CHECK:           %[[VAL_4:.*]] = llvm.extractvalue %[[VAL_0]][2]
    // CHECK:           %[[VAL_5:.*]] = llvm.extractvalue %[[VAL_0]][3]
    // CHECK:           %[[VAL_6:.*]] = llvm.extractvalue %[[VAL_0]][4]
    // CHECK:           %[[VAL_7:.*]] = llvm.extractvalue %[[VAL_0]][5]
    // CHECK:           %[[VAL_8:.*]] = llvm.extractvalue %[[VAL_0]][6]
    // CHECK:           %[[VAL_9:.*]] = llvm.extractvalue %[[VAL_0]][7]
    // CHECK:           %[[VAL_10:.*]] = llvm.extractvalue %[[VAL_0]][8]
    // CHECK:           %[[VAL_11:.*]] = llvm.extractvalue %[[VAL_0]][9]
    // CHECK:           %[[VAL_12:.*]] = llvm.extractvalue %[[VAL_0]][10]
    // CHECK:           %[[VAL_13:.*]] = llvm.extractvalue %[[VAL_0]][11]
    // CHECK:           %[[VAL_14:.*]] = llvm.extractvalue %[[VAL_0]][12]
    // CHECK:           %[[VAL_15:.*]] = llvm.extractvalue %[[VAL_0]][13]
    // CHECK:           %[[VAL_16:.*]] = llvm.extractvalue %[[VAL_0]][14]
    // CHECK:           %[[VAL_17:.*]] = llvm.extractvalue %[[VAL_0]][15]
    // CHECK:           %[[VAL_18:.*]] = llvm.extractvalue %[[VAL_0]][16]
    // CHECK:           %[[VAL_19:.*]] = llvm.extractvalue %[[VAL_0]][17]
    // CHECK:           %[[VAL_20:.*]] = llvm.extractvalue %[[VAL_0]][18]
    // CHECK:           %[[VAL_21:.*]] = llvm.extractvalue %[[VAL_0]][19]
    // CHECK:           %[[VAL_22:.*]] = llvm.extractvalue %[[VAL_0]][20]
    // CHECK:           %[[VAL_23:.*]] = llvm.extractvalue %[[VAL_0]][21]
    // CHECK:           %[[VAL_24:.*]] = llvm.extractvalue %[[VAL_0]][22]
    // CHECK:           %[[VAL_25:.*]] = llvm.extractvalue %[[VAL_0]][23]
    // CHECK:           %[[VAL_26:.*]] = llvm.extractvalue %[[VAL_0]][24]
    // CHECK:           %[[VAL_27:.*]] = llvm.extractvalue %[[VAL_0]][25]
    // CHECK:           %[[VAL_28:.*]] = llvm.extractvalue %[[VAL_0]][26]
    // CHECK:           %[[VAL_29:.*]] = llvm.extractvalue %[[VAL_0]][27]
    // CHECK:           %[[VAL_30:.*]] = llvm.extractvalue %[[VAL_0]][28]
    // CHECK:           %[[VAL_31:.*]] = llvm.extractvalue %[[VAL_0]][29]
    // CHECK:           %[[VAL_32:.*]] = llvm.extractvalue %[[VAL_0]][30]
    // CHECK:           %[[VAL_33:.*]] = llvm.extractvalue %[[VAL_0]][31]
    // CHECK:           %[[VAL_34:.*]] = llvm.extractvalue %[[VAL_0]][32]
    // CHECK:           %[[VAL_35:.*]] = llvm.extractvalue %[[VAL_0]][33]
    // CHECK:           %[[VAL_36:.*]] = llvm.extractvalue %[[VAL_0]][34]
    // CHECK:           %[[VAL_37:.*]] = llvm.extractvalue %[[VAL_0]][35]
    // CHECK:           %[[VAL_38:.*]] = llvm.extractvalue %[[VAL_0]][36]
    // CHECK:           %[[VAL_39:.*]] = llvm.extractvalue %[[VAL_0]][37]
    // CHECK:           %[[VAL_40:.*]] = llvm.extractvalue %[[VAL_0]][38]
    // CHECK:           %[[VAL_41:.*]] = llvm.extractvalue %[[VAL_0]][39]
    // CHECK:           %[[VAL_42:.*]] = llvm.extractvalue %[[VAL_0]][40]
    // CHECK:           %[[VAL_43:.*]] = llvm.extractvalue %[[VAL_0]][41]
    // CHECK:           %[[VAL_44:.*]] = llvm.extractvalue %[[VAL_0]][42]
    // CHECK:           %[[VAL_45:.*]] = llvm.extractvalue %[[VAL_0]][43]
    // CHECK:           %[[VAL_46:.*]] = llvm.extractvalue %[[VAL_0]][44]
    // CHECK:           %[[VAL_47:.*]] = llvm.extractvalue %[[VAL_0]][45]
    // CHECK:           %[[VAL_48:.*]] = llvm.extractvalue %[[VAL_0]][46]
    // CHECK:           %[[VAL_49:.*]] = llvm.extractvalue %[[VAL_0]][47]
    // CHECK:           %[[VAL_50:.*]] = llvm.extractvalue %[[VAL_0]][48]
    // CHECK:           %[[VAL_51:.*]] = llvm.extractvalue %[[VAL_0]][49]
    // CHECK:           %[[VAL_52:.*]] = llvm.extractvalue %[[VAL_0]][50]
    // CHECK:           %[[VAL_53:.*]] = llvm.extractvalue %[[VAL_0]][51]
    // CHECK:           %[[VAL_54:.*]] = llvm.extractvalue %[[VAL_0]][52]
    // CHECK:           %[[VAL_55:.*]] = llvm.extractvalue %[[VAL_0]][53]
    // CHECK:           %[[VAL_56:.*]] = llvm.extractvalue %[[VAL_0]][54]
    // CHECK:           %[[VAL_57:.*]] = llvm.extractvalue %[[VAL_0]][55]
    // CHECK:           %[[VAL_58:.*]] = llvm.extractvalue %[[VAL_0]][56]
    // CHECK:           %[[VAL_59:.*]] = llvm.extractvalue %[[VAL_0]][57]
    // CHECK:           %[[VAL_60:.*]] = llvm.extractvalue %[[VAL_0]][58]
    // CHECK:           %[[VAL_61:.*]] = llvm.extractvalue %[[VAL_0]][59]
    // CHECK:           %[[VAL_62:.*]] = llvm.extractvalue %[[VAL_0]][60]
    // CHECK:           %[[VAL_63:.*]] = llvm.extractvalue %[[VAL_0]][61]
    // CHECK:           %[[VAL_64:.*]] = llvm.extractvalue %[[VAL_0]][62]
    // CHECK:           %[[VAL_65:.*]] = llvm.extractvalue %[[VAL_0]][63]
    // CHECK:           %[[VAL_66:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_67:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_68:.*]] = llvm.insertelement %[[VAL_2]], %[[VAL_66]]{{\[}}%[[VAL_67]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_69:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_70:.*]] = llvm.insertelement %[[VAL_3]], %[[VAL_68]]{{\[}}%[[VAL_69]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_71:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_72:.*]] = llvm.insertelement %[[VAL_4]], %[[VAL_70]]{{\[}}%[[VAL_71]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_73:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_74:.*]] = llvm.insertelement %[[VAL_5]], %[[VAL_72]]{{\[}}%[[VAL_73]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_75:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_76:.*]] = llvm.insertelement %[[VAL_6]], %[[VAL_74]]{{\[}}%[[VAL_75]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_77:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_78:.*]] = llvm.insertelement %[[VAL_7]], %[[VAL_76]]{{\[}}%[[VAL_77]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_79:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_80:.*]] = llvm.insertelement %[[VAL_8]], %[[VAL_78]]{{\[}}%[[VAL_79]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_81:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_0:.*]] = llvm.insertelement %[[VAL_9]], %[[VAL_80]]{{\[}}%[[VAL_81]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_83:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_84:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_85:.*]] = llvm.insertelement %[[VAL_10]], %[[VAL_83]]{{\[}}%[[VAL_84]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_86:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_87:.*]] = llvm.insertelement %[[VAL_11]], %[[VAL_85]]{{\[}}%[[VAL_86]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_88:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_89:.*]] = llvm.insertelement %[[VAL_12]], %[[VAL_87]]{{\[}}%[[VAL_88]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_90:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_91:.*]] = llvm.insertelement %[[VAL_13]], %[[VAL_89]]{{\[}}%[[VAL_90]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_92:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_93:.*]] = llvm.insertelement %[[VAL_14]], %[[VAL_91]]{{\[}}%[[VAL_92]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_94:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_95:.*]] = llvm.insertelement %[[VAL_15]], %[[VAL_93]]{{\[}}%[[VAL_94]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_96:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_97:.*]] = llvm.insertelement %[[VAL_16]], %[[VAL_95]]{{\[}}%[[VAL_96]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_98:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_1:.*]] = llvm.insertelement %[[VAL_17]], %[[VAL_97]]{{\[}}%[[VAL_98]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_100:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_101:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_102:.*]] = llvm.insertelement %[[VAL_18]], %[[VAL_100]]{{\[}}%[[VAL_101]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_103:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_104:.*]] = llvm.insertelement %[[VAL_19]], %[[VAL_102]]{{\[}}%[[VAL_103]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_105:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_106:.*]] = llvm.insertelement %[[VAL_20]], %[[VAL_104]]{{\[}}%[[VAL_105]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_107:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_108:.*]] = llvm.insertelement %[[VAL_21]], %[[VAL_106]]{{\[}}%[[VAL_107]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_109:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_110:.*]] = llvm.insertelement %[[VAL_22]], %[[VAL_108]]{{\[}}%[[VAL_109]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_111:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_112:.*]] = llvm.insertelement %[[VAL_23]], %[[VAL_110]]{{\[}}%[[VAL_111]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_113:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_114:.*]] = llvm.insertelement %[[VAL_24]], %[[VAL_112]]{{\[}}%[[VAL_113]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_115:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_2:.*]] = llvm.insertelement %[[VAL_25]], %[[VAL_114]]{{\[}}%[[VAL_115]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_117:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_118:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_119:.*]] = llvm.insertelement %[[VAL_26]], %[[VAL_117]]{{\[}}%[[VAL_118]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_120:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_121:.*]] = llvm.insertelement %[[VAL_27]], %[[VAL_119]]{{\[}}%[[VAL_120]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_122:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_123:.*]] = llvm.insertelement %[[VAL_28]], %[[VAL_121]]{{\[}}%[[VAL_122]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_124:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_125:.*]] = llvm.insertelement %[[VAL_29]], %[[VAL_123]]{{\[}}%[[VAL_124]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_126:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_127:.*]] = llvm.insertelement %[[VAL_30]], %[[VAL_125]]{{\[}}%[[VAL_126]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_128:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_129:.*]] = llvm.insertelement %[[VAL_31]], %[[VAL_127]]{{\[}}%[[VAL_128]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_130:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_131:.*]] = llvm.insertelement %[[VAL_32]], %[[VAL_129]]{{\[}}%[[VAL_130]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_132:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_3:.*]] = llvm.insertelement %[[VAL_33]], %[[VAL_131]]{{\[}}%[[VAL_132]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_134:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_135:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_136:.*]] = llvm.insertelement %[[VAL_34]], %[[VAL_134]]{{\[}}%[[VAL_135]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_137:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_138:.*]] = llvm.insertelement %[[VAL_35]], %[[VAL_136]]{{\[}}%[[VAL_137]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_139:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_140:.*]] = llvm.insertelement %[[VAL_36]], %[[VAL_138]]{{\[}}%[[VAL_139]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_141:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_142:.*]] = llvm.insertelement %[[VAL_37]], %[[VAL_140]]{{\[}}%[[VAL_141]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_143:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_144:.*]] = llvm.insertelement %[[VAL_38]], %[[VAL_142]]{{\[}}%[[VAL_143]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_145:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_146:.*]] = llvm.insertelement %[[VAL_39]], %[[VAL_144]]{{\[}}%[[VAL_145]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_147:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_148:.*]] = llvm.insertelement %[[VAL_40]], %[[VAL_146]]{{\[}}%[[VAL_147]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_149:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_4:.*]] = llvm.insertelement %[[VAL_41]], %[[VAL_148]]{{\[}}%[[VAL_149]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_151:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_152:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_153:.*]] = llvm.insertelement %[[VAL_42]], %[[VAL_151]]{{\[}}%[[VAL_152]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_154:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_155:.*]] = llvm.insertelement %[[VAL_43]], %[[VAL_153]]{{\[}}%[[VAL_154]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_156:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_157:.*]] = llvm.insertelement %[[VAL_44]], %[[VAL_155]]{{\[}}%[[VAL_156]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_158:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_159:.*]] = llvm.insertelement %[[VAL_45]], %[[VAL_157]]{{\[}}%[[VAL_158]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_160:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_161:.*]] = llvm.insertelement %[[VAL_46]], %[[VAL_159]]{{\[}}%[[VAL_160]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_162:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_163:.*]] = llvm.insertelement %[[VAL_47]], %[[VAL_161]]{{\[}}%[[VAL_162]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_164:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_165:.*]] = llvm.insertelement %[[VAL_48]], %[[VAL_163]]{{\[}}%[[VAL_164]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_166:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_5:.*]] = llvm.insertelement %[[VAL_49]], %[[VAL_165]]{{\[}}%[[VAL_166]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_168:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_169:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_170:.*]] = llvm.insertelement %[[VAL_50]], %[[VAL_168]]{{\[}}%[[VAL_169]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_171:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_172:.*]] = llvm.insertelement %[[VAL_51]], %[[VAL_170]]{{\[}}%[[VAL_171]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_173:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_174:.*]] = llvm.insertelement %[[VAL_52]], %[[VAL_172]]{{\[}}%[[VAL_173]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_175:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_176:.*]] = llvm.insertelement %[[VAL_53]], %[[VAL_174]]{{\[}}%[[VAL_175]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_177:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_178:.*]] = llvm.insertelement %[[VAL_54]], %[[VAL_176]]{{\[}}%[[VAL_177]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_179:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_180:.*]] = llvm.insertelement %[[VAL_55]], %[[VAL_178]]{{\[}}%[[VAL_179]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_181:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_182:.*]] = llvm.insertelement %[[VAL_56]], %[[VAL_180]]{{\[}}%[[VAL_181]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_183:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_6:.*]] = llvm.insertelement %[[VAL_57]], %[[VAL_182]]{{\[}}%[[VAL_183]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_185:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_186:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_187:.*]] = llvm.insertelement %[[VAL_58]], %[[VAL_185]]{{\[}}%[[VAL_186]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_188:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_189:.*]] = llvm.insertelement %[[VAL_59]], %[[VAL_187]]{{\[}}%[[VAL_188]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_190:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_191:.*]] = llvm.insertelement %[[VAL_60]], %[[VAL_189]]{{\[}}%[[VAL_190]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_192:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_193:.*]] = llvm.insertelement %[[VAL_61]], %[[VAL_191]]{{\[}}%[[VAL_192]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_194:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_195:.*]] = llvm.insertelement %[[VAL_62]], %[[VAL_193]]{{\[}}%[[VAL_194]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_196:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_197:.*]] = llvm.insertelement %[[VAL_63]], %[[VAL_195]]{{\[}}%[[VAL_196]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_198:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_199:.*]] = llvm.insertelement %[[VAL_64]], %[[VAL_197]]{{\[}}%[[VAL_198]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_200:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_7:.*]] = llvm.insertelement %[[VAL_65]], %[[VAL_199]]{{\[}}%[[VAL_200]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_202:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_203:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_202]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_204:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_205:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_204]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_206:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_207:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_206]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_208:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_209:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_208]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_210:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_211:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_210]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_212:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_213:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_212]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_214:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_215:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_214]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_216:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_217:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_216]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_218:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_219:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_218]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_220:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_221:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_220]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_222:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_223:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_222]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_224:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_225:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_224]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_226:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_227:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_226]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_228:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_229:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_228]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_230:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_231:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_230]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_232:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_233:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_232]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_234:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_235:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_234]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_236:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_237:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_236]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_238:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_239:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_238]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_240:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_241:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_240]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_242:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_243:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_242]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_244:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_245:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_244]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_246:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_247:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_246]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_248:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_249:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_248]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_250:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_251:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_250]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_252:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_253:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_252]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_254:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_255:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_254]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_256:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_257:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_256]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_258:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_259:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_258]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_260:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_261:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_260]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_262:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_263:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_262]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_264:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_265:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_264]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_266:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_267:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_266]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_268:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_269:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_268]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_270:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_271:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_270]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_272:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_273:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_272]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_274:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_275:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_274]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_276:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_277:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_276]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_278:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_279:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_278]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_280:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_281:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_280]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_282:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_283:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_282]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_284:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_285:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_284]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_286:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_287:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_286]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_288:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_289:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_288]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_290:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_291:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_290]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_292:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_293:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_292]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_294:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_295:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_294]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_296:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_297:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_296]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_298:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_299:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_298]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_300:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_301:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_300]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_302:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_303:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_302]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_304:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_305:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_304]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_306:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_307:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_306]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_308:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_309:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_308]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_310:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_311:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_310]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_312:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_313:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_312]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_314:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_315:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_314]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_316:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_317:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_316]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_318:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_319:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_318]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_320:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_321:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_320]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_322:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_323:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_322]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_324:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_325:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_324]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_326:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_327:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_326]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_328:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_329:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_328]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_330:.*]] = llvm.mlir.undef
    // CHECK:           %[[VAL_331:.*]] = llvm.insertvalue %[[VAL_203]], %[[VAL_330]][0]
    // CHECK:           %[[VAL_332:.*]] = llvm.insertvalue %[[VAL_205]], %[[VAL_331]][1]
    // CHECK:           %[[VAL_333:.*]] = llvm.insertvalue %[[VAL_207]], %[[VAL_332]][2]
    // CHECK:           %[[VAL_334:.*]] = llvm.insertvalue %[[VAL_209]], %[[VAL_333]][3]
    // CHECK:           %[[VAL_335:.*]] = llvm.insertvalue %[[VAL_211]], %[[VAL_334]][4]
    // CHECK:           %[[VAL_336:.*]] = llvm.insertvalue %[[VAL_213]], %[[VAL_335]][5]
    // CHECK:           %[[VAL_337:.*]] = llvm.insertvalue %[[VAL_215]], %[[VAL_336]][6]
    // CHECK:           %[[VAL_338:.*]] = llvm.insertvalue %[[VAL_217]], %[[VAL_337]][7]
    // CHECK:           %[[VAL_339:.*]] = llvm.insertvalue %[[VAL_219]], %[[VAL_338]][8]
    // CHECK:           %[[VAL_340:.*]] = llvm.insertvalue %[[VAL_221]], %[[VAL_339]][9]
    // CHECK:           %[[VAL_341:.*]] = llvm.insertvalue %[[VAL_223]], %[[VAL_340]][10]
    // CHECK:           %[[VAL_342:.*]] = llvm.insertvalue %[[VAL_225]], %[[VAL_341]][11]
    // CHECK:           %[[VAL_343:.*]] = llvm.insertvalue %[[VAL_227]], %[[VAL_342]][12]
    // CHECK:           %[[VAL_344:.*]] = llvm.insertvalue %[[VAL_229]], %[[VAL_343]][13]
    // CHECK:           %[[VAL_345:.*]] = llvm.insertvalue %[[VAL_231]], %[[VAL_344]][14]
    // CHECK:           %[[VAL_346:.*]] = llvm.insertvalue %[[VAL_233]], %[[VAL_345]][15]
    // CHECK:           %[[VAL_347:.*]] = llvm.insertvalue %[[VAL_235]], %[[VAL_346]][16]
    // CHECK:           %[[VAL_348:.*]] = llvm.insertvalue %[[VAL_237]], %[[VAL_347]][17]
    // CHECK:           %[[VAL_349:.*]] = llvm.insertvalue %[[VAL_239]], %[[VAL_348]][18]
    // CHECK:           %[[VAL_350:.*]] = llvm.insertvalue %[[VAL_241]], %[[VAL_349]][19]
    // CHECK:           %[[VAL_351:.*]] = llvm.insertvalue %[[VAL_243]], %[[VAL_350]][20]
    // CHECK:           %[[VAL_352:.*]] = llvm.insertvalue %[[VAL_245]], %[[VAL_351]][21]
    // CHECK:           %[[VAL_353:.*]] = llvm.insertvalue %[[VAL_247]], %[[VAL_352]][22]
    // CHECK:           %[[VAL_354:.*]] = llvm.insertvalue %[[VAL_249]], %[[VAL_353]][23]
    // CHECK:           %[[VAL_355:.*]] = llvm.insertvalue %[[VAL_251]], %[[VAL_354]][24]
    // CHECK:           %[[VAL_356:.*]] = llvm.insertvalue %[[VAL_253]], %[[VAL_355]][25]
    // CHECK:           %[[VAL_357:.*]] = llvm.insertvalue %[[VAL_255]], %[[VAL_356]][26]
    // CHECK:           %[[VAL_358:.*]] = llvm.insertvalue %[[VAL_257]], %[[VAL_357]][27]
    // CHECK:           %[[VAL_359:.*]] = llvm.insertvalue %[[VAL_259]], %[[VAL_358]][28]
    // CHECK:           %[[VAL_360:.*]] = llvm.insertvalue %[[VAL_261]], %[[VAL_359]][29]
    // CHECK:           %[[VAL_361:.*]] = llvm.insertvalue %[[VAL_263]], %[[VAL_360]][30]
    // CHECK:           %[[VAL_362:.*]] = llvm.insertvalue %[[VAL_265]], %[[VAL_361]][31]
    // CHECK:           %[[VAL_363:.*]] = llvm.insertvalue %[[VAL_267]], %[[VAL_362]][32]
    // CHECK:           %[[VAL_364:.*]] = llvm.insertvalue %[[VAL_269]], %[[VAL_363]][33]
    // CHECK:           %[[VAL_365:.*]] = llvm.insertvalue %[[VAL_271]], %[[VAL_364]][34]
    // CHECK:           %[[VAL_366:.*]] = llvm.insertvalue %[[VAL_273]], %[[VAL_365]][35]
    // CHECK:           %[[VAL_367:.*]] = llvm.insertvalue %[[VAL_275]], %[[VAL_366]][36]
    // CHECK:           %[[VAL_368:.*]] = llvm.insertvalue %[[VAL_277]], %[[VAL_367]][37]
    // CHECK:           %[[VAL_369:.*]] = llvm.insertvalue %[[VAL_279]], %[[VAL_368]][38]
    // CHECK:           %[[VAL_370:.*]] = llvm.insertvalue %[[VAL_281]], %[[VAL_369]][39]
    // CHECK:           %[[VAL_371:.*]] = llvm.insertvalue %[[VAL_283]], %[[VAL_370]][40]
    // CHECK:           %[[VAL_372:.*]] = llvm.insertvalue %[[VAL_285]], %[[VAL_371]][41]
    // CHECK:           %[[VAL_373:.*]] = llvm.insertvalue %[[VAL_287]], %[[VAL_372]][42]
    // CHECK:           %[[VAL_374:.*]] = llvm.insertvalue %[[VAL_289]], %[[VAL_373]][43]
    // CHECK:           %[[VAL_375:.*]] = llvm.insertvalue %[[VAL_291]], %[[VAL_374]][44]
    // CHECK:           %[[VAL_376:.*]] = llvm.insertvalue %[[VAL_293]], %[[VAL_375]][45]
    // CHECK:           %[[VAL_377:.*]] = llvm.insertvalue %[[VAL_295]], %[[VAL_376]][46]
    // CHECK:           %[[VAL_378:.*]] = llvm.insertvalue %[[VAL_297]], %[[VAL_377]][47]
    // CHECK:           %[[VAL_379:.*]] = llvm.insertvalue %[[VAL_299]], %[[VAL_378]][48]
    // CHECK:           %[[VAL_380:.*]] = llvm.insertvalue %[[VAL_301]], %[[VAL_379]][49]
    // CHECK:           %[[VAL_381:.*]] = llvm.insertvalue %[[VAL_303]], %[[VAL_380]][50]
    // CHECK:           %[[VAL_382:.*]] = llvm.insertvalue %[[VAL_305]], %[[VAL_381]][51]
    // CHECK:           %[[VAL_383:.*]] = llvm.insertvalue %[[VAL_307]], %[[VAL_382]][52]
    // CHECK:           %[[VAL_384:.*]] = llvm.insertvalue %[[VAL_309]], %[[VAL_383]][53]
    // CHECK:           %[[VAL_385:.*]] = llvm.insertvalue %[[VAL_311]], %[[VAL_384]][54]
    // CHECK:           %[[VAL_386:.*]] = llvm.insertvalue %[[VAL_313]], %[[VAL_385]][55]
    // CHECK:           %[[VAL_387:.*]] = llvm.insertvalue %[[VAL_315]], %[[VAL_386]][56]
    // CHECK:           %[[VAL_388:.*]] = llvm.insertvalue %[[VAL_317]], %[[VAL_387]][57]
    // CHECK:           %[[VAL_389:.*]] = llvm.insertvalue %[[VAL_319]], %[[VAL_388]][58]
    // CHECK:           %[[VAL_390:.*]] = llvm.insertvalue %[[VAL_321]], %[[VAL_389]][59]
    // CHECK:           %[[VAL_391:.*]] = llvm.insertvalue %[[VAL_323]], %[[VAL_390]][60]
    // CHECK:           %[[VAL_392:.*]] = llvm.insertvalue %[[VAL_325]], %[[VAL_391]][61]
    // CHECK:           %[[VAL_393:.*]] = llvm.insertvalue %[[VAL_327]], %[[VAL_392]][62]
    // CHECK:           %[[VAL_394:.*]] = llvm.insertvalue %[[VAL_329]], %[[VAL_393]][63]
    %108 = triton_gpu.convert_layout %arg : tensor<1024x32xf16, #mma> -> tensor<1024x32xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>>
    tt.return
  }
}

// -----

#mma = #triton_intel_gpu.dpas<{repeatCount = 8, systolicDepth = 8, executionSize = 16, opsPerChan = 2, threadsPerWarp = 16, warpsPerCTA = [32, 1], repCluster = [4, 2], A = [8, 16], B = [16, 32], C = [8, 32]}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 32 : i32, triton_gpu.target = "xpu:DEVICE_ARCH.PVC", "triton_gpu.threads-per-warp" = 16 : i32, triton_intel_gpu.min_sg_size = 16 : i32, triton_intel_gpu.support_dpas, triton_intel_gpu.support_sg_2d_block} {
  // CHECK-LABEL: convert_dpas_to_dot_rep_cluster_4_2
  // CHECK-SAME:  %[[VAL_0:.*]]: !llvm.struct<({{.*}})>) attributes {noinline = false, triton_gen.intel_reqd_sub_group_size = [16 : i32], triton_gen.max_work_group_size = [512 : i32, 1 : i32, 1 : i32]} {
  tt.func public @convert_dpas_to_dot_rep_cluster_4_2(%arg: tensor<1024x32xf16, #mma>) attributes {noinline = false} {
    // COM: The repetitions order of dpas layout when the GEMM tiling is clustered as repCluster [1, 2]:
    // COM:   - 0, 1, 2, 3, 4, 5, 6, 7.
    // COM: The repetitions order of dot layout when the GEMM tiling is clustered as repCluster [1, 2]:
    // COM:   - 0, 2, 4, 6, 1, 3, 5, 7.
    // CHECK:           %[[VAL_2:.*]] = llvm.extractvalue %[[VAL_0]][0]
    // CHECK:           %[[VAL_3:.*]] = llvm.extractvalue %[[VAL_0]][1]
    // CHECK:           %[[VAL_4:.*]] = llvm.extractvalue %[[VAL_0]][2]
    // CHECK:           %[[VAL_5:.*]] = llvm.extractvalue %[[VAL_0]][3]
    // CHECK:           %[[VAL_6:.*]] = llvm.extractvalue %[[VAL_0]][4]
    // CHECK:           %[[VAL_7:.*]] = llvm.extractvalue %[[VAL_0]][5]
    // CHECK:           %[[VAL_8:.*]] = llvm.extractvalue %[[VAL_0]][6]
    // CHECK:           %[[VAL_9:.*]] = llvm.extractvalue %[[VAL_0]][7]
    // CHECK:           %[[VAL_10:.*]] = llvm.extractvalue %[[VAL_0]][8]
    // CHECK:           %[[VAL_11:.*]] = llvm.extractvalue %[[VAL_0]][9]
    // CHECK:           %[[VAL_12:.*]] = llvm.extractvalue %[[VAL_0]][10]
    // CHECK:           %[[VAL_13:.*]] = llvm.extractvalue %[[VAL_0]][11]
    // CHECK:           %[[VAL_14:.*]] = llvm.extractvalue %[[VAL_0]][12]
    // CHECK:           %[[VAL_15:.*]] = llvm.extractvalue %[[VAL_0]][13]
    // CHECK:           %[[VAL_16:.*]] = llvm.extractvalue %[[VAL_0]][14]
    // CHECK:           %[[VAL_17:.*]] = llvm.extractvalue %[[VAL_0]][15]
    // CHECK:           %[[VAL_18:.*]] = llvm.extractvalue %[[VAL_0]][16]
    // CHECK:           %[[VAL_19:.*]] = llvm.extractvalue %[[VAL_0]][17]
    // CHECK:           %[[VAL_20:.*]] = llvm.extractvalue %[[VAL_0]][18]
    // CHECK:           %[[VAL_21:.*]] = llvm.extractvalue %[[VAL_0]][19]
    // CHECK:           %[[VAL_22:.*]] = llvm.extractvalue %[[VAL_0]][20]
    // CHECK:           %[[VAL_23:.*]] = llvm.extractvalue %[[VAL_0]][21]
    // CHECK:           %[[VAL_24:.*]] = llvm.extractvalue %[[VAL_0]][22]
    // CHECK:           %[[VAL_25:.*]] = llvm.extractvalue %[[VAL_0]][23]
    // CHECK:           %[[VAL_26:.*]] = llvm.extractvalue %[[VAL_0]][24]
    // CHECK:           %[[VAL_27:.*]] = llvm.extractvalue %[[VAL_0]][25]
    // CHECK:           %[[VAL_28:.*]] = llvm.extractvalue %[[VAL_0]][26]
    // CHECK:           %[[VAL_29:.*]] = llvm.extractvalue %[[VAL_0]][27]
    // CHECK:           %[[VAL_30:.*]] = llvm.extractvalue %[[VAL_0]][28]
    // CHECK:           %[[VAL_31:.*]] = llvm.extractvalue %[[VAL_0]][29]
    // CHECK:           %[[VAL_32:.*]] = llvm.extractvalue %[[VAL_0]][30]
    // CHECK:           %[[VAL_33:.*]] = llvm.extractvalue %[[VAL_0]][31]
    // CHECK:           %[[VAL_34:.*]] = llvm.extractvalue %[[VAL_0]][32]
    // CHECK:           %[[VAL_35:.*]] = llvm.extractvalue %[[VAL_0]][33]
    // CHECK:           %[[VAL_36:.*]] = llvm.extractvalue %[[VAL_0]][34]
    // CHECK:           %[[VAL_37:.*]] = llvm.extractvalue %[[VAL_0]][35]
    // CHECK:           %[[VAL_38:.*]] = llvm.extractvalue %[[VAL_0]][36]
    // CHECK:           %[[VAL_39:.*]] = llvm.extractvalue %[[VAL_0]][37]
    // CHECK:           %[[VAL_40:.*]] = llvm.extractvalue %[[VAL_0]][38]
    // CHECK:           %[[VAL_41:.*]] = llvm.extractvalue %[[VAL_0]][39]
    // CHECK:           %[[VAL_42:.*]] = llvm.extractvalue %[[VAL_0]][40]
    // CHECK:           %[[VAL_43:.*]] = llvm.extractvalue %[[VAL_0]][41]
    // CHECK:           %[[VAL_44:.*]] = llvm.extractvalue %[[VAL_0]][42]
    // CHECK:           %[[VAL_45:.*]] = llvm.extractvalue %[[VAL_0]][43]
    // CHECK:           %[[VAL_46:.*]] = llvm.extractvalue %[[VAL_0]][44]
    // CHECK:           %[[VAL_47:.*]] = llvm.extractvalue %[[VAL_0]][45]
    // CHECK:           %[[VAL_48:.*]] = llvm.extractvalue %[[VAL_0]][46]
    // CHECK:           %[[VAL_49:.*]] = llvm.extractvalue %[[VAL_0]][47]
    // CHECK:           %[[VAL_50:.*]] = llvm.extractvalue %[[VAL_0]][48]
    // CHECK:           %[[VAL_51:.*]] = llvm.extractvalue %[[VAL_0]][49]
    // CHECK:           %[[VAL_52:.*]] = llvm.extractvalue %[[VAL_0]][50]
    // CHECK:           %[[VAL_53:.*]] = llvm.extractvalue %[[VAL_0]][51]
    // CHECK:           %[[VAL_54:.*]] = llvm.extractvalue %[[VAL_0]][52]
    // CHECK:           %[[VAL_55:.*]] = llvm.extractvalue %[[VAL_0]][53]
    // CHECK:           %[[VAL_56:.*]] = llvm.extractvalue %[[VAL_0]][54]
    // CHECK:           %[[VAL_57:.*]] = llvm.extractvalue %[[VAL_0]][55]
    // CHECK:           %[[VAL_58:.*]] = llvm.extractvalue %[[VAL_0]][56]
    // CHECK:           %[[VAL_59:.*]] = llvm.extractvalue %[[VAL_0]][57]
    // CHECK:           %[[VAL_60:.*]] = llvm.extractvalue %[[VAL_0]][58]
    // CHECK:           %[[VAL_61:.*]] = llvm.extractvalue %[[VAL_0]][59]
    // CHECK:           %[[VAL_62:.*]] = llvm.extractvalue %[[VAL_0]][60]
    // CHECK:           %[[VAL_63:.*]] = llvm.extractvalue %[[VAL_0]][61]
    // CHECK:           %[[VAL_64:.*]] = llvm.extractvalue %[[VAL_0]][62]
    // CHECK:           %[[VAL_65:.*]] = llvm.extractvalue %[[VAL_0]][63]
    // CHECK:           %[[VAL_66:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_67:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_68:.*]] = llvm.insertelement %[[VAL_2]], %[[VAL_66]]{{\[}}%[[VAL_67]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_69:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_70:.*]] = llvm.insertelement %[[VAL_3]], %[[VAL_68]]{{\[}}%[[VAL_69]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_71:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_72:.*]] = llvm.insertelement %[[VAL_4]], %[[VAL_70]]{{\[}}%[[VAL_71]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_73:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_74:.*]] = llvm.insertelement %[[VAL_5]], %[[VAL_72]]{{\[}}%[[VAL_73]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_75:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_76:.*]] = llvm.insertelement %[[VAL_6]], %[[VAL_74]]{{\[}}%[[VAL_75]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_77:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_78:.*]] = llvm.insertelement %[[VAL_7]], %[[VAL_76]]{{\[}}%[[VAL_77]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_79:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_80:.*]] = llvm.insertelement %[[VAL_8]], %[[VAL_78]]{{\[}}%[[VAL_79]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_81:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_0:.*]] = llvm.insertelement %[[VAL_9]], %[[VAL_80]]{{\[}}%[[VAL_81]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_83:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_84:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_85:.*]] = llvm.insertelement %[[VAL_10]], %[[VAL_83]]{{\[}}%[[VAL_84]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_86:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_87:.*]] = llvm.insertelement %[[VAL_11]], %[[VAL_85]]{{\[}}%[[VAL_86]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_88:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_89:.*]] = llvm.insertelement %[[VAL_12]], %[[VAL_87]]{{\[}}%[[VAL_88]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_90:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_91:.*]] = llvm.insertelement %[[VAL_13]], %[[VAL_89]]{{\[}}%[[VAL_90]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_92:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_93:.*]] = llvm.insertelement %[[VAL_14]], %[[VAL_91]]{{\[}}%[[VAL_92]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_94:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_95:.*]] = llvm.insertelement %[[VAL_15]], %[[VAL_93]]{{\[}}%[[VAL_94]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_96:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_97:.*]] = llvm.insertelement %[[VAL_16]], %[[VAL_95]]{{\[}}%[[VAL_96]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_98:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_1:.*]] = llvm.insertelement %[[VAL_17]], %[[VAL_97]]{{\[}}%[[VAL_98]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_100:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_101:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_102:.*]] = llvm.insertelement %[[VAL_18]], %[[VAL_100]]{{\[}}%[[VAL_101]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_103:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_104:.*]] = llvm.insertelement %[[VAL_19]], %[[VAL_102]]{{\[}}%[[VAL_103]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_105:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_106:.*]] = llvm.insertelement %[[VAL_20]], %[[VAL_104]]{{\[}}%[[VAL_105]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_107:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_108:.*]] = llvm.insertelement %[[VAL_21]], %[[VAL_106]]{{\[}}%[[VAL_107]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_109:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_110:.*]] = llvm.insertelement %[[VAL_22]], %[[VAL_108]]{{\[}}%[[VAL_109]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_111:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_112:.*]] = llvm.insertelement %[[VAL_23]], %[[VAL_110]]{{\[}}%[[VAL_111]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_113:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_114:.*]] = llvm.insertelement %[[VAL_24]], %[[VAL_112]]{{\[}}%[[VAL_113]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_115:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_2:.*]] = llvm.insertelement %[[VAL_25]], %[[VAL_114]]{{\[}}%[[VAL_115]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_117:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_118:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_119:.*]] = llvm.insertelement %[[VAL_26]], %[[VAL_117]]{{\[}}%[[VAL_118]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_120:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_121:.*]] = llvm.insertelement %[[VAL_27]], %[[VAL_119]]{{\[}}%[[VAL_120]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_122:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_123:.*]] = llvm.insertelement %[[VAL_28]], %[[VAL_121]]{{\[}}%[[VAL_122]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_124:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_125:.*]] = llvm.insertelement %[[VAL_29]], %[[VAL_123]]{{\[}}%[[VAL_124]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_126:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_127:.*]] = llvm.insertelement %[[VAL_30]], %[[VAL_125]]{{\[}}%[[VAL_126]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_128:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_129:.*]] = llvm.insertelement %[[VAL_31]], %[[VAL_127]]{{\[}}%[[VAL_128]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_130:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_131:.*]] = llvm.insertelement %[[VAL_32]], %[[VAL_129]]{{\[}}%[[VAL_130]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_132:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_3:.*]] = llvm.insertelement %[[VAL_33]], %[[VAL_131]]{{\[}}%[[VAL_132]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_134:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_135:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_136:.*]] = llvm.insertelement %[[VAL_34]], %[[VAL_134]]{{\[}}%[[VAL_135]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_137:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_138:.*]] = llvm.insertelement %[[VAL_35]], %[[VAL_136]]{{\[}}%[[VAL_137]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_139:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_140:.*]] = llvm.insertelement %[[VAL_36]], %[[VAL_138]]{{\[}}%[[VAL_139]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_141:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_142:.*]] = llvm.insertelement %[[VAL_37]], %[[VAL_140]]{{\[}}%[[VAL_141]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_143:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_144:.*]] = llvm.insertelement %[[VAL_38]], %[[VAL_142]]{{\[}}%[[VAL_143]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_145:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_146:.*]] = llvm.insertelement %[[VAL_39]], %[[VAL_144]]{{\[}}%[[VAL_145]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_147:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_148:.*]] = llvm.insertelement %[[VAL_40]], %[[VAL_146]]{{\[}}%[[VAL_147]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_149:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_4:.*]] = llvm.insertelement %[[VAL_41]], %[[VAL_148]]{{\[}}%[[VAL_149]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_151:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_152:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_153:.*]] = llvm.insertelement %[[VAL_42]], %[[VAL_151]]{{\[}}%[[VAL_152]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_154:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_155:.*]] = llvm.insertelement %[[VAL_43]], %[[VAL_153]]{{\[}}%[[VAL_154]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_156:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_157:.*]] = llvm.insertelement %[[VAL_44]], %[[VAL_155]]{{\[}}%[[VAL_156]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_158:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_159:.*]] = llvm.insertelement %[[VAL_45]], %[[VAL_157]]{{\[}}%[[VAL_158]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_160:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_161:.*]] = llvm.insertelement %[[VAL_46]], %[[VAL_159]]{{\[}}%[[VAL_160]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_162:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_163:.*]] = llvm.insertelement %[[VAL_47]], %[[VAL_161]]{{\[}}%[[VAL_162]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_164:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_165:.*]] = llvm.insertelement %[[VAL_48]], %[[VAL_163]]{{\[}}%[[VAL_164]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_166:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_5:.*]] = llvm.insertelement %[[VAL_49]], %[[VAL_165]]{{\[}}%[[VAL_166]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_168:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_169:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_170:.*]] = llvm.insertelement %[[VAL_50]], %[[VAL_168]]{{\[}}%[[VAL_169]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_171:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_172:.*]] = llvm.insertelement %[[VAL_51]], %[[VAL_170]]{{\[}}%[[VAL_171]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_173:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_174:.*]] = llvm.insertelement %[[VAL_52]], %[[VAL_172]]{{\[}}%[[VAL_173]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_175:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_176:.*]] = llvm.insertelement %[[VAL_53]], %[[VAL_174]]{{\[}}%[[VAL_175]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_177:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_178:.*]] = llvm.insertelement %[[VAL_54]], %[[VAL_176]]{{\[}}%[[VAL_177]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_179:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_180:.*]] = llvm.insertelement %[[VAL_55]], %[[VAL_178]]{{\[}}%[[VAL_179]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_181:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_182:.*]] = llvm.insertelement %[[VAL_56]], %[[VAL_180]]{{\[}}%[[VAL_181]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_183:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_6:.*]] = llvm.insertelement %[[VAL_57]], %[[VAL_182]]{{\[}}%[[VAL_183]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_185:.*]] = llvm.mlir.undef : vector<8xf16>
    // CHECK:           %[[VAL_186:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_187:.*]] = llvm.insertelement %[[VAL_58]], %[[VAL_185]]{{\[}}%[[VAL_186]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_188:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_189:.*]] = llvm.insertelement %[[VAL_59]], %[[VAL_187]]{{\[}}%[[VAL_188]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_190:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_191:.*]] = llvm.insertelement %[[VAL_60]], %[[VAL_189]]{{\[}}%[[VAL_190]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_192:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_193:.*]] = llvm.insertelement %[[VAL_61]], %[[VAL_191]]{{\[}}%[[VAL_192]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_194:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_195:.*]] = llvm.insertelement %[[VAL_62]], %[[VAL_193]]{{\[}}%[[VAL_194]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_196:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_197:.*]] = llvm.insertelement %[[VAL_63]], %[[VAL_195]]{{\[}}%[[VAL_196]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_198:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_199:.*]] = llvm.insertelement %[[VAL_64]], %[[VAL_197]]{{\[}}%[[VAL_198]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_200:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[REP_7:.*]] = llvm.insertelement %[[VAL_65]], %[[VAL_199]]{{\[}}%[[VAL_200]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_202:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_203:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_202]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_204:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_205:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_204]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_206:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_207:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_206]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_208:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_209:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_208]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_210:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_211:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_210]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_212:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_213:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_212]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_214:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_215:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_214]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_216:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_217:.*]] = llvm.extractelement %[[REP_0]]{{\[}}%[[VAL_216]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_218:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_219:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_218]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_220:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_221:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_220]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_222:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_223:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_222]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_224:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_225:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_224]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_226:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_227:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_226]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_228:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_229:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_228]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_230:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_231:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_230]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_232:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_233:.*]] = llvm.extractelement %[[REP_2]]{{\[}}%[[VAL_232]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_234:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_235:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_234]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_236:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_237:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_236]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_238:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_239:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_238]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_240:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_241:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_240]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_242:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_243:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_242]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_244:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_245:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_244]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_246:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_247:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_246]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_248:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_249:.*]] = llvm.extractelement %[[REP_4]]{{\[}}%[[VAL_248]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_250:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_251:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_250]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_252:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_253:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_252]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_254:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_255:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_254]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_256:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_257:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_256]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_258:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_259:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_258]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_260:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_261:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_260]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_262:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_263:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_262]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_264:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_265:.*]] = llvm.extractelement %[[REP_6]]{{\[}}%[[VAL_264]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_266:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_267:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_266]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_268:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_269:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_268]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_270:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_271:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_270]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_272:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_273:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_272]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_274:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_275:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_274]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_276:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_277:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_276]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_278:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_279:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_278]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_280:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_281:.*]] = llvm.extractelement %[[REP_1]]{{\[}}%[[VAL_280]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_282:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_283:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_282]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_284:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_285:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_284]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_286:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_287:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_286]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_288:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_289:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_288]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_290:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_291:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_290]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_292:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_293:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_292]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_294:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_295:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_294]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_296:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_297:.*]] = llvm.extractelement %[[REP_3]]{{\[}}%[[VAL_296]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_298:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_299:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_298]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_300:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_301:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_300]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_302:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_303:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_302]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_304:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_305:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_304]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_306:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_307:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_306]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_308:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_309:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_308]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_310:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_311:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_310]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_312:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_313:.*]] = llvm.extractelement %[[REP_5]]{{\[}}%[[VAL_312]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_314:.*]] = llvm.mlir.constant(0 : i32) : i32
    // CHECK:           %[[VAL_315:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_314]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_316:.*]] = llvm.mlir.constant(1 : i32) : i32
    // CHECK:           %[[VAL_317:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_316]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_318:.*]] = llvm.mlir.constant(2 : i32) : i32
    // CHECK:           %[[VAL_319:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_318]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_320:.*]] = llvm.mlir.constant(3 : i32) : i32
    // CHECK:           %[[VAL_321:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_320]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_322:.*]] = llvm.mlir.constant(4 : i32) : i32
    // CHECK:           %[[VAL_323:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_322]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_324:.*]] = llvm.mlir.constant(5 : i32) : i32
    // CHECK:           %[[VAL_325:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_324]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_326:.*]] = llvm.mlir.constant(6 : i32) : i32
    // CHECK:           %[[VAL_327:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_326]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_328:.*]] = llvm.mlir.constant(7 : i32) : i32
    // CHECK:           %[[VAL_329:.*]] = llvm.extractelement %[[REP_7]]{{\[}}%[[VAL_328]] : i32] : vector<8xf16>
    // CHECK:           %[[VAL_330:.*]] = llvm.mlir.undef
    // CHECK:           %[[VAL_331:.*]] = llvm.insertvalue %[[VAL_203]], %[[VAL_330]][0]
    // CHECK:           %[[VAL_332:.*]] = llvm.insertvalue %[[VAL_205]], %[[VAL_331]][1]
    // CHECK:           %[[VAL_333:.*]] = llvm.insertvalue %[[VAL_207]], %[[VAL_332]][2]
    // CHECK:           %[[VAL_334:.*]] = llvm.insertvalue %[[VAL_209]], %[[VAL_333]][3]
    // CHECK:           %[[VAL_335:.*]] = llvm.insertvalue %[[VAL_211]], %[[VAL_334]][4]
    // CHECK:           %[[VAL_336:.*]] = llvm.insertvalue %[[VAL_213]], %[[VAL_335]][5]
    // CHECK:           %[[VAL_337:.*]] = llvm.insertvalue %[[VAL_215]], %[[VAL_336]][6]
    // CHECK:           %[[VAL_338:.*]] = llvm.insertvalue %[[VAL_217]], %[[VAL_337]][7]
    // CHECK:           %[[VAL_339:.*]] = llvm.insertvalue %[[VAL_219]], %[[VAL_338]][8]
    // CHECK:           %[[VAL_340:.*]] = llvm.insertvalue %[[VAL_221]], %[[VAL_339]][9]
    // CHECK:           %[[VAL_341:.*]] = llvm.insertvalue %[[VAL_223]], %[[VAL_340]][10]
    // CHECK:           %[[VAL_342:.*]] = llvm.insertvalue %[[VAL_225]], %[[VAL_341]][11]
    // CHECK:           %[[VAL_343:.*]] = llvm.insertvalue %[[VAL_227]], %[[VAL_342]][12]
    // CHECK:           %[[VAL_344:.*]] = llvm.insertvalue %[[VAL_229]], %[[VAL_343]][13]
    // CHECK:           %[[VAL_345:.*]] = llvm.insertvalue %[[VAL_231]], %[[VAL_344]][14]
    // CHECK:           %[[VAL_346:.*]] = llvm.insertvalue %[[VAL_233]], %[[VAL_345]][15]
    // CHECK:           %[[VAL_347:.*]] = llvm.insertvalue %[[VAL_235]], %[[VAL_346]][16]
    // CHECK:           %[[VAL_348:.*]] = llvm.insertvalue %[[VAL_237]], %[[VAL_347]][17]
    // CHECK:           %[[VAL_349:.*]] = llvm.insertvalue %[[VAL_239]], %[[VAL_348]][18]
    // CHECK:           %[[VAL_350:.*]] = llvm.insertvalue %[[VAL_241]], %[[VAL_349]][19]
    // CHECK:           %[[VAL_351:.*]] = llvm.insertvalue %[[VAL_243]], %[[VAL_350]][20]
    // CHECK:           %[[VAL_352:.*]] = llvm.insertvalue %[[VAL_245]], %[[VAL_351]][21]
    // CHECK:           %[[VAL_353:.*]] = llvm.insertvalue %[[VAL_247]], %[[VAL_352]][22]
    // CHECK:           %[[VAL_354:.*]] = llvm.insertvalue %[[VAL_249]], %[[VAL_353]][23]
    // CHECK:           %[[VAL_355:.*]] = llvm.insertvalue %[[VAL_251]], %[[VAL_354]][24]
    // CHECK:           %[[VAL_356:.*]] = llvm.insertvalue %[[VAL_253]], %[[VAL_355]][25]
    // CHECK:           %[[VAL_357:.*]] = llvm.insertvalue %[[VAL_255]], %[[VAL_356]][26]
    // CHECK:           %[[VAL_358:.*]] = llvm.insertvalue %[[VAL_257]], %[[VAL_357]][27]
    // CHECK:           %[[VAL_359:.*]] = llvm.insertvalue %[[VAL_259]], %[[VAL_358]][28]
    // CHECK:           %[[VAL_360:.*]] = llvm.insertvalue %[[VAL_261]], %[[VAL_359]][29]
    // CHECK:           %[[VAL_361:.*]] = llvm.insertvalue %[[VAL_263]], %[[VAL_360]][30]
    // CHECK:           %[[VAL_362:.*]] = llvm.insertvalue %[[VAL_265]], %[[VAL_361]][31]
    // CHECK:           %[[VAL_363:.*]] = llvm.insertvalue %[[VAL_267]], %[[VAL_362]][32]
    // CHECK:           %[[VAL_364:.*]] = llvm.insertvalue %[[VAL_269]], %[[VAL_363]][33]
    // CHECK:           %[[VAL_365:.*]] = llvm.insertvalue %[[VAL_271]], %[[VAL_364]][34]
    // CHECK:           %[[VAL_366:.*]] = llvm.insertvalue %[[VAL_273]], %[[VAL_365]][35]
    // CHECK:           %[[VAL_367:.*]] = llvm.insertvalue %[[VAL_275]], %[[VAL_366]][36]
    // CHECK:           %[[VAL_368:.*]] = llvm.insertvalue %[[VAL_277]], %[[VAL_367]][37]
    // CHECK:           %[[VAL_369:.*]] = llvm.insertvalue %[[VAL_279]], %[[VAL_368]][38]
    // CHECK:           %[[VAL_370:.*]] = llvm.insertvalue %[[VAL_281]], %[[VAL_369]][39]
    // CHECK:           %[[VAL_371:.*]] = llvm.insertvalue %[[VAL_283]], %[[VAL_370]][40]
    // CHECK:           %[[VAL_372:.*]] = llvm.insertvalue %[[VAL_285]], %[[VAL_371]][41]
    // CHECK:           %[[VAL_373:.*]] = llvm.insertvalue %[[VAL_287]], %[[VAL_372]][42]
    // CHECK:           %[[VAL_374:.*]] = llvm.insertvalue %[[VAL_289]], %[[VAL_373]][43]
    // CHECK:           %[[VAL_375:.*]] = llvm.insertvalue %[[VAL_291]], %[[VAL_374]][44]
    // CHECK:           %[[VAL_376:.*]] = llvm.insertvalue %[[VAL_293]], %[[VAL_375]][45]
    // CHECK:           %[[VAL_377:.*]] = llvm.insertvalue %[[VAL_295]], %[[VAL_376]][46]
    // CHECK:           %[[VAL_378:.*]] = llvm.insertvalue %[[VAL_297]], %[[VAL_377]][47]
    // CHECK:           %[[VAL_379:.*]] = llvm.insertvalue %[[VAL_299]], %[[VAL_378]][48]
    // CHECK:           %[[VAL_380:.*]] = llvm.insertvalue %[[VAL_301]], %[[VAL_379]][49]
    // CHECK:           %[[VAL_381:.*]] = llvm.insertvalue %[[VAL_303]], %[[VAL_380]][50]
    // CHECK:           %[[VAL_382:.*]] = llvm.insertvalue %[[VAL_305]], %[[VAL_381]][51]
    // CHECK:           %[[VAL_383:.*]] = llvm.insertvalue %[[VAL_307]], %[[VAL_382]][52]
    // CHECK:           %[[VAL_384:.*]] = llvm.insertvalue %[[VAL_309]], %[[VAL_383]][53]
    // CHECK:           %[[VAL_385:.*]] = llvm.insertvalue %[[VAL_311]], %[[VAL_384]][54]
    // CHECK:           %[[VAL_386:.*]] = llvm.insertvalue %[[VAL_313]], %[[VAL_385]][55]
    // CHECK:           %[[VAL_387:.*]] = llvm.insertvalue %[[VAL_315]], %[[VAL_386]][56]
    // CHECK:           %[[VAL_388:.*]] = llvm.insertvalue %[[VAL_317]], %[[VAL_387]][57]
    // CHECK:           %[[VAL_389:.*]] = llvm.insertvalue %[[VAL_319]], %[[VAL_388]][58]
    // CHECK:           %[[VAL_390:.*]] = llvm.insertvalue %[[VAL_321]], %[[VAL_389]][59]
    // CHECK:           %[[VAL_391:.*]] = llvm.insertvalue %[[VAL_323]], %[[VAL_390]][60]
    // CHECK:           %[[VAL_392:.*]] = llvm.insertvalue %[[VAL_325]], %[[VAL_391]][61]
    // CHECK:           %[[VAL_393:.*]] = llvm.insertvalue %[[VAL_327]], %[[VAL_392]][62]
    // CHECK:           %[[VAL_394:.*]] = llvm.insertvalue %[[VAL_329]], %[[VAL_393]][63]
    %108 = triton_gpu.convert_layout %arg : tensor<1024x32xf16, #mma> -> tensor<1024x32xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>>
    tt.return
  }
}
