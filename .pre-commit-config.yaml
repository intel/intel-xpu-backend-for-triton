repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-ast
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: debug-statements

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.3
    hooks:
      - id: ruff
        files: '^python/.*'
        args: ["--fix", "--line-length", "120"]
        stages: [pre-commit, pre-push, manual]
        exclude: |
          (?x)(
            ^python/triton/runtime/.*|
            ^test/|
            ^docs/conf.py$
          )

  - repo: https://github.com/google/yapf
    rev: be72557
    hooks:
      - id: yapf
        args: ["-p", "-i"]
        stages: [pre-commit, pre-push, manual]
        exclude: "python/test/unit/language/test_line_info.py"

  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v16.0.6
    hooks:
      - id: clang-format
        stages: [pre-commit, pre-push, manual]

  # Expand YAML anchors in files used by github workflows, because github can't
  # do this itself.  This lets us use anchors, which avoids code duplication.
  - repo: local
    hooks:
    - id: expand-yaml-anchors
      name: Expand YAML anchors
      language: golang
      additional_dependencies: [github.com/mikefarah/yq/v4@latest]
      entry: >
        bash -c '
          OUT=".github/workflows/integration-tests.yml"
          IN="$OUT.in"
          echo "# AUTOGENERATED by pre-commit, modify the .in file instead." > "$OUT" &&
          echo >> "$OUT"
          yq "explode(.)" "$IN" >> "$OUT"
        '
      files: ^.github/workflows/integration-tests.yml.*
      pass_filenames: false

  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.9'
    hooks:
    - id: bandit
      files: '^(benchmarks|scripts|third_party/intel)/.*\.py$'
      args: ["-c", "bandit.yaml", "-s", "B404,B603,B607"]
      stages: [pre-commit, pre-push, manual]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.3
    hooks:
      - id: ruff
        files: '^(benchmarks|third_party/intel|scripts)/.*'
        args: ["--fix", "--line-length", "120"]
        stages: [pre-commit, pre-push, manual]

  - repo: https://github.com/pycqa/pylint
    rev: v3.2.6
    hooks:
      - id: pylint
        name: pylint for scripts
        files: '^scripts/.*\.py$'
        # FIXME: will be deleted soon
        exclude: '^scripts/create-noop-ipex\.py$'
        args:
          - --check-quote-consistency=true
          # Max line length 120 is consistent with ruff's one in upstream
          - --max-line-length=120
          # Disable line-too-long: rely on ruff's check for line length
          - --disable=line-too-long
          # Disable import-error: not everything can be imported when pre-commit runs
          - --disable=import-error
          # Disable unused-import: ruff has a corresponding check and supports "noqa: F401"
          - --disable=unused-import
          # FIXME: revisit these checks later
          - --disable=missing-module-docstring
          - --disable=missing-function-docstring
          - --disable=missing-class-docstring
          - --disable=duplicate-code
          - --disable=too-many-locals
          - --disable=too-many-statements
          - --disable=too-many-arguments
        stages: [pre-commit, pre-push, manual]

      - id: pylint
        name: pylint for benchmarks
        files: '^benchmarks/.*\.py$'
        args:
          - --check-quote-consistency=true
          # Max line length 120 is consistent with ruff's one in upstream
          - --max-line-length=120
          # Disable line-too-long: rely on ruff's check for line length
          - --disable=line-too-long
          # Disable import-error: not everything can be imported when pre-commit runs
          - --disable=import-error
          # Disable unused-import: ruff has a corresponding check and supports "noqa: F401"
          - --disable=unused-import
          # Disable invalid_name: benchmarks use a lot of UPPER_SNAKE arguments
          - --disable=invalid-name
          # Disable unnecessary-lambda-assignment: benchmark use a lot of lambda assignments
          - --disable=unnecessary-lambda-assignment
          # FIXME: revisit these checks later
          - --disable=import-outside-toplevel
          - --disable=too-few-public-methods
          - --disable=consider-using-generator
          - --disable=missing-module-docstring
          - --disable=missing-function-docstring
          - --disable=missing-class-docstring
          - --disable=duplicate-code
          - --disable=too-many-locals
          - --disable=too-many-statements
          - --disable=too-many-arguments
          - --disable=fixme
        stages: [pre-commit, pre-push, manual]


exclude: |
  (?x)(
    ^include/triton/external/|
    ^third_party/amd/backend/include/hip/|
    ^third_party/amd/backend/include/hsa/|
    ^third_party/amd/backend/include/roctracer/|
    ^third_party/amd/backend/lib/|
    ^third_party/nvidia/backend/include/cuda.h|
    ^third_party/f2reduce
  )
