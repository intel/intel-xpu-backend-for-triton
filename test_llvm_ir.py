import torch
import triton
import triton.language as tl
import itertools
import tempfile

# empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu


def test_flex_attention():

    ir = """
    ; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@printfFormat_0 = internal addrspace(2) constant [74 x i8] c"idx (%2u, %3u) pid (%u, %u, %u) warp %u lane %u johnlu load tensor B: %f\\0A\\00"
@printfFormat_ = internal addrspace(2) constant [106 x i8] c"A pid=%d warp %d lane %d johnlu 2d load addr=%p, pitch (bytes)=%d, base_width (bytes)=%d, base_height=%d\\0A\\00"

; Function Attrs: mustprogress nounwind willreturn
declare !dbg !9 spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) nonnull readonly, i32, i32, i32, <2 x i32>, ptr nonnull writeonly) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func i64 @_Z17sub_group_shufflelj(i64, i32) local_unnamed_addr #1

declare !dbg !13 spir_func i32 @_Z18__spirv_ocl_printf(ptr addrspace(2), ...) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #2

define spir_kernel void @matmul_tensor_pointer_kernel(ptr addrspace(1) %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %8 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !20
  %9 = trunc i64 %8 to i32, !dbg !20
  %10 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !21
  %11 = trunc i64 %10 to i32, !dbg !21
  %12 = and i32 %11, 15, !dbg !21
  %13 = lshr i32 %11, 4, !dbg !21
  %14 = shl i32 %11, 1, !dbg !21
  %15 = and i32 %14, 96, !dbg !21
  %16 = or disjoint i32 %15, %12, !dbg !21
  %17 = or disjoint i32 %16, 16, !dbg !21
  %18 = or disjoint i32 %16, 128, !dbg !21
  %19 = or disjoint i32 %16, 144, !dbg !21
  %20 = add i32 %3, 63, !dbg !22
  %21 = sdiv i32 %20, 64, !dbg !26
  %22 = icmp sgt i32 %20, 63, !dbg !27
  br i1 %22, label %.lr.ph, label %._crit_edge, !dbg !27

.lr.ph:                                           ; preds = %7
  %23 = shl i32 %5, 6, !dbg !28
  %24 = add i32 %2, 255, !dbg !29
  %25 = sdiv i32 %24, 256, !dbg !31
  %26 = shl nsw i32 %25, 3, !dbg !32
  %.frozen = freeze i32 %9, !dbg !33
  %.frozen544 = freeze i32 %26, !dbg !33
  %27 = sdiv i32 %.frozen, %.frozen544, !dbg !33
  %28 = mul i32 %27, %.frozen544, !dbg !34
  %.decomposed = sub i32 %.frozen, %28, !dbg !34
  %29 = add i32 %1, 127, !dbg !35
  %30 = sdiv i32 %29, 128, !dbg !37
  %31 = shl i32 %27, 3, !dbg !38
  %32 = sub i32 %30, %31, !dbg !39
  %33 = tail call i32 @llvm.smin.i32(i32 %32, i32 8), !dbg !40
  %34 = sdiv i32 %.decomposed, %33, !dbg !41
  %35 = shl i32 %34, 8, !dbg !42
  %36 = or disjoint i32 %19, %35, !dbg !43
  %37 = icmp slt i32 %36, %2, !dbg !44
  %38 = select i1 %37, i32 %36, i32 0, !dbg !45
  %39 = mul i32 %5, 49, !dbg !46
  %40 = add i32 %38, %39, !dbg !47
  %41 = sext i32 %40 to i64, !dbg !48
  %42 = mul i32 %5, 48, !dbg !46
  %43 = add i32 %38, %42, !dbg !47
  %44 = sext i32 %43 to i64, !dbg !48
  %45 = getelementptr half, ptr addrspace(1) %0, i64 %44, !dbg !48
  %46 = or disjoint i32 %18, %35, !dbg !43
  %47 = icmp slt i32 %46, %2, !dbg !44
  %48 = select i1 %47, i32 %46, i32 0, !dbg !45
  %49 = add i32 %48, %39, !dbg !47
  %50 = sext i32 %49 to i64, !dbg !48
  %51 = add i32 %48, %42, !dbg !47
  %52 = sext i32 %51 to i64, !dbg !48
  %53 = getelementptr half, ptr addrspace(1) %0, i64 %52, !dbg !48
  %54 = mul i32 %5, 33, !dbg !46
  %55 = add i32 %38, %54, !dbg !47
  %56 = sext i32 %55 to i64, !dbg !48
  %57 = shl i32 %5, 5, !dbg !46
  %58 = add i32 %38, %57, !dbg !47
  %59 = sext i32 %58 to i64, !dbg !48
  %60 = getelementptr half, ptr addrspace(1) %0, i64 %59, !dbg !48
  %61 = add i32 %48, %54, !dbg !47
  %62 = sext i32 %61 to i64, !dbg !48
  %63 = add i32 %48, %57, !dbg !47
  %64 = sext i32 %63 to i64, !dbg !48
  %65 = getelementptr half, ptr addrspace(1) %0, i64 %64, !dbg !48
  %66 = mul i32 %5, 17, !dbg !46
  %67 = add i32 %38, %66, !dbg !47
  %68 = sext i32 %67 to i64, !dbg !48
  %69 = shl i32 %5, 4, !dbg !46
  %70 = add i32 %38, %69, !dbg !47
  %71 = sext i32 %70 to i64, !dbg !48
  %72 = getelementptr half, ptr addrspace(1) %0, i64 %71, !dbg !48
  %73 = add i32 %48, %66, !dbg !47
  %74 = sext i32 %73 to i64, !dbg !48
  %75 = add i32 %48, %69, !dbg !47
  %76 = sext i32 %75 to i64, !dbg !48
  %77 = getelementptr half, ptr addrspace(1) %0, i64 %76, !dbg !48
  %78 = add i32 %38, %5, !dbg !47
  %79 = sext i32 %78 to i64, !dbg !48
  %80 = sext i32 %38 to i64, !dbg !48
  %81 = getelementptr half, ptr addrspace(1) %0, i64 %80, !dbg !48
  %82 = add i32 %48, %5, !dbg !47
  %83 = sext i32 %82 to i64, !dbg !48
  %84 = sext i32 %48 to i64, !dbg !48
  %85 = getelementptr half, ptr addrspace(1) %0, i64 %84, !dbg !48
  %86 = or disjoint i32 %17, %35, !dbg !43
  %87 = icmp slt i32 %86, %2, !dbg !44
  %88 = select i1 %87, i32 %86, i32 0, !dbg !45
  %89 = add i32 %88, %39, !dbg !47
  %90 = sext i32 %89 to i64, !dbg !48
  %91 = add i32 %88, %42, !dbg !47
  %92 = sext i32 %91 to i64, !dbg !48
  %93 = getelementptr half, ptr addrspace(1) %0, i64 %92, !dbg !48
  %94 = or disjoint i32 %16, %35, !dbg !43
  %95 = icmp slt i32 %94, %2, !dbg !44
  %96 = select i1 %95, i32 %94, i32 0, !dbg !45
  %97 = add i32 %96, %39, !dbg !47
  %98 = sext i32 %97 to i64, !dbg !48
  %99 = add i32 %96, %42, !dbg !47
  %100 = sext i32 %99 to i64, !dbg !48
  %101 = getelementptr half, ptr addrspace(1) %0, i64 %100, !dbg !48
  %102 = add i32 %88, %54, !dbg !47
  %103 = sext i32 %102 to i64, !dbg !48
  %104 = add i32 %88, %57, !dbg !47
  %105 = sext i32 %104 to i64, !dbg !48
  %106 = getelementptr half, ptr addrspace(1) %0, i64 %105, !dbg !48
  %107 = add i32 %96, %54, !dbg !47
  %108 = sext i32 %107 to i64, !dbg !48
  %109 = add i32 %96, %57, !dbg !47
  %110 = sext i32 %109 to i64, !dbg !48
  %111 = getelementptr half, ptr addrspace(1) %0, i64 %110, !dbg !48
  %112 = add i32 %88, %66, !dbg !47
  %113 = sext i32 %112 to i64, !dbg !48
  %114 = add i32 %88, %69, !dbg !47
  %115 = sext i32 %114 to i64, !dbg !48
  %116 = getelementptr half, ptr addrspace(1) %0, i64 %115, !dbg !48
  %117 = add i32 %96, %66, !dbg !47
  %118 = sext i32 %117 to i64, !dbg !48
  %119 = add i32 %96, %69, !dbg !47
  %120 = sext i32 %119 to i64, !dbg !48
  %121 = getelementptr half, ptr addrspace(1) %0, i64 %120, !dbg !48
  %122 = add i32 %88, %5, !dbg !47
  %123 = sext i32 %122 to i64, !dbg !48
  %124 = sext i32 %88 to i64, !dbg !48
  %125 = getelementptr half, ptr addrspace(1) %0, i64 %124, !dbg !48
  %126 = add i32 %96, %5, !dbg !47
  %127 = sext i32 %126 to i64, !dbg !48
  %128 = sext i32 %96 to i64, !dbg !48
  %129 = getelementptr half, ptr addrspace(1) %0, i64 %128, !dbg !48
  %130 = sext i32 %23 to i64
  %131 = sub nsw i64 %127, %128, !dbg !27
  %132 = shl nsw i64 %131, 1, !dbg !27
  %133 = sub nsw i64 %123, %124, !dbg !27
  %134 = shl nsw i64 %133, 1, !dbg !27
  %135 = sub nsw i64 %118, %120, !dbg !27
  %136 = shl nsw i64 %135, 1, !dbg !27
  %137 = sub nsw i64 %113, %115, !dbg !27
  %138 = shl nsw i64 %137, 1, !dbg !27
  %139 = sub nsw i64 %108, %110, !dbg !27
  %140 = shl nsw i64 %139, 1, !dbg !27
  %141 = sub nsw i64 %103, %105, !dbg !27
  %142 = shl nsw i64 %141, 1, !dbg !27
  %143 = sub nsw i64 %98, %100, !dbg !27
  %144 = shl nsw i64 %143, 1, !dbg !27
  %145 = sub nsw i64 %90, %92, !dbg !27
  %146 = shl nsw i64 %145, 1, !dbg !27
  %147 = sub nsw i64 %83, %84, !dbg !27
  %148 = shl nsw i64 %147, 1, !dbg !27
  %149 = sub nsw i64 %79, %80, !dbg !27
  %150 = shl nsw i64 %149, 1, !dbg !27
  %151 = sub nsw i64 %74, %76, !dbg !27
  %152 = shl nsw i64 %151, 1, !dbg !27
  %153 = sub nsw i64 %68, %71, !dbg !27
  %154 = shl nsw i64 %153, 1, !dbg !27
  %155 = sub nsw i64 %62, %64, !dbg !27
  %156 = shl nsw i64 %155, 1, !dbg !27
  %157 = sub nsw i64 %56, %59, !dbg !27
  %158 = shl nsw i64 %157, 1, !dbg !27
  %159 = sub nsw i64 %50, %52, !dbg !27
  %160 = shl nsw i64 %159, 1, !dbg !27
  %161 = sub nsw i64 %41, %44, !dbg !27
  %162 = shl nsw i64 %161, 1, !dbg !27
  br label %163, !dbg !27

163:                                              ; preds = %.lr.ph, %163
  %.pn31542 = phi ptr addrspace(1) [ %45, %.lr.ph ], [ %1102, %163 ]
  %.pn63540 = phi ptr addrspace(1) [ %53, %.lr.ph ], [ %1101, %163 ]
  %.pn95538 = phi ptr addrspace(1) [ %60, %.lr.ph ], [ %1100, %163 ]
  %.pn127536 = phi ptr addrspace(1) [ %65, %.lr.ph ], [ %1099, %163 ]
  %.pn159534 = phi ptr addrspace(1) [ %72, %.lr.ph ], [ %1098, %163 ]
  %.pn191532 = phi ptr addrspace(1) [ %77, %.lr.ph ], [ %1097, %163 ]
  %.pn223530 = phi ptr addrspace(1) [ %81, %.lr.ph ], [ %1096, %163 ]
  %.pn255528 = phi ptr addrspace(1) [ %85, %.lr.ph ], [ %1095, %163 ]
  %.pn287526 = phi ptr addrspace(1) [ %93, %.lr.ph ], [ %1094, %163 ]
  %.pn319524 = phi ptr addrspace(1) [ %101, %.lr.ph ], [ %1093, %163 ]
  %.pn351522 = phi ptr addrspace(1) [ %106, %.lr.ph ], [ %1092, %163 ]
  %.pn383520 = phi ptr addrspace(1) [ %111, %.lr.ph ], [ %1091, %163 ]
  %.pn415518 = phi ptr addrspace(1) [ %116, %.lr.ph ], [ %1090, %163 ]
  %.pn447516 = phi ptr addrspace(1) [ %121, %.lr.ph ], [ %1089, %163 ]
  %.pn479514 = phi ptr addrspace(1) [ %125, %.lr.ph ], [ %1088, %163 ]
  %.pn511512 = phi ptr addrspace(1) [ %129, %.lr.ph ], [ %1087, %163 ]
  %164 = phi i32 [ 0, %.lr.ph ], [ %1103, %163 ]
  %165 = shl i32 %164, 6, !dbg !49
  %166 = sub i32 %3, %165, !dbg !50
  %167 = icmp sgt i32 %166, 0, !dbg !51
  %168 = icmp sgt i32 %166, 16, !dbg !51
  %169 = icmp sgt i32 %166, 32, !dbg !51
  %170 = icmp sgt i32 %166, 48, !dbg !51
  %171 = ptrtoint ptr addrspace(1) %.pn511512 to i64, !dbg !52
  %172 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %132, i32 0) #5, !dbg !52
  %173 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %171, i32 0) #5, !dbg !52
  %174 = inttoptr i64 %173 to ptr addrspace(1), !dbg !52
  %175 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %174, i64 %172, i32 32, i32 16)
  %176 = trunc i64 %172 to i32, !dbg !52
  %177 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %174, i32 32, i32 16, i32 %176, <2 x i32> zeroinitializer, ptr %177) #6
  %178 = load <8 x i32>, ptr %177, align 32, !dbg !52
  %179 = select i1 %167, <8 x i32> %178, <8 x i32> zeroinitializer, !dbg !52
  %180 = extractelement <8 x i32> %179, i64 0, !dbg !52
  %181 = bitcast i32 %180 to <2 x half>, !dbg !52
  %182 = extractelement <8 x i32> %179, i64 1, !dbg !52
  %183 = bitcast i32 %182 to <2 x half>, !dbg !52
  %184 = extractelement <8 x i32> %179, i64 2, !dbg !52
  %185 = bitcast i32 %184 to <2 x half>, !dbg !52
  %186 = extractelement <8 x i32> %179, i64 3, !dbg !52
  %187 = bitcast i32 %186 to <2 x half>, !dbg !52
  %188 = extractelement <8 x i32> %179, i64 4, !dbg !52
  %189 = bitcast i32 %188 to <2 x half>, !dbg !52
  %190 = extractelement <8 x i32> %179, i64 5, !dbg !52
  %191 = bitcast i32 %190 to <2 x half>, !dbg !52
  %192 = extractelement <8 x i32> %179, i64 6, !dbg !52
  %193 = bitcast i32 %192 to <2 x half>, !dbg !52
  %194 = extractelement <8 x i32> %179, i64 7, !dbg !52
  %195 = bitcast i32 %194 to <2 x half>, !dbg !52
  %196 = extractelement <2 x half> %181, i64 0, !dbg !52
  %197 = extractelement <2 x half> %181, i64 1, !dbg !52
  %198 = extractelement <2 x half> %183, i64 0, !dbg !52
  %199 = extractelement <2 x half> %183, i64 1, !dbg !52
  %200 = extractelement <2 x half> %185, i64 0, !dbg !52
  %201 = extractelement <2 x half> %185, i64 1, !dbg !52
  %202 = extractelement <2 x half> %187, i64 0, !dbg !52
  %203 = extractelement <2 x half> %187, i64 1, !dbg !52
  %204 = extractelement <2 x half> %189, i64 0, !dbg !52
  %205 = extractelement <2 x half> %189, i64 1, !dbg !52
  %206 = extractelement <2 x half> %191, i64 0, !dbg !52
  %207 = extractelement <2 x half> %191, i64 1, !dbg !52
  %208 = extractelement <2 x half> %193, i64 0, !dbg !52
  %209 = extractelement <2 x half> %193, i64 1, !dbg !52
  %210 = extractelement <2 x half> %195, i64 0, !dbg !52
  %211 = extractelement <2 x half> %195, i64 1, !dbg !52
  %212 = ptrtoint ptr addrspace(1) %.pn479514 to i64, !dbg !52
  %213 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %134, i32 0) #5, !dbg !52
  %214 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %212, i32 0) #5, !dbg !52
  %215 = inttoptr i64 %214 to ptr addrspace(1), !dbg !52
  %216 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %215, i64 %213, i32 32, i32 16)
  %217 = trunc i64 %213 to i32, !dbg !52
  %218 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %215, i32 32, i32 16, i32 %217, <2 x i32> zeroinitializer, ptr %218) #6
  %219 = load <8 x i32>, ptr %218, align 32, !dbg !52
  %220 = select i1 %167, <8 x i32> %219, <8 x i32> zeroinitializer, !dbg !52
  %221 = extractelement <8 x i32> %220, i64 0, !dbg !52
  %222 = bitcast i32 %221 to <2 x half>, !dbg !52
  %223 = extractelement <8 x i32> %220, i64 1, !dbg !52
  %224 = bitcast i32 %223 to <2 x half>, !dbg !52
  %225 = extractelement <8 x i32> %220, i64 2, !dbg !52
  %226 = bitcast i32 %225 to <2 x half>, !dbg !52
  %227 = extractelement <8 x i32> %220, i64 3, !dbg !52
  %228 = bitcast i32 %227 to <2 x half>, !dbg !52
  %229 = extractelement <8 x i32> %220, i64 4, !dbg !52
  %230 = bitcast i32 %229 to <2 x half>, !dbg !52
  %231 = extractelement <8 x i32> %220, i64 5, !dbg !52
  %232 = bitcast i32 %231 to <2 x half>, !dbg !52
  %233 = extractelement <8 x i32> %220, i64 6, !dbg !52
  %234 = bitcast i32 %233 to <2 x half>, !dbg !52
  %235 = extractelement <8 x i32> %220, i64 7, !dbg !52
  %236 = bitcast i32 %235 to <2 x half>, !dbg !52
  %237 = extractelement <2 x half> %222, i64 0, !dbg !52
  %238 = extractelement <2 x half> %222, i64 1, !dbg !52
  %239 = extractelement <2 x half> %224, i64 0, !dbg !52
  %240 = extractelement <2 x half> %224, i64 1, !dbg !52
  %241 = extractelement <2 x half> %226, i64 0, !dbg !52
  %242 = extractelement <2 x half> %226, i64 1, !dbg !52
  %243 = extractelement <2 x half> %228, i64 0, !dbg !52
  %244 = extractelement <2 x half> %228, i64 1, !dbg !52
  %245 = extractelement <2 x half> %230, i64 0, !dbg !52
  %246 = extractelement <2 x half> %230, i64 1, !dbg !52
  %247 = extractelement <2 x half> %232, i64 0, !dbg !52
  %248 = extractelement <2 x half> %232, i64 1, !dbg !52
  %249 = extractelement <2 x half> %234, i64 0, !dbg !52
  %250 = extractelement <2 x half> %234, i64 1, !dbg !52
  %251 = extractelement <2 x half> %236, i64 0, !dbg !52
  %252 = extractelement <2 x half> %236, i64 1, !dbg !52
  %253 = ptrtoint ptr addrspace(1) %.pn447516 to i64, !dbg !52
  %254 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %136, i32 0) #5, !dbg !52
  %255 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %253, i32 0) #5, !dbg !52
  %256 = inttoptr i64 %255 to ptr addrspace(1), !dbg !52
  %257 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %256, i64 %254, i32 32, i32 16)
  %258 = trunc i64 %254 to i32, !dbg !52
  %259 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %256, i32 32, i32 16, i32 %258, <2 x i32> zeroinitializer, ptr %259) #6
  %260 = load <8 x i32>, ptr %259, align 32, !dbg !52
  %261 = select i1 %168, <8 x i32> %260, <8 x i32> zeroinitializer, !dbg !52
  %262 = extractelement <8 x i32> %261, i64 0, !dbg !52
  %263 = bitcast i32 %262 to <2 x half>, !dbg !52
  %264 = extractelement <8 x i32> %261, i64 1, !dbg !52
  %265 = bitcast i32 %264 to <2 x half>, !dbg !52
  %266 = extractelement <8 x i32> %261, i64 2, !dbg !52
  %267 = bitcast i32 %266 to <2 x half>, !dbg !52
  %268 = extractelement <8 x i32> %261, i64 3, !dbg !52
  %269 = bitcast i32 %268 to <2 x half>, !dbg !52
  %270 = extractelement <8 x i32> %261, i64 4, !dbg !52
  %271 = bitcast i32 %270 to <2 x half>, !dbg !52
  %272 = extractelement <8 x i32> %261, i64 5, !dbg !52
  %273 = bitcast i32 %272 to <2 x half>, !dbg !52
  %274 = extractelement <8 x i32> %261, i64 6, !dbg !52
  %275 = bitcast i32 %274 to <2 x half>, !dbg !52
  %276 = extractelement <8 x i32> %261, i64 7, !dbg !52
  %277 = bitcast i32 %276 to <2 x half>, !dbg !52
  %278 = extractelement <2 x half> %263, i64 0, !dbg !52
  %279 = extractelement <2 x half> %263, i64 1, !dbg !52
  %280 = extractelement <2 x half> %265, i64 0, !dbg !52
  %281 = extractelement <2 x half> %265, i64 1, !dbg !52
  %282 = extractelement <2 x half> %267, i64 0, !dbg !52
  %283 = extractelement <2 x half> %267, i64 1, !dbg !52
  %284 = extractelement <2 x half> %269, i64 0, !dbg !52
  %285 = extractelement <2 x half> %269, i64 1, !dbg !52
  %286 = extractelement <2 x half> %271, i64 0, !dbg !52
  %287 = extractelement <2 x half> %271, i64 1, !dbg !52
  %288 = extractelement <2 x half> %273, i64 0, !dbg !52
  %289 = extractelement <2 x half> %273, i64 1, !dbg !52
  %290 = extractelement <2 x half> %275, i64 0, !dbg !52
  %291 = extractelement <2 x half> %275, i64 1, !dbg !52
  %292 = extractelement <2 x half> %277, i64 0, !dbg !52
  %293 = extractelement <2 x half> %277, i64 1, !dbg !52
  %294 = ptrtoint ptr addrspace(1) %.pn415518 to i64, !dbg !52
  %295 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %138, i32 0) #5, !dbg !52
  %296 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %294, i32 0) #5, !dbg !52
  %297 = inttoptr i64 %296 to ptr addrspace(1), !dbg !52
  %298 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %297, i64 %295, i32 32, i32 16)
  %299 = trunc i64 %295 to i32, !dbg !52
  %300 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %297, i32 32, i32 16, i32 %299, <2 x i32> zeroinitializer, ptr %300) #6
  %301 = load <8 x i32>, ptr %300, align 32, !dbg !52
  %302 = select i1 %168, <8 x i32> %301, <8 x i32> zeroinitializer, !dbg !52
  %303 = extractelement <8 x i32> %302, i64 0, !dbg !52
  %304 = bitcast i32 %303 to <2 x half>, !dbg !52
  %305 = extractelement <8 x i32> %302, i64 1, !dbg !52
  %306 = bitcast i32 %305 to <2 x half>, !dbg !52
  %307 = extractelement <8 x i32> %302, i64 2, !dbg !52
  %308 = bitcast i32 %307 to <2 x half>, !dbg !52
  %309 = extractelement <8 x i32> %302, i64 3, !dbg !52
  %310 = bitcast i32 %309 to <2 x half>, !dbg !52
  %311 = extractelement <8 x i32> %302, i64 4, !dbg !52
  %312 = bitcast i32 %311 to <2 x half>, !dbg !52
  %313 = extractelement <8 x i32> %302, i64 5, !dbg !52
  %314 = bitcast i32 %313 to <2 x half>, !dbg !52
  %315 = extractelement <8 x i32> %302, i64 6, !dbg !52
  %316 = bitcast i32 %315 to <2 x half>, !dbg !52
  %317 = extractelement <8 x i32> %302, i64 7, !dbg !52
  %318 = bitcast i32 %317 to <2 x half>, !dbg !52
  %319 = extractelement <2 x half> %304, i64 0, !dbg !52
  %320 = extractelement <2 x half> %304, i64 1, !dbg !52
  %321 = extractelement <2 x half> %306, i64 0, !dbg !52
  %322 = extractelement <2 x half> %306, i64 1, !dbg !52
  %323 = extractelement <2 x half> %308, i64 0, !dbg !52
  %324 = extractelement <2 x half> %308, i64 1, !dbg !52
  %325 = extractelement <2 x half> %310, i64 0, !dbg !52
  %326 = extractelement <2 x half> %310, i64 1, !dbg !52
  %327 = extractelement <2 x half> %312, i64 0, !dbg !52
  %328 = extractelement <2 x half> %312, i64 1, !dbg !52
  %329 = extractelement <2 x half> %314, i64 0, !dbg !52
  %330 = extractelement <2 x half> %314, i64 1, !dbg !52
  %331 = extractelement <2 x half> %316, i64 0, !dbg !52
  %332 = extractelement <2 x half> %316, i64 1, !dbg !52
  %333 = extractelement <2 x half> %318, i64 0, !dbg !52
  %334 = extractelement <2 x half> %318, i64 1, !dbg !52
  %335 = ptrtoint ptr addrspace(1) %.pn383520 to i64, !dbg !52
  %336 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %140, i32 0) #5, !dbg !52
  %337 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %335, i32 0) #5, !dbg !52
  %338 = inttoptr i64 %337 to ptr addrspace(1), !dbg !52
  %339 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %338, i64 %336, i32 32, i32 16)
  %340 = trunc i64 %336 to i32, !dbg !52
  %341 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %338, i32 32, i32 16, i32 %340, <2 x i32> zeroinitializer, ptr %341) #6
  %342 = load <8 x i32>, ptr %341, align 32, !dbg !52
  %343 = select i1 %169, <8 x i32> %342, <8 x i32> zeroinitializer, !dbg !52
  %344 = extractelement <8 x i32> %343, i64 0, !dbg !52
  %345 = bitcast i32 %344 to <2 x half>, !dbg !52
  %346 = extractelement <8 x i32> %343, i64 1, !dbg !52
  %347 = bitcast i32 %346 to <2 x half>, !dbg !52
  %348 = extractelement <8 x i32> %343, i64 2, !dbg !52
  %349 = bitcast i32 %348 to <2 x half>, !dbg !52
  %350 = extractelement <8 x i32> %343, i64 3, !dbg !52
  %351 = bitcast i32 %350 to <2 x half>, !dbg !52
  %352 = extractelement <8 x i32> %343, i64 4, !dbg !52
  %353 = bitcast i32 %352 to <2 x half>, !dbg !52
  %354 = extractelement <8 x i32> %343, i64 5, !dbg !52
  %355 = bitcast i32 %354 to <2 x half>, !dbg !52
  %356 = extractelement <8 x i32> %343, i64 6, !dbg !52
  %357 = bitcast i32 %356 to <2 x half>, !dbg !52
  %358 = extractelement <8 x i32> %343, i64 7, !dbg !52
  %359 = bitcast i32 %358 to <2 x half>, !dbg !52
  %360 = extractelement <2 x half> %345, i64 0, !dbg !52
  %361 = extractelement <2 x half> %345, i64 1, !dbg !52
  %362 = extractelement <2 x half> %347, i64 0, !dbg !52
  %363 = extractelement <2 x half> %347, i64 1, !dbg !52
  %364 = extractelement <2 x half> %349, i64 0, !dbg !52
  %365 = extractelement <2 x half> %349, i64 1, !dbg !52
  %366 = extractelement <2 x half> %351, i64 0, !dbg !52
  %367 = extractelement <2 x half> %351, i64 1, !dbg !52
  %368 = extractelement <2 x half> %353, i64 0, !dbg !52
  %369 = extractelement <2 x half> %353, i64 1, !dbg !52
  %370 = extractelement <2 x half> %355, i64 0, !dbg !52
  %371 = extractelement <2 x half> %355, i64 1, !dbg !52
  %372 = extractelement <2 x half> %357, i64 0, !dbg !52
  %373 = extractelement <2 x half> %357, i64 1, !dbg !52
  %374 = extractelement <2 x half> %359, i64 0, !dbg !52
  %375 = extractelement <2 x half> %359, i64 1, !dbg !52
  %376 = ptrtoint ptr addrspace(1) %.pn351522 to i64, !dbg !52
  %377 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %142, i32 0) #5, !dbg !52
  %378 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %376, i32 0) #5, !dbg !52
  %379 = inttoptr i64 %378 to ptr addrspace(1), !dbg !52
  %380 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %379, i64 %377, i32 32, i32 16)
  %381 = trunc i64 %377 to i32, !dbg !52
  %382 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %379, i32 32, i32 16, i32 %381, <2 x i32> zeroinitializer, ptr %382) #6
  %383 = load <8 x i32>, ptr %382, align 32, !dbg !52
  %384 = select i1 %169, <8 x i32> %383, <8 x i32> zeroinitializer, !dbg !52
  %385 = extractelement <8 x i32> %384, i64 0, !dbg !52
  %386 = bitcast i32 %385 to <2 x half>, !dbg !52
  %387 = extractelement <8 x i32> %384, i64 1, !dbg !52
  %388 = bitcast i32 %387 to <2 x half>, !dbg !52
  %389 = extractelement <8 x i32> %384, i64 2, !dbg !52
  %390 = bitcast i32 %389 to <2 x half>, !dbg !52
  %391 = extractelement <8 x i32> %384, i64 3, !dbg !52
  %392 = bitcast i32 %391 to <2 x half>, !dbg !52
  %393 = extractelement <8 x i32> %384, i64 4, !dbg !52
  %394 = bitcast i32 %393 to <2 x half>, !dbg !52
  %395 = extractelement <8 x i32> %384, i64 5, !dbg !52
  %396 = bitcast i32 %395 to <2 x half>, !dbg !52
  %397 = extractelement <8 x i32> %384, i64 6, !dbg !52
  %398 = bitcast i32 %397 to <2 x half>, !dbg !52
  %399 = extractelement <8 x i32> %384, i64 7, !dbg !52
  %400 = bitcast i32 %399 to <2 x half>, !dbg !52
  %401 = extractelement <2 x half> %386, i64 0, !dbg !52
  %402 = extractelement <2 x half> %386, i64 1, !dbg !52
  %403 = extractelement <2 x half> %388, i64 0, !dbg !52
  %404 = extractelement <2 x half> %388, i64 1, !dbg !52
  %405 = extractelement <2 x half> %390, i64 0, !dbg !52
  %406 = extractelement <2 x half> %390, i64 1, !dbg !52
  %407 = extractelement <2 x half> %392, i64 0, !dbg !52
  %408 = extractelement <2 x half> %392, i64 1, !dbg !52
  %409 = extractelement <2 x half> %394, i64 0, !dbg !52
  %410 = extractelement <2 x half> %394, i64 1, !dbg !52
  %411 = extractelement <2 x half> %396, i64 0, !dbg !52
  %412 = extractelement <2 x half> %396, i64 1, !dbg !52
  %413 = extractelement <2 x half> %398, i64 0, !dbg !52
  %414 = extractelement <2 x half> %398, i64 1, !dbg !52
  %415 = extractelement <2 x half> %400, i64 0, !dbg !52
  %416 = extractelement <2 x half> %400, i64 1, !dbg !52
  %417 = ptrtoint ptr addrspace(1) %.pn319524 to i64, !dbg !52
  %418 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %144, i32 0) #5, !dbg !52
  %419 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %417, i32 0) #5, !dbg !52
  %420 = inttoptr i64 %419 to ptr addrspace(1), !dbg !52
  %421 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %420, i64 %418, i32 32, i32 16)
  %422 = trunc i64 %418 to i32, !dbg !52
  %423 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %420, i32 32, i32 16, i32 %422, <2 x i32> zeroinitializer, ptr %423) #6
  %424 = load <8 x i32>, ptr %423, align 32, !dbg !52
  %425 = select i1 %170, <8 x i32> %424, <8 x i32> zeroinitializer, !dbg !52
  %426 = extractelement <8 x i32> %425, i64 0, !dbg !52
  %427 = bitcast i32 %426 to <2 x half>, !dbg !52
  %428 = extractelement <8 x i32> %425, i64 1, !dbg !52
  %429 = bitcast i32 %428 to <2 x half>, !dbg !52
  %430 = extractelement <8 x i32> %425, i64 2, !dbg !52
  %431 = bitcast i32 %430 to <2 x half>, !dbg !52
  %432 = extractelement <8 x i32> %425, i64 3, !dbg !52
  %433 = bitcast i32 %432 to <2 x half>, !dbg !52
  %434 = extractelement <8 x i32> %425, i64 4, !dbg !52
  %435 = bitcast i32 %434 to <2 x half>, !dbg !52
  %436 = extractelement <8 x i32> %425, i64 5, !dbg !52
  %437 = bitcast i32 %436 to <2 x half>, !dbg !52
  %438 = extractelement <8 x i32> %425, i64 6, !dbg !52
  %439 = bitcast i32 %438 to <2 x half>, !dbg !52
  %440 = extractelement <8 x i32> %425, i64 7, !dbg !52
  %441 = bitcast i32 %440 to <2 x half>, !dbg !52
  %442 = extractelement <2 x half> %427, i64 0, !dbg !52
  %443 = extractelement <2 x half> %427, i64 1, !dbg !52
  %444 = extractelement <2 x half> %429, i64 0, !dbg !52
  %445 = extractelement <2 x half> %429, i64 1, !dbg !52
  %446 = extractelement <2 x half> %431, i64 0, !dbg !52
  %447 = extractelement <2 x half> %431, i64 1, !dbg !52
  %448 = extractelement <2 x half> %433, i64 0, !dbg !52
  %449 = extractelement <2 x half> %433, i64 1, !dbg !52
  %450 = extractelement <2 x half> %435, i64 0, !dbg !52
  %451 = extractelement <2 x half> %435, i64 1, !dbg !52
  %452 = extractelement <2 x half> %437, i64 0, !dbg !52
  %453 = extractelement <2 x half> %437, i64 1, !dbg !52
  %454 = extractelement <2 x half> %439, i64 0, !dbg !52
  %455 = extractelement <2 x half> %439, i64 1, !dbg !52
  %456 = extractelement <2 x half> %441, i64 0, !dbg !52
  %457 = extractelement <2 x half> %441, i64 1, !dbg !52
  %458 = ptrtoint ptr addrspace(1) %.pn287526 to i64, !dbg !52
  %459 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %146, i32 0) #5, !dbg !52
  %460 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %458, i32 0) #5, !dbg !52
  %461 = inttoptr i64 %460 to ptr addrspace(1), !dbg !52
  %462 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %461, i64 %459, i32 32, i32 16)
  %463 = trunc i64 %459 to i32, !dbg !52
  %464 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %461, i32 32, i32 16, i32 %463, <2 x i32> zeroinitializer, ptr %464) #6
  %465 = load <8 x i32>, ptr %464, align 32, !dbg !52
  %466 = select i1 %170, <8 x i32> %465, <8 x i32> zeroinitializer, !dbg !52
  %467 = extractelement <8 x i32> %466, i64 0, !dbg !52
  %468 = bitcast i32 %467 to <2 x half>, !dbg !52
  %469 = extractelement <8 x i32> %466, i64 1, !dbg !52
  %470 = bitcast i32 %469 to <2 x half>, !dbg !52
  %471 = extractelement <8 x i32> %466, i64 2, !dbg !52
  %472 = bitcast i32 %471 to <2 x half>, !dbg !52
  %473 = extractelement <8 x i32> %466, i64 3, !dbg !52
  %474 = bitcast i32 %473 to <2 x half>, !dbg !52
  %475 = extractelement <8 x i32> %466, i64 4, !dbg !52
  %476 = bitcast i32 %475 to <2 x half>, !dbg !52
  %477 = extractelement <8 x i32> %466, i64 5, !dbg !52
  %478 = bitcast i32 %477 to <2 x half>, !dbg !52
  %479 = extractelement <8 x i32> %466, i64 6, !dbg !52
  %480 = bitcast i32 %479 to <2 x half>, !dbg !52
  %481 = extractelement <8 x i32> %466, i64 7, !dbg !52
  %482 = bitcast i32 %481 to <2 x half>, !dbg !52
  %483 = extractelement <2 x half> %468, i64 0, !dbg !52
  %484 = extractelement <2 x half> %468, i64 1, !dbg !52
  %485 = extractelement <2 x half> %470, i64 0, !dbg !52
  %486 = extractelement <2 x half> %470, i64 1, !dbg !52
  %487 = extractelement <2 x half> %472, i64 0, !dbg !52
  %488 = extractelement <2 x half> %472, i64 1, !dbg !52
  %489 = extractelement <2 x half> %474, i64 0, !dbg !52
  %490 = extractelement <2 x half> %474, i64 1, !dbg !52
  %491 = extractelement <2 x half> %476, i64 0, !dbg !52
  %492 = extractelement <2 x half> %476, i64 1, !dbg !52
  %493 = extractelement <2 x half> %478, i64 0, !dbg !52
  %494 = extractelement <2 x half> %478, i64 1, !dbg !52
  %495 = extractelement <2 x half> %480, i64 0, !dbg !52
  %496 = extractelement <2 x half> %480, i64 1, !dbg !52
  %497 = extractelement <2 x half> %482, i64 0, !dbg !52
  %498 = extractelement <2 x half> %482, i64 1, !dbg !52
  %499 = ptrtoint ptr addrspace(1) %.pn255528 to i64, !dbg !52
  %500 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %148, i32 0) #5, !dbg !52
  %501 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %499, i32 0) #5, !dbg !52
  %502 = inttoptr i64 %501 to ptr addrspace(1), !dbg !52
  %503 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %502, i64 %500, i32 32, i32 16)
  %504 = trunc i64 %500 to i32, !dbg !52
  %505 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %502, i32 32, i32 16, i32 %504, <2 x i32> zeroinitializer, ptr %505) #6
  %506 = load <8 x i32>, ptr %505, align 32, !dbg !52
  %507 = select i1 %167, <8 x i32> %506, <8 x i32> zeroinitializer, !dbg !52
  %508 = extractelement <8 x i32> %507, i64 0, !dbg !52
  %509 = bitcast i32 %508 to <2 x half>, !dbg !52
  %510 = extractelement <8 x i32> %507, i64 1, !dbg !52
  %511 = bitcast i32 %510 to <2 x half>, !dbg !52
  %512 = extractelement <8 x i32> %507, i64 2, !dbg !52
  %513 = bitcast i32 %512 to <2 x half>, !dbg !52
  %514 = extractelement <8 x i32> %507, i64 3, !dbg !52
  %515 = bitcast i32 %514 to <2 x half>, !dbg !52
  %516 = extractelement <8 x i32> %507, i64 4, !dbg !52
  %517 = bitcast i32 %516 to <2 x half>, !dbg !52
  %518 = extractelement <8 x i32> %507, i64 5, !dbg !52
  %519 = bitcast i32 %518 to <2 x half>, !dbg !52
  %520 = extractelement <8 x i32> %507, i64 6, !dbg !52
  %521 = bitcast i32 %520 to <2 x half>, !dbg !52
  %522 = extractelement <8 x i32> %507, i64 7, !dbg !52
  %523 = bitcast i32 %522 to <2 x half>, !dbg !52
  %524 = extractelement <2 x half> %509, i64 0, !dbg !52
  %525 = extractelement <2 x half> %509, i64 1, !dbg !52
  %526 = extractelement <2 x half> %511, i64 0, !dbg !52
  %527 = extractelement <2 x half> %511, i64 1, !dbg !52
  %528 = extractelement <2 x half> %513, i64 0, !dbg !52
  %529 = extractelement <2 x half> %513, i64 1, !dbg !52
  %530 = extractelement <2 x half> %515, i64 0, !dbg !52
  %531 = extractelement <2 x half> %515, i64 1, !dbg !52
  %532 = extractelement <2 x half> %517, i64 0, !dbg !52
  %533 = extractelement <2 x half> %517, i64 1, !dbg !52
  %534 = extractelement <2 x half> %519, i64 0, !dbg !52
  %535 = extractelement <2 x half> %519, i64 1, !dbg !52
  %536 = extractelement <2 x half> %521, i64 0, !dbg !52
  %537 = extractelement <2 x half> %521, i64 1, !dbg !52
  %538 = extractelement <2 x half> %523, i64 0, !dbg !52
  %539 = extractelement <2 x half> %523, i64 1, !dbg !52
  %540 = ptrtoint ptr addrspace(1) %.pn223530 to i64, !dbg !52
  %541 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %150, i32 0) #5, !dbg !52
  %542 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %540, i32 0) #5, !dbg !52
  %543 = inttoptr i64 %542 to ptr addrspace(1), !dbg !52
  %544 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %543, i64 %541, i32 32, i32 16)
  %545 = trunc i64 %541 to i32, !dbg !52
  %546 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %543, i32 32, i32 16, i32 %545, <2 x i32> zeroinitializer, ptr %546) #6
  %547 = load <8 x i32>, ptr %546, align 32, !dbg !52
  %548 = select i1 %167, <8 x i32> %547, <8 x i32> zeroinitializer, !dbg !52
  %549 = extractelement <8 x i32> %548, i64 0, !dbg !52
  %550 = bitcast i32 %549 to <2 x half>, !dbg !52
  %551 = extractelement <8 x i32> %548, i64 1, !dbg !52
  %552 = bitcast i32 %551 to <2 x half>, !dbg !52
  %553 = extractelement <8 x i32> %548, i64 2, !dbg !52
  %554 = bitcast i32 %553 to <2 x half>, !dbg !52
  %555 = extractelement <8 x i32> %548, i64 3, !dbg !52
  %556 = bitcast i32 %555 to <2 x half>, !dbg !52
  %557 = extractelement <8 x i32> %548, i64 4, !dbg !52
  %558 = bitcast i32 %557 to <2 x half>, !dbg !52
  %559 = extractelement <8 x i32> %548, i64 5, !dbg !52
  %560 = bitcast i32 %559 to <2 x half>, !dbg !52
  %561 = extractelement <8 x i32> %548, i64 6, !dbg !52
  %562 = bitcast i32 %561 to <2 x half>, !dbg !52
  %563 = extractelement <8 x i32> %548, i64 7, !dbg !52
  %564 = bitcast i32 %563 to <2 x half>, !dbg !52
  %565 = extractelement <2 x half> %550, i64 0, !dbg !52
  %566 = extractelement <2 x half> %550, i64 1, !dbg !52
  %567 = extractelement <2 x half> %552, i64 0, !dbg !52
  %568 = extractelement <2 x half> %552, i64 1, !dbg !52
  %569 = extractelement <2 x half> %554, i64 0, !dbg !52
  %570 = extractelement <2 x half> %554, i64 1, !dbg !52
  %571 = extractelement <2 x half> %556, i64 0, !dbg !52
  %572 = extractelement <2 x half> %556, i64 1, !dbg !52
  %573 = extractelement <2 x half> %558, i64 0, !dbg !52
  %574 = extractelement <2 x half> %558, i64 1, !dbg !52
  %575 = extractelement <2 x half> %560, i64 0, !dbg !52
  %576 = extractelement <2 x half> %560, i64 1, !dbg !52
  %577 = extractelement <2 x half> %562, i64 0, !dbg !52
  %578 = extractelement <2 x half> %562, i64 1, !dbg !52
  %579 = extractelement <2 x half> %564, i64 0, !dbg !52
  %580 = extractelement <2 x half> %564, i64 1, !dbg !52
  %581 = ptrtoint ptr addrspace(1) %.pn191532 to i64, !dbg !52
  %582 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %152, i32 0) #5, !dbg !52
  %583 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %581, i32 0) #5, !dbg !52
  %584 = inttoptr i64 %583 to ptr addrspace(1), !dbg !52
  %585 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %584, i64 %582, i32 32, i32 16)
  %586 = trunc i64 %582 to i32, !dbg !52
  %587 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %584, i32 32, i32 16, i32 %586, <2 x i32> zeroinitializer, ptr %587) #6
  %588 = load <8 x i32>, ptr %587, align 32, !dbg !52
  %589 = select i1 %168, <8 x i32> %588, <8 x i32> zeroinitializer, !dbg !52
  %590 = extractelement <8 x i32> %589, i64 0, !dbg !52
  %591 = bitcast i32 %590 to <2 x half>, !dbg !52
  %592 = extractelement <8 x i32> %589, i64 1, !dbg !52
  %593 = bitcast i32 %592 to <2 x half>, !dbg !52
  %594 = extractelement <8 x i32> %589, i64 2, !dbg !52
  %595 = bitcast i32 %594 to <2 x half>, !dbg !52
  %596 = extractelement <8 x i32> %589, i64 3, !dbg !52
  %597 = bitcast i32 %596 to <2 x half>, !dbg !52
  %598 = extractelement <8 x i32> %589, i64 4, !dbg !52
  %599 = bitcast i32 %598 to <2 x half>, !dbg !52
  %600 = extractelement <8 x i32> %589, i64 5, !dbg !52
  %601 = bitcast i32 %600 to <2 x half>, !dbg !52
  %602 = extractelement <8 x i32> %589, i64 6, !dbg !52
  %603 = bitcast i32 %602 to <2 x half>, !dbg !52
  %604 = extractelement <8 x i32> %589, i64 7, !dbg !52
  %605 = bitcast i32 %604 to <2 x half>, !dbg !52
  %606 = extractelement <2 x half> %591, i64 0, !dbg !52
  %607 = extractelement <2 x half> %591, i64 1, !dbg !52
  %608 = extractelement <2 x half> %593, i64 0, !dbg !52
  %609 = extractelement <2 x half> %593, i64 1, !dbg !52
  %610 = extractelement <2 x half> %595, i64 0, !dbg !52
  %611 = extractelement <2 x half> %595, i64 1, !dbg !52
  %612 = extractelement <2 x half> %597, i64 0, !dbg !52
  %613 = extractelement <2 x half> %597, i64 1, !dbg !52
  %614 = extractelement <2 x half> %599, i64 0, !dbg !52
  %615 = extractelement <2 x half> %599, i64 1, !dbg !52
  %616 = extractelement <2 x half> %601, i64 0, !dbg !52
  %617 = extractelement <2 x half> %601, i64 1, !dbg !52
  %618 = extractelement <2 x half> %603, i64 0, !dbg !52
  %619 = extractelement <2 x half> %603, i64 1, !dbg !52
  %620 = extractelement <2 x half> %605, i64 0, !dbg !52
  %621 = extractelement <2 x half> %605, i64 1, !dbg !52
  %622 = ptrtoint ptr addrspace(1) %.pn159534 to i64, !dbg !52
  %623 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %154, i32 0) #5, !dbg !52
  %624 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %622, i32 0) #5, !dbg !52
  %625 = inttoptr i64 %624 to ptr addrspace(1), !dbg !52
  %626 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %625, i64 %623, i32 32, i32 16)
  %627 = trunc i64 %623 to i32, !dbg !52
  %628 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %625, i32 32, i32 16, i32 %627, <2 x i32> zeroinitializer, ptr %628) #6
  %629 = load <8 x i32>, ptr %628, align 32, !dbg !52
  %630 = select i1 %168, <8 x i32> %629, <8 x i32> zeroinitializer, !dbg !52
  %631 = extractelement <8 x i32> %630, i64 0, !dbg !52
  %632 = bitcast i32 %631 to <2 x half>, !dbg !52
  %633 = extractelement <8 x i32> %630, i64 1, !dbg !52
  %634 = bitcast i32 %633 to <2 x half>, !dbg !52
  %635 = extractelement <8 x i32> %630, i64 2, !dbg !52
  %636 = bitcast i32 %635 to <2 x half>, !dbg !52
  %637 = extractelement <8 x i32> %630, i64 3, !dbg !52
  %638 = bitcast i32 %637 to <2 x half>, !dbg !52
  %639 = extractelement <8 x i32> %630, i64 4, !dbg !52
  %640 = bitcast i32 %639 to <2 x half>, !dbg !52
  %641 = extractelement <8 x i32> %630, i64 5, !dbg !52
  %642 = bitcast i32 %641 to <2 x half>, !dbg !52
  %643 = extractelement <8 x i32> %630, i64 6, !dbg !52
  %644 = bitcast i32 %643 to <2 x half>, !dbg !52
  %645 = extractelement <8 x i32> %630, i64 7, !dbg !52
  %646 = bitcast i32 %645 to <2 x half>, !dbg !52
  %647 = extractelement <2 x half> %632, i64 0, !dbg !52
  %648 = extractelement <2 x half> %632, i64 1, !dbg !52
  %649 = extractelement <2 x half> %634, i64 0, !dbg !52
  %650 = extractelement <2 x half> %634, i64 1, !dbg !52
  %651 = extractelement <2 x half> %636, i64 0, !dbg !52
  %652 = extractelement <2 x half> %636, i64 1, !dbg !52
  %653 = extractelement <2 x half> %638, i64 0, !dbg !52
  %654 = extractelement <2 x half> %638, i64 1, !dbg !52
  %655 = extractelement <2 x half> %640, i64 0, !dbg !52
  %656 = extractelement <2 x half> %640, i64 1, !dbg !52
  %657 = extractelement <2 x half> %642, i64 0, !dbg !52
  %658 = extractelement <2 x half> %642, i64 1, !dbg !52
  %659 = extractelement <2 x half> %644, i64 0, !dbg !52
  %660 = extractelement <2 x half> %644, i64 1, !dbg !52
  %661 = extractelement <2 x half> %646, i64 0, !dbg !52
  %662 = extractelement <2 x half> %646, i64 1, !dbg !52
  %663 = ptrtoint ptr addrspace(1) %.pn127536 to i64, !dbg !52
  %664 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %156, i32 0) #5, !dbg !52
  %665 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %663, i32 0) #5, !dbg !52
  %666 = inttoptr i64 %665 to ptr addrspace(1), !dbg !52
  %667 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %666, i64 %664, i32 32, i32 16)
  %668 = trunc i64 %664 to i32, !dbg !52
  %669 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %666, i32 32, i32 16, i32 %668, <2 x i32> zeroinitializer, ptr %669) #6
  %670 = load <8 x i32>, ptr %669, align 32, !dbg !52
  %671 = select i1 %169, <8 x i32> %670, <8 x i32> zeroinitializer, !dbg !52
  %672 = extractelement <8 x i32> %671, i64 0, !dbg !52
  %673 = bitcast i32 %672 to <2 x half>, !dbg !52
  %674 = extractelement <8 x i32> %671, i64 1, !dbg !52
  %675 = bitcast i32 %674 to <2 x half>, !dbg !52
  %676 = extractelement <8 x i32> %671, i64 2, !dbg !52
  %677 = bitcast i32 %676 to <2 x half>, !dbg !52
  %678 = extractelement <8 x i32> %671, i64 3, !dbg !52
  %679 = bitcast i32 %678 to <2 x half>, !dbg !52
  %680 = extractelement <8 x i32> %671, i64 4, !dbg !52
  %681 = bitcast i32 %680 to <2 x half>, !dbg !52
  %682 = extractelement <8 x i32> %671, i64 5, !dbg !52
  %683 = bitcast i32 %682 to <2 x half>, !dbg !52
  %684 = extractelement <8 x i32> %671, i64 6, !dbg !52
  %685 = bitcast i32 %684 to <2 x half>, !dbg !52
  %686 = extractelement <8 x i32> %671, i64 7, !dbg !52
  %687 = bitcast i32 %686 to <2 x half>, !dbg !52
  %688 = extractelement <2 x half> %673, i64 0, !dbg !52
  %689 = extractelement <2 x half> %673, i64 1, !dbg !52
  %690 = extractelement <2 x half> %675, i64 0, !dbg !52
  %691 = extractelement <2 x half> %675, i64 1, !dbg !52
  %692 = extractelement <2 x half> %677, i64 0, !dbg !52
  %693 = extractelement <2 x half> %677, i64 1, !dbg !52
  %694 = extractelement <2 x half> %679, i64 0, !dbg !52
  %695 = extractelement <2 x half> %679, i64 1, !dbg !52
  %696 = extractelement <2 x half> %681, i64 0, !dbg !52
  %697 = extractelement <2 x half> %681, i64 1, !dbg !52
  %698 = extractelement <2 x half> %683, i64 0, !dbg !52
  %699 = extractelement <2 x half> %683, i64 1, !dbg !52
  %700 = extractelement <2 x half> %685, i64 0, !dbg !52
  %701 = extractelement <2 x half> %685, i64 1, !dbg !52
  %702 = extractelement <2 x half> %687, i64 0, !dbg !52
  %703 = extractelement <2 x half> %687, i64 1, !dbg !52
  %704 = ptrtoint ptr addrspace(1) %.pn95538 to i64, !dbg !52
  %705 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %158, i32 0) #5, !dbg !52
  %706 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %704, i32 0) #5, !dbg !52
  %707 = inttoptr i64 %706 to ptr addrspace(1), !dbg !52
  %708 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %707, i64 %705, i32 32, i32 16)
  %709 = trunc i64 %705 to i32, !dbg !52
  %710 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %707, i32 32, i32 16, i32 %709, <2 x i32> zeroinitializer, ptr %710) #6
  %711 = load <8 x i32>, ptr %710, align 32, !dbg !52
  %712 = select i1 %169, <8 x i32> %711, <8 x i32> zeroinitializer, !dbg !52
  %713 = extractelement <8 x i32> %712, i64 0, !dbg !52
  %714 = bitcast i32 %713 to <2 x half>, !dbg !52
  %715 = extractelement <8 x i32> %712, i64 1, !dbg !52
  %716 = bitcast i32 %715 to <2 x half>, !dbg !52
  %717 = extractelement <8 x i32> %712, i64 2, !dbg !52
  %718 = bitcast i32 %717 to <2 x half>, !dbg !52
  %719 = extractelement <8 x i32> %712, i64 3, !dbg !52
  %720 = bitcast i32 %719 to <2 x half>, !dbg !52
  %721 = extractelement <8 x i32> %712, i64 4, !dbg !52
  %722 = bitcast i32 %721 to <2 x half>, !dbg !52
  %723 = extractelement <8 x i32> %712, i64 5, !dbg !52
  %724 = bitcast i32 %723 to <2 x half>, !dbg !52
  %725 = extractelement <8 x i32> %712, i64 6, !dbg !52
  %726 = bitcast i32 %725 to <2 x half>, !dbg !52
  %727 = extractelement <8 x i32> %712, i64 7, !dbg !52
  %728 = bitcast i32 %727 to <2 x half>, !dbg !52
  %729 = extractelement <2 x half> %714, i64 0, !dbg !52
  %730 = extractelement <2 x half> %714, i64 1, !dbg !52
  %731 = extractelement <2 x half> %716, i64 0, !dbg !52
  %732 = extractelement <2 x half> %716, i64 1, !dbg !52
  %733 = extractelement <2 x half> %718, i64 0, !dbg !52
  %734 = extractelement <2 x half> %718, i64 1, !dbg !52
  %735 = extractelement <2 x half> %720, i64 0, !dbg !52
  %736 = extractelement <2 x half> %720, i64 1, !dbg !52
  %737 = extractelement <2 x half> %722, i64 0, !dbg !52
  %738 = extractelement <2 x half> %722, i64 1, !dbg !52
  %739 = extractelement <2 x half> %724, i64 0, !dbg !52
  %740 = extractelement <2 x half> %724, i64 1, !dbg !52
  %741 = extractelement <2 x half> %726, i64 0, !dbg !52
  %742 = extractelement <2 x half> %726, i64 1, !dbg !52
  %743 = extractelement <2 x half> %728, i64 0, !dbg !52
  %744 = extractelement <2 x half> %728, i64 1, !dbg !52
  %745 = ptrtoint ptr addrspace(1) %.pn63540 to i64, !dbg !52
  %746 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %160, i32 0) #5, !dbg !52
  %747 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %745, i32 0) #5, !dbg !52
  %748 = inttoptr i64 %747 to ptr addrspace(1), !dbg !52
  %749 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %748, i64 %746, i32 32, i32 16)
  %750 = trunc i64 %746 to i32, !dbg !52
  %751 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %748, i32 32, i32 16, i32 %750, <2 x i32> zeroinitializer, ptr %751) #6
  %752 = load <8 x i32>, ptr %751, align 32, !dbg !52
  %753 = select i1 %170, <8 x i32> %752, <8 x i32> zeroinitializer, !dbg !52
  %754 = extractelement <8 x i32> %753, i64 0, !dbg !52
  %755 = bitcast i32 %754 to <2 x half>, !dbg !52
  %756 = extractelement <8 x i32> %753, i64 1, !dbg !52
  %757 = bitcast i32 %756 to <2 x half>, !dbg !52
  %758 = extractelement <8 x i32> %753, i64 2, !dbg !52
  %759 = bitcast i32 %758 to <2 x half>, !dbg !52
  %760 = extractelement <8 x i32> %753, i64 3, !dbg !52
  %761 = bitcast i32 %760 to <2 x half>, !dbg !52
  %762 = extractelement <8 x i32> %753, i64 4, !dbg !52
  %763 = bitcast i32 %762 to <2 x half>, !dbg !52
  %764 = extractelement <8 x i32> %753, i64 5, !dbg !52
  %765 = bitcast i32 %764 to <2 x half>, !dbg !52
  %766 = extractelement <8 x i32> %753, i64 6, !dbg !52
  %767 = bitcast i32 %766 to <2 x half>, !dbg !52
  %768 = extractelement <8 x i32> %753, i64 7, !dbg !52
  %769 = bitcast i32 %768 to <2 x half>, !dbg !52
  %770 = extractelement <2 x half> %755, i64 0, !dbg !52
  %771 = extractelement <2 x half> %755, i64 1, !dbg !52
  %772 = extractelement <2 x half> %757, i64 0, !dbg !52
  %773 = extractelement <2 x half> %757, i64 1, !dbg !52
  %774 = extractelement <2 x half> %759, i64 0, !dbg !52
  %775 = extractelement <2 x half> %759, i64 1, !dbg !52
  %776 = extractelement <2 x half> %761, i64 0, !dbg !52
  %777 = extractelement <2 x half> %761, i64 1, !dbg !52
  %778 = extractelement <2 x half> %763, i64 0, !dbg !52
  %779 = extractelement <2 x half> %763, i64 1, !dbg !52
  %780 = extractelement <2 x half> %765, i64 0, !dbg !52
  %781 = extractelement <2 x half> %765, i64 1, !dbg !52
  %782 = extractelement <2 x half> %767, i64 0, !dbg !52
  %783 = extractelement <2 x half> %767, i64 1, !dbg !52
  %784 = extractelement <2 x half> %769, i64 0, !dbg !52
  %785 = extractelement <2 x half> %769, i64 1, !dbg !52
  %786 = ptrtoint ptr addrspace(1) %.pn31542 to i64, !dbg !52
  %787 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %162, i32 0) #5, !dbg !52
  %788 = call spir_func i64 @_Z17sub_group_shufflelj(i64 %786, i32 0) #5, !dbg !52
  %789 = inttoptr i64 %788 to ptr addrspace(1), !dbg !52
  %790 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_, i32 %9, i32 %13, i32 %12, ptr addrspace(1) %789, i64 %787, i32 32, i32 16)
  %791 = trunc i64 %787 to i32, !dbg !52
  %792 = alloca [8 x i32], align 4, !dbg !52
  call spir_func void @_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj(ptr addrspace(1) %789, i32 32, i32 16, i32 %791, <2 x i32> zeroinitializer, ptr %792) #6
  %793 = load <8 x i32>, ptr %792, align 32, !dbg !52
  %794 = select i1 %170, <8 x i32> %793, <8 x i32> zeroinitializer, !dbg !52
  %795 = extractelement <8 x i32> %794, i64 0, !dbg !52
  %796 = bitcast i32 %795 to <2 x half>, !dbg !52
  %797 = extractelement <8 x i32> %794, i64 1, !dbg !52
  %798 = bitcast i32 %797 to <2 x half>, !dbg !52
  %799 = extractelement <8 x i32> %794, i64 2, !dbg !52
  %800 = bitcast i32 %799 to <2 x half>, !dbg !52
  %801 = extractelement <8 x i32> %794, i64 3, !dbg !52
  %802 = bitcast i32 %801 to <2 x half>, !dbg !52
  %803 = extractelement <8 x i32> %794, i64 4, !dbg !52
  %804 = bitcast i32 %803 to <2 x half>, !dbg !52
  %805 = extractelement <8 x i32> %794, i64 5, !dbg !52
  %806 = bitcast i32 %805 to <2 x half>, !dbg !52
  %807 = extractelement <8 x i32> %794, i64 6, !dbg !52
  %808 = bitcast i32 %807 to <2 x half>, !dbg !52
  %809 = extractelement <8 x i32> %794, i64 7, !dbg !52
  %810 = bitcast i32 %809 to <2 x half>, !dbg !52
  %811 = extractelement <2 x half> %796, i64 0, !dbg !52
  %812 = extractelement <2 x half> %796, i64 1, !dbg !52
  %813 = extractelement <2 x half> %798, i64 0, !dbg !52
  %814 = extractelement <2 x half> %798, i64 1, !dbg !52
  %815 = extractelement <2 x half> %800, i64 0, !dbg !52
  %816 = extractelement <2 x half> %800, i64 1, !dbg !52
  %817 = extractelement <2 x half> %802, i64 0, !dbg !52
  %818 = extractelement <2 x half> %802, i64 1, !dbg !52
  %819 = extractelement <2 x half> %804, i64 0, !dbg !52
  %820 = extractelement <2 x half> %804, i64 1, !dbg !52
  %821 = extractelement <2 x half> %806, i64 0, !dbg !52
  %822 = extractelement <2 x half> %806, i64 1, !dbg !52
  %823 = extractelement <2 x half> %808, i64 0, !dbg !52
  %824 = extractelement <2 x half> %808, i64 1, !dbg !52
  %825 = extractelement <2 x half> %810, i64 0, !dbg !52
  %826 = extractelement <2 x half> %810, i64 1, !dbg !52
  %827 = call spir_func i64 @_Z12get_group_idj(i32 1) #4
  %828 = trunc i64 %827 to i32
  %829 = call spir_func i64 @_Z12get_group_idj(i32 2) #4
  %830 = trunc i64 %829 to i32
  %831 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 0, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %196)
  %832 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 1, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %197)
  %833 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 2, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %198)
  %834 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 3, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %199)
  %835 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 4, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %200)
  %836 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 5, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %201)
  %837 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 6, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %202)
  %838 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 7, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %203)
  %839 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 8, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %204)
  %840 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 9, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %205)
  %841 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 10, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %206)
  %842 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 11, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %207)
  %843 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 12, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %208)
  %844 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 13, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %209)
  %845 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 14, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %210)
  %846 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 15, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %211)
  %847 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 0, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %237)
  %848 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 1, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %238)
  %849 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 2, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %239)
  %850 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 3, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %240)
  %851 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 4, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %241)
  %852 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 5, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %242)
  %853 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 6, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %243)
  %854 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 7, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %244)
  %855 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 8, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %245)
  %856 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 9, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %246)
  %857 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 10, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %247)
  %858 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 11, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %248)
  %859 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 12, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %249)
  %860 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 13, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %250)
  %861 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 14, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %251)
  %862 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 15, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %252)
  %863 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 16, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %278)
  %864 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 17, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %279)
  %865 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 18, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %280)
  %866 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 19, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %281)
  %867 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 20, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %282)
  %868 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 21, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %283)
  %869 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 22, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %284)
  %870 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 23, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %285)
  %871 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 24, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %286)
  %872 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 25, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %287)
  %873 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 26, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %288)
  %874 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 27, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %289)
  %875 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 28, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %290)
  %876 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 29, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %291)
  %877 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 30, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %292)
  %878 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 31, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %293)
  %879 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 16, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %319)
  %880 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 17, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %320)
  %881 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 18, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %321)
  %882 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 19, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %322)
  %883 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 20, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %323)
  %884 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 21, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %324)
  %885 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 22, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %325)
  %886 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 23, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %326)
  %887 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 24, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %327)
  %888 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 25, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %328)
  %889 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 26, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %329)
  %890 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 27, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %330)
  %891 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 28, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %331)
  %892 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 29, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %332)
  %893 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 30, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %333)
  %894 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 31, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %334)
  %895 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 32, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %360)
  %896 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 33, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %361)
  %897 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 34, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %362)
  %898 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 35, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %363)
  %899 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 36, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %364)
  %900 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 37, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %365)
  %901 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 38, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %366)
  %902 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 39, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %367)
  %903 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 40, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %368)
  %904 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 41, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %369)
  %905 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 42, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %370)
  %906 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 43, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %371)
  %907 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 44, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %372)
  %908 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 45, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %373)
  %909 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 46, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %374)
  %910 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 47, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %375)
  %911 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 32, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %401)
  %912 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 33, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %402)
  %913 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 34, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %403)
  %914 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 35, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %404)
  %915 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 36, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %405)
  %916 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 37, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %406)
  %917 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 38, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %407)
  %918 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 39, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %408)
  %919 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 40, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %409)
  %920 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 41, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %410)
  %921 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 42, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %411)
  %922 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 43, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %412)
  %923 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 44, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %413)
  %924 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 45, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %414)
  %925 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 46, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %415)
  %926 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 47, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %416)
  %927 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 48, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %442)
  %928 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 49, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %443)
  %929 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 50, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %444)
  %930 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 51, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %445)
  %931 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 52, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %446)
  %932 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 53, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %447)
  %933 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 54, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %448)
  %934 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 55, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %449)
  %935 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 56, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %450)
  %936 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 57, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %451)
  %937 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 58, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %452)
  %938 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 59, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %453)
  %939 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 60, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %454)
  %940 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 61, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %455)
  %941 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 62, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %456)
  %942 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 63, i32 %16, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %457)
  %943 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 48, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %483)
  %944 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 49, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %484)
  %945 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 50, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %485)
  %946 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 51, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %486)
  %947 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 52, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %487)
  %948 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 53, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %488)
  %949 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 54, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %489)
  %950 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 55, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %490)
  %951 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 56, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %491)
  %952 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 57, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %492)
  %953 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 58, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %493)
  %954 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 59, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %494)
  %955 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 60, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %495)
  %956 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 61, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %496)
  %957 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 62, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %497)
  %958 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 63, i32 %17, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %498)
  %959 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 0, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %524)
  %960 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 1, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %525)
  %961 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 2, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %526)
  %962 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 3, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %527)
  %963 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 4, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %528)
  %964 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 5, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %529)
  %965 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 6, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %530)
  %966 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 7, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %531)
  %967 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 8, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %532)
  %968 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 9, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %533)
  %969 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 10, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %534)
  %970 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 11, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %535)
  %971 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 12, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %536)
  %972 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 13, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %537)
  %973 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 14, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %538)
  %974 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 15, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %539)
  %975 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 0, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %565)
  %976 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 1, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %566)
  %977 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 2, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %567)
  %978 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 3, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %568)
  %979 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 4, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %569)
  %980 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 5, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %570)
  %981 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 6, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %571)
  %982 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 7, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %572)
  %983 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 8, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %573)
  %984 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 9, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %574)
  %985 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 10, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %575)
  %986 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 11, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %576)
  %987 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 12, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %577)
  %988 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 13, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %578)
  %989 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 14, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %579)
  %990 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 15, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %580)
  %991 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 16, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %606)
  %992 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 17, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %607)
  %993 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 18, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %608)
  %994 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 19, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %609)
  %995 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 20, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %610)
  %996 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 21, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %611)
  %997 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 22, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %612)
  %998 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 23, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %613)
  %999 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 24, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %614)
  %1000 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 25, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %615)
  %1001 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 26, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %616)
  %1002 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 27, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %617)
  %1003 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 28, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %618)
  %1004 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 29, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %619)
  %1005 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 30, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %620)
  %1006 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 31, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %621)
  %1007 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 16, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %647)
  %1008 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 17, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %648)
  %1009 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 18, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %649)
  %1010 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 19, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %650)
  %1011 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 20, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %651)
  %1012 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 21, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %652)
  %1013 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 22, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %653)
  %1014 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 23, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %654)
  %1015 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 24, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %655)
  %1016 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 25, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %656)
  %1017 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 26, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %657)
  %1018 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 27, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %658)
  %1019 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 28, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %659)
  %1020 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 29, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %660)
  %1021 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 30, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %661)
  %1022 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 31, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %662)
  %1023 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 32, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %688)
  %1024 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 33, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %689)
  %1025 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 34, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %690)
  %1026 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 35, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %691)
  %1027 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 36, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %692)
  %1028 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 37, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %693)
  %1029 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 38, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %694)
  %1030 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 39, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %695)
  %1031 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 40, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %696)
  %1032 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 41, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %697)
  %1033 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 42, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %698)
  %1034 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 43, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %699)
  %1035 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 44, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %700)
  %1036 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 45, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %701)
  %1037 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 46, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %702)
  %1038 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 47, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %703)
  %1039 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 32, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %729)
  %1040 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 33, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %730)
  %1041 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 34, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %731)
  %1042 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 35, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %732)
  %1043 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 36, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %733)
  %1044 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 37, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %734)
  %1045 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 38, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %735)
  %1046 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 39, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %736)
  %1047 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 40, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %737)
  %1048 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 41, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %738)
  %1049 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 42, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %739)
  %1050 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 43, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %740)
  %1051 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 44, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %741)
  %1052 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 45, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %742)
  %1053 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 46, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %743)
  %1054 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 47, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %744)
  %1055 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 48, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %770)
  %1056 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 49, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %771)
  %1057 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 50, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %772)
  %1058 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 51, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %773)
  %1059 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 52, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %774)
  %1060 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 53, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %775)
  %1061 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 54, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %776)
  %1062 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 55, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %777)
  %1063 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 56, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %778)
  %1064 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 57, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %779)
  %1065 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 58, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %780)
  %1066 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 59, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %781)
  %1067 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 60, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %782)
  %1068 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 61, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %783)
  %1069 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 62, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %784)
  %1070 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 63, i32 %18, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %785)
  %1071 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 48, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %811)
  %1072 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 49, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %812)
  %1073 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 50, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %813)
  %1074 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 51, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %814)
  %1075 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 52, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %815)
  %1076 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 53, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %816)
  %1077 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 54, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %817)
  %1078 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 55, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %818)
  %1079 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 56, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %819)
  %1080 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 57, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %820)
  %1081 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 58, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %821)
  %1082 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 59, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %822)
  %1083 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 60, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %823)
  %1084 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 61, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %824)
  %1085 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 62, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %825)
  %1086 = call i32 (ptr addrspace(2), ...) @_Z18__spirv_ocl_printf(ptr addrspace(2) @printfFormat_0, i32 63, i32 %19, i32 %9, i32 %828, i32 %830, i32 %13, i32 %12, half %826)
  %1087 = getelementptr half, ptr addrspace(1) %.pn511512, i64 %130, !dbg !53
  %1088 = getelementptr half, ptr addrspace(1) %.pn479514, i64 %130, !dbg !53
  %1089 = getelementptr half, ptr addrspace(1) %.pn447516, i64 %130, !dbg !53
  %1090 = getelementptr half, ptr addrspace(1) %.pn415518, i64 %130, !dbg !53
  %1091 = getelementptr half, ptr addrspace(1) %.pn383520, i64 %130, !dbg !53
  %1092 = getelementptr half, ptr addrspace(1) %.pn351522, i64 %130, !dbg !53
  %1093 = getelementptr half, ptr addrspace(1) %.pn319524, i64 %130, !dbg !53
  %1094 = getelementptr half, ptr addrspace(1) %.pn287526, i64 %130, !dbg !53
  %1095 = getelementptr half, ptr addrspace(1) %.pn255528, i64 %130, !dbg !53
  %1096 = getelementptr half, ptr addrspace(1) %.pn223530, i64 %130, !dbg !53
  %1097 = getelementptr half, ptr addrspace(1) %.pn191532, i64 %130, !dbg !53
  %1098 = getelementptr half, ptr addrspace(1) %.pn159534, i64 %130, !dbg !53
  %1099 = getelementptr half, ptr addrspace(1) %.pn127536, i64 %130, !dbg !53
  %1100 = getelementptr half, ptr addrspace(1) %.pn95538, i64 %130, !dbg !53
  %1101 = getelementptr half, ptr addrspace(1) %.pn63540, i64 %130, !dbg !53
  %1102 = getelementptr half, ptr addrspace(1) %.pn31542, i64 %130, !dbg !53
  %1103 = add nuw nsw i32 %164, 1, !dbg !27
  %exitcond.not = icmp eq i32 %1103, %21, !dbg !27
  br i1 %exitcond.not, label %._crit_edge, label %163, !dbg !27

._crit_edge:                                      ; preds = %163, %7
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #3

attributes #0 = { mustprogress nounwind willreturn }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { nounwind willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"sycl-device", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = distinct !DICompileUnit(language: DW_LANG_C, file: !5, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!5 = !DIFile(filename: "gemm_benchmark.py", directory: "/home/jovyan/workspace/triton/python/../benchmarks/triton_kernels_benchmark")
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj", linkageName: "_Z52intel_sub_group_2d_block_read_transform_16b_16r16x1cPU3AS1viiiDv2_iPj", scope: !5, file: !5, line: 212, type: !10, scopeLine: 212, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z17sub_group_shufflelj", linkageName: "_Z17sub_group_shufflelj", scope: !5, file: !5, line: 212, type: !10, scopeLine: 212, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z18__spirv_ocl_printf", linkageName: "_Z18__spirv_ocl_printf", scope: !14, file: !14, type: !10, spFlags: DISPFlagOptimized)
!14 = !DIFile(filename: "<unknown>", directory: "")
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !5, file: !5, line: 212, type: !10, scopeLine: 212, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !5, file: !5, line: 212, type: !10, scopeLine: 212, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "matmul_tensor_pointer_kernel", linkageName: "matmul_tensor_pointer_kernel", scope: !5, file: !5, line: 212, type: !10, scopeLine: 212, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4)
!18 = !{i32 16}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 222, column: 24, scope: !17)
!21 = !DILocation(line: 236, column: 37, scope: !17)
!22 = !DILocation(line: 40, column: 22, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !17, file: !24, discriminator: 0)
!24 = !DIFile(filename: "standard.py", directory: "/home/jovyan/workspace/triton/python/triton/language")
!25 = !DILocation(line: 248, column: 33, scope: !17)
!26 = !DILocation(line: 40, column: 28, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 248, column: 22, scope: !17)
!28 = !DILocation(line: 253, column: 33, scope: !17)
!29 = !DILocation(line: 40, column: 22, scope: !23, inlinedAt: !30)
!30 = !DILocation(line: 224, column: 27, scope: !17)
!31 = !DILocation(line: 40, column: 28, scope: !23, inlinedAt: !30)
!32 = !DILocation(line: 225, column: 38, scope: !17)
!33 = !DILocation(line: 226, column: 22, scope: !17)
!34 = !DILocation(line: 230, column: 19, scope: !17)
!35 = !DILocation(line: 40, column: 22, scope: !23, inlinedAt: !36)
!36 = !DILocation(line: 223, column: 27, scope: !17)
!37 = !DILocation(line: 40, column: 28, scope: !23, inlinedAt: !36)
!38 = !DILocation(line: 227, column: 29, scope: !17)
!39 = !DILocation(line: 228, column: 35, scope: !17)
!40 = !DILocation(line: 228, column: 48, scope: !17)
!41 = !DILocation(line: 230, column: 40, scope: !17)
!42 = !DILocation(line: 233, column: 22, scope: !17)
!43 = !DILocation(line: 236, column: 24, scope: !17)
!44 = !DILocation(line: 238, column: 33, scope: !17)
!45 = !DILocation(line: 238, column: 45, scope: !17)
!46 = !DILocation(line: 244, column: 40, scope: !17)
!47 = !DILocation(line: 244, column: 52, scope: !17)
!48 = !DILocation(line: 244, column: 22, scope: !17)
!49 = !DILocation(line: 249, column: 59, scope: !17)
!50 = !DILocation(line: 249, column: 55, scope: !17)
!51 = !DILocation(line: 250, column: 51, scope: !17)
!52 = !DILocation(line: 250, column: 20, scope: !17)
!53 = !DILocation(line: 253, column: 18, scope: !17)
!54 = !DILocation(line: 264, column: 4, scope: !17)

    """

    with tempfile.NamedTemporaryFile(mode='w', suffix='.llir') as f:
        f.write(ir)
        f.flush()
        kernel = triton.compile(
            f.name, options={
                'shared': 0,
                'threads_per_warp': 16,
                'num_warps': 8,
                # 'cluster_dims' : (1, 1, 1)
            })

    M, N, K = 128, 256, 64

    b = torch.arange(K * N) * 0.0001
    b = b.view(K, N).to(dtype=torch.float16).to(device='xpu')
    torch.set_printoptions(profile="full")
    print(b.cpu())

    kernel[(1, 1, 1)](
        b,
        M,
        N,
        K,  #
        64,
        256,  #
        256,
    )


if __name__ == "__main__":
    # test_scan_layouts(64, 64)
    test_flex_attention()
