#loc = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0)
#loc1 = loc(unknown)
#loc61 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":62:27)
#loc88 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_1(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg4: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg5: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg6: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg7: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg8: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg9: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg10: i32 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg11: i32 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %cst_3 = arith.constant dense<false> : tensor<64x64xi1> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<64x64xi8> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<64x64xi1> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<64x64xi64> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = tt.splat %arg10 : i32 -> tensor<64x1xi32> loc(#loc7)
    %7 = arith.cmpi slt, %5, %6 : tensor<64x1xi32> loc(#loc7)
    %8 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %9 = arith.extsi %5 : tensor<64x1xi32> to tensor<64x1xi64> loc(#loc9)
    %10 = tt.splat %arg5 : i64 -> tensor<64x1xi64> loc(#loc9)
    %11 = arith.divsi %9, %10 : tensor<64x1xi64> loc(#loc9)
    %12 = arith.remsi %9, %10 : tensor<64x1xi64> loc(#loc10)
    %13 = tt.splat %arg11 : i32 -> tensor<1x64xi32> loc(#loc11)
    %14 = tt.splat %arg4 : i64 -> tensor<1x64xi64> loc(#loc78)
    %15 = arith.cmpi slt, %arg4, %c0_i64 : i64 loc(#loc79)
    %16 = tt.splat %15 : i1 -> tensor<1x64xi1> loc(#loc80)
    %17 = tt.splat %arg4 : i64 -> tensor<64x1xi64> loc(#loc16)
    %18 = arith.muli %17, %11 : tensor<64x1xi64> loc(#loc16)
    %19 = tt.broadcast %18 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc17)
    %20 = tt.splat %arg6 : i64 -> tensor<64x64xi64> loc(#loc18)
    %21 = arith.muli %17, %12 : tensor<64x1xi64> loc(#loc19)
    %22 = tt.broadcast %21 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc20)
    %23 = tt.splat %arg7 : i64 -> tensor<64x64xi64> loc(#loc21)
    %24 = tt.splat %arg8 : i64 -> tensor<1x64xi64> loc(#loc22)
    %25 = arith.addi %arg8, %arg9 : i64 loc(#loc23)
    %26 = tt.splat %25 : i64 -> tensor<1x64xi64> loc(#loc24)
    %27 = tt.splat %arg9 : i64 -> tensor<64x64xi64> loc(#loc25)
    %28 = tt.broadcast %7 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc26)
    %29 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<64x64x!tt.ptr<i1>> loc(#loc27)
    %30 = scf.for %arg12 = %c0_i32 to %arg11 step %c64_i32 iter_args(%arg13 = %cst_6) -> (tensor<64x64xi64>)  : i32 {
      %45 = tt.splat %arg12 : i32 -> tensor<1x64xi32> loc(#loc29)
      %46 = arith.addi %45, %8 : tensor<1x64xi32> loc(#loc29)
      %47 = arith.cmpi slt, %46, %13 : tensor<1x64xi32> loc(#loc11)
      %48 = arith.extsi %46 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc78)
      %49 = arith.divsi %48, %14 : tensor<1x64xi64> loc(#loc78)
      %50 = arith.remsi %48, %14 : tensor<1x64xi64> loc(#loc81)
      %51 = arith.cmpi ne, %50, %cst_1 : tensor<1x64xi64> loc(#loc82)
      %52 = arith.subi %49, %cst : tensor<1x64xi64> loc(#loc83)
      %53 = arith.select %51, %52, %49 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc84)
      %54 = arith.cmpi slt, %46, %cst_0 : tensor<1x64xi32> loc(#loc85)
      %55 = arith.cmpi ne, %54, %16 : tensor<1x64xi1> loc(#loc80)
      %56 = arith.select %55, %53, %49 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc86)
      %57 = tt.broadcast %56 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc17)
      %58 = arith.addi %57, %19 : tensor<64x64xi64> loc(#loc17)
      %59 = arith.cmpi slt, %58, %20 : tensor<64x64xi64> loc(#loc18)
      %60 = tt.broadcast %50 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc20)
      %61 = arith.addi %60, %22 : tensor<64x64xi64> loc(#loc20)
      %62 = arith.cmpi slt, %61, %23 : tensor<64x64xi64> loc(#loc21)
      %63 = arith.andi %59, %62 : tensor<64x64xi1> loc(#loc36)
      %64 = tt.load %arg0 : !tt.ptr<i64> loc(#loc37)
      %65 = tt.splat %64 : i64 -> tensor<64x64xi64> loc(#loc38)
      %66 = arith.select %63, %65, %cst_6 : tensor<64x64xi1>, tensor<64x64xi64> loc(#loc39)
      %67 = arith.addi %58, %66 : tensor<64x64xi64> loc(#loc40)
      %68 = arith.addi %24, %50 : tensor<1x64xi64> loc(#loc22)
      %69 = tt.broadcast %68 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc41)
      %70 = arith.addi %69, %22 : tensor<64x64xi64> loc(#loc41)
      %71 = arith.cmpi sle, %70, %67 : tensor<64x64xi64> loc(#loc42)
      %72 = arith.cmpi slt, %70, %cst_6 : tensor<64x64xi64> loc(#loc43)
      %73 = arith.addi %26, %50 : tensor<1x64xi64> loc(#loc24)
      %74 = tt.broadcast %73 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc44)
      %75 = arith.addi %74, %22 : tensor<64x64xi64> loc(#loc44)
      %76 = arith.select %72, %75, %70 : tensor<64x64xi1>, tensor<64x64xi64> loc(#loc45)
      %77 = arith.cmpi sge, %76, %cst_6 : tensor<64x64xi64> loc(#loc46)
      %78 = arith.cmpi slt, %76, %27 : tensor<64x64xi64> loc(#loc25)
      %79 = arith.andi %77, %78 : tensor<64x64xi1> loc(#loc47)
      %80 = tt.broadcast %47 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc48)
      %81 = arith.andi %80, %63 : tensor<64x64xi1> loc(#loc48)
      %82 = arith.andi %81, %28 : tensor<64x64xi1> loc(#loc26)
      %83 = arith.xori %82, %cst_5 : tensor<64x64xi1> loc(#loc49)
      %84 = arith.ori %79, %83 : tensor<64x64xi1> loc(#loc50)
      tt.assert %84, "index out of bounds: 0 <= tl.where(ks4 + r0_2 + ks0*x0 < 0, ks4 + ks5 + r0_2 + ks0*x0, ks4 + r0_2 + ks0*x0) < ks5" : tensor<64x64xi1> loc(#loc51)
      %85 = tt.addptr %29, %76 : tensor<64x64x!tt.ptr<i1>>, tensor<64x64xi64> loc(#loc27)
      %86 = tt.bitcast %85 : tensor<64x64x!tt.ptr<i1>> -> tensor<64x64x!tt.ptr<i8>> loc(#loc52)
      %87 = tt.load %86, %82, %cst_4 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<i8>> loc(#loc52)
      %88 = arith.cmpi ne, %87, %cst_4 : tensor<64x64xi8> loc(#loc52)
      %89 = arith.andi %71, %88 : tensor<64x64xi1> loc(#loc53)
      %90 = arith.select %63, %89, %cst_3 : tensor<64x64xi1>, tensor<64x64xi1> loc(#loc54)
      %91 = arith.extui %90 : tensor<64x64xi1> to tensor<64x64xi64> loc(#loc55)
      %92 = arith.addi %arg13, %91 : tensor<64x64xi64> loc(#loc56)
      %93 = arith.andi %80, %28 : tensor<64x64xi1> loc(#loc57)
      %94 = arith.select %93, %92, %arg13 : tensor<64x64xi1>, tensor<64x64xi64> loc(#loc58)
      scf.yield %94 : tensor<64x64xi64> loc(#loc59)
    } loc(#loc28)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg12: i64 loc(callsite(#loc1 at #loc61)), %arg13: i64 loc(callsite(#loc1 at #loc61))):
      %45 = arith.addi %arg12, %arg13 : i64 loc(#loc91)
      tt.reduce.return %45 : i64 loc(#loc87)
    }) : (tensor<64x64xi64>) -> tensor<64xi64> loc(#loc87)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc63)
    %33 = arith.cmpi sgt, %32, %cst_2 : tensor<64x1xi64> loc(#loc64)
    %34 = arith.muli %arg4, %arg4 : i64 loc(#loc65)
    %35 = tt.splat %34 : i64 -> tensor<64x1xi64> loc(#loc66)
    %36 = arith.cmpi slt, %32, %35 : tensor<64x1xi64> loc(#loc66)
    %37 = arith.andi %33, %36 : tensor<64x1xi1> loc(#loc67)
    %38 = arith.extui %37 : tensor<64x1xi1> to tensor<64x1xi32> loc(#loc89)
    %39 = arith.cmpi eq, %32, %35 : tensor<64x1xi64> loc(#loc70)
    %40 = arith.extui %39 : tensor<64x1xi1> to tensor<64x1xi32> loc(#loc90)
    %41 = tt.splat %arg2 : !tt.ptr<i32> -> tensor<64x1x!tt.ptr<i32>> loc(#loc73)
    %42 = tt.addptr %41, %5 : tensor<64x1x!tt.ptr<i32>>, tensor<64x1xi32> loc(#loc73)
    tt.store %42, %38, %7 : tensor<64x1x!tt.ptr<i32>> loc(#loc74)
    %43 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<64x1x!tt.ptr<i32>> loc(#loc75)
    %44 = tt.addptr %43, %5 : tensor<64x1x!tt.ptr<i32>>, tensor<64x1xi32> loc(#loc75)
    tt.store %44, %40, %7 : tensor<64x1x!tt.ptr<i32>> loc(#loc76)
    tt.return loc(#loc77)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":21:28)
#loc3 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":21:33)
#loc4 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":22:36)
#loc5 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":22:44)
#loc6 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":22:23)
#loc7 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":23:21)
#loc8 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":24:37)
#loc9 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":26:19)
#loc10 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":27:19)
#loc11 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":32:29)
#loc12 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":73:16)
#loc13 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":35:59)
#loc14 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:36)
#loc15 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:32)
#loc16 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":37:26)
#loc17 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":37:22)
#loc18 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":39:22)
#loc19 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":40:26)
#loc20 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":40:22)
#loc21 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":42:22)
#loc22 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":49:22)
#loc23 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:72)
#loc24 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:78)
#loc25 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:202)
#loc26 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:229)
#loc27 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":54:35)
#loc28 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":30:40)
#loc29 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":31:31)
#loc30 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":74:20)
#loc31 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:34)
#loc32 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:44)
#loc33 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:47)
#loc34 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:25)
#loc35 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:47)
#loc36 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":43:22)
#loc37 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":44:23)
#loc38 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":45:37)
#loc39 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":46:36)
#loc40 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":48:24)
#loc41 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":49:29)
#loc42 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":50:25)
#loc43 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:63)
#loc44 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:85)
#loc45 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:93)
#loc46 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:32)
#loc47 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:118)
#loc48 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:222)
#loc49 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:212)
#loc50 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:210)
#loc51 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:237)
#loc52 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":54:119)
#loc53 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":55:24)
#loc54 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":57:38)
#loc55 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":58:25)
#loc56 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":60:25)
#loc57 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:36)
#loc58 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:50)
#loc59 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:8)
#loc60 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc62 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc63 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":62:30)
#loc64 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":64:20)
#loc65 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":65:16)
#loc66 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":66:20)
#loc67 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":67:20)
#loc68 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":69:21)
#loc69 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":68:21)
#loc70 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":70:21)
#loc71 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":72:21)
#loc72 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":71:21)
#loc73 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":73:25)
#loc74 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":73:37)
#loc75 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:25)
#loc76 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:37)
#loc77 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:4)
#loc78 = loc(callsite(#loc12 at #loc13))
#loc79 = loc(callsite(#loc14 at #loc13))
#loc80 = loc(callsite(#loc15 at #loc13))
#loc81 = loc(callsite(#loc30 at #loc13))
#loc82 = loc(callsite(#loc31 at #loc13))
#loc83 = loc(callsite(#loc32 at #loc13))
#loc84 = loc(callsite(#loc33 at #loc13))
#loc85 = loc(callsite(#loc34 at #loc13))
#loc86 = loc(callsite(#loc35 at #loc13))
#loc87 = loc(callsite(#loc60 at #loc61))
#loc89 = loc(fused[#loc68, #loc69])
#loc90 = loc(fused[#loc71, #loc72])
#loc91 = loc(callsite(#loc62 at #loc87))
