; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %8 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %9 = trunc i64 %8 to i32, !dbg !20
  %10 = shl i32 %9, 9, !dbg !21
  %11 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %12 = trunc i64 %11 to i32, !dbg !22
  %13 = shl i32 %12, 1, !dbg !22
  %14 = and i32 %13, 510, !dbg !22
  %15 = or disjoint i32 %14, %10, !dbg !23
  %16 = or disjoint i32 %15, 1, !dbg !23
  %17 = icmp slt i32 %15, %5, !dbg !24
  %.frozen = freeze i32 %15, !dbg !25
  %18 = sdiv i32 %.frozen, 128, !dbg !25
  %19 = mul i32 %18, 128, !dbg !26
  %.decomposed = sub i32 %.frozen, %19, !dbg !26
  %20 = srem i32 %16, 128, !dbg !26
  %21 = sdiv i32 %15, 1024, !dbg !27
  br i1 %17, label %22, label %26, !dbg !28

22:                                               ; preds = %7
  %23 = sext i32 %15 to i64, !dbg !29
  %24 = getelementptr bfloat, ptr addrspace(1) %0, i64 %23, !dbg !29
  %25 = load <2 x i16>, ptr addrspace(1) %24, align 4, !dbg !28
  br label %26, !dbg !28

26:                                               ; preds = %22, %7
  %bc1 = phi <2 x i16> [ %25, %22 ], [ zeroinitializer, %7 ], !dbg !28
  %27 = extractelement <2 x i16> %bc1, i64 0, !dbg !30
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #1
  %29 = extractelement <2 x i16> %bc1, i64 1, !dbg !30
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #1
  br i1 %17, label %31, label %45, !dbg !31

31:                                               ; preds = %26
  %.lhs.trunc = trunc nsw i32 %20 to i8, !dbg !32
  %32 = srem i8 %.lhs.trunc, 64, !dbg !32
  %33 = sext i8 %32 to i64, !dbg !33
  %34 = mul i64 %4, %33, !dbg !33
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !34
  %36 = sext i32 %21 to i64, !dbg !35
  %37 = getelementptr float, ptr addrspace(1) %35, i64 %36, !dbg !34
  %.lhs.trunc4 = trunc nsw i32 %.decomposed to i8, !dbg !32
  %38 = srem i8 %.lhs.trunc4, 64, !dbg !32
  %39 = sext i8 %38 to i64, !dbg !33
  %40 = mul i64 %4, %39, !dbg !33
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !34
  %42 = getelementptr float, ptr addrspace(1) %41, i64 %36, !dbg !34
  %43 = load float, ptr addrspace(1) %42, align 4, !dbg !31
  %44 = load <1 x float>, ptr addrspace(1) %37, align 4, !dbg !31
  br label %45, !dbg !31

45:                                               ; preds = %26, %31
  %46 = phi float [ %43, %31 ], [ 0.000000e+00, %26 ]
  %47 = phi <1 x float> [ %44, %31 ], [ zeroinitializer, %26 ], !dbg !31
  %48 = extractelement <1 x float> %47, i64 0, !dbg !31
  %49 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %46), !dbg !36
  %50 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %48), !dbg !36
  %51 = fptrunc double %2 to float, !dbg !37
  %52 = fmul float %49, %51, !dbg !38
  %53 = fmul float %50, %51, !dbg !38
  %54 = fmul float %28, %52, !dbg !39
  %55 = fmul float %30, %53, !dbg !39
  %56 = icmp slt i32 %.decomposed, 64, !dbg !40
  %57 = shl nsw i32 %18, 7, !dbg !41
  %58 = and i1 %17, %56, !dbg !42
  br i1 %58, label %59, label %65, !dbg !43

59:                                               ; preds = %45
  %60 = add nsw i32 %.decomposed, 64, !dbg !44
  %61 = add i32 %60, %57, !dbg !45
  %62 = sext i32 %61 to i64, !dbg !46
  %63 = getelementptr bfloat, ptr addrspace(1) %0, i64 %62, !dbg !46
  %64 = load <2 x i16>, ptr addrspace(1) %63, align 4, !dbg !43
  br label %65, !dbg !43

65:                                               ; preds = %59, %45
  %bc2 = phi <2 x i16> [ %64, %59 ], [ zeroinitializer, %45 ], !dbg !43
  %66 = extractelement <2 x i16> %bc2, i64 0, !dbg !47
  %67 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %66) #1
  %68 = extractelement <2 x i16> %bc2, i64 1, !dbg !47
  %69 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %68) #1
  %70 = fsub float 0.000000e+00, %67, !dbg !48
  %71 = fsub float 0.000000e+00, %69, !dbg !48
  %72 = icmp sgt i32 %.decomposed, 63, !dbg !49
  %73 = and i1 %17, %72, !dbg !50
  br i1 %73, label %74, label %80, !dbg !51

74:                                               ; preds = %65
  %75 = add nsw i32 %.decomposed, -64, !dbg !52
  %76 = add nsw i32 %75, %57, !dbg !53
  %77 = sext i32 %76 to i64, !dbg !54
  %78 = getelementptr bfloat, ptr addrspace(1) %0, i64 %77, !dbg !54
  %79 = load <2 x i16>, ptr addrspace(1) %78, align 4, !dbg !51
  br label %80, !dbg !51

80:                                               ; preds = %74, %65
  %bc3 = phi <2 x i16> [ %79, %74 ], [ zeroinitializer, %65 ], !dbg !51
  %81 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %46), !dbg !55
  %82 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %48), !dbg !55
  br i1 %17, label %83, label %104, !dbg !56

83:                                               ; preds = %80
  %84 = extractelement <2 x i16> %bc3, i64 0, !dbg !57
  %85 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %84) #1
  %86 = select i1 %56, float %70, float %85, !dbg !58
  %87 = fmul float %81, %51, !dbg !59
  %88 = fmul float %87, %86, !dbg !60
  %89 = fadd float %54, %88, !dbg !61
  %90 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %89) #1
  %91 = insertelement <2 x i16> poison, i16 %90, i64 0, !dbg !56
  %92 = extractelement <2 x i16> %bc3, i64 1, !dbg !57
  %93 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %92) #1
  %94 = select i1 %56, float %71, float %93, !dbg !58
  %95 = fmul float %82, %51, !dbg !59
  %96 = fmul float %95, %94, !dbg !60
  %97 = fadd float %55, %96, !dbg !61
  %98 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %97) #1
  %99 = insertelement <2 x i16> %91, i16 %98, i64 1, !dbg !56
  %100 = bitcast <2 x i16> %99 to i32, !dbg !56
  %101 = insertelement <1 x i32> poison, i32 %100, i64 0, !dbg !56
  %102 = sext i32 %15 to i64, !dbg !62
  %103 = getelementptr bfloat, ptr addrspace(1) %3, i64 %102, !dbg !62
  store <1 x i32> %101, ptr addrspace(1) %103, align 4, !dbg !56
  br label %104, !dbg !56

104:                                              ; preds = %83, %80
  ret void, !dbg !63
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cjexvu5kn4wkr6ih3d5hl4oask22y3owwddi732zchwvsw5mxozv.py", directory: "/tmp/torchinductor_jovyan/je")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 256, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 25, column: 19, scope: !17)
!26 = !DILocation(line: 23, column: 19, scope: !17)
!27 = !DILocation(line: 24, column: 19, scope: !17)
!28 = !DILocation(line: 26, column: 35, scope: !17)
!29 = !DILocation(line: 26, column: 30, scope: !17)
!30 = !DILocation(line: 26, column: 45, scope: !17)
!31 = !DILocation(line: 27, column: 53, scope: !17)
!32 = !DILocation(line: 27, column: 46, scope: !17)
!33 = !DILocation(line: 27, column: 41, scope: !17)
!34 = !DILocation(line: 27, column: 30, scope: !17)
!35 = !DILocation(line: 27, column: 35, scope: !17)
!36 = !DILocation(line: 29, column: 23, scope: !17)
!37 = !DILocation(line: 30, column: 19, scope: !17)
!38 = !DILocation(line: 31, column: 18, scope: !17)
!39 = !DILocation(line: 33, column: 18, scope: !17)
!40 = !DILocation(line: 38, column: 19, scope: !17)
!41 = !DILocation(line: 39, column: 40, scope: !17)
!42 = !DILocation(line: 39, column: 60, scope: !17)
!43 = !DILocation(line: 39, column: 52, scope: !17)
!44 = !DILocation(line: 39, column: 36, scope: !17)
!45 = !DILocation(line: 39, column: 46, scope: !17)
!46 = !DILocation(line: 39, column: 31, scope: !17)
!47 = !DILocation(line: 39, column: 111, scope: !17)
!48 = !DILocation(line: 40, column: 13, scope: !17)
!49 = !DILocation(line: 43, column: 20, scope: !17)
!50 = !DILocation(line: 46, column: 63, scope: !17)
!51 = !DILocation(line: 46, column: 55, scope: !17)
!52 = !DILocation(line: 46, column: 49, scope: !17)
!53 = !DILocation(line: 46, column: 41, scope: !17)
!54 = !DILocation(line: 46, column: 31, scope: !17)
!55 = !DILocation(line: 48, column: 24, scope: !17)
!56 = !DILocation(line: 53, column: 37, scope: !17)
!57 = !DILocation(line: 46, column: 114, scope: !17)
!58 = !DILocation(line: 0, scope: !17)
!59 = !DILocation(line: 49, column: 20, scope: !17)
!60 = !DILocation(line: 51, column: 20, scope: !17)
!61 = !DILocation(line: 52, column: 19, scope: !17)
!62 = !DILocation(line: 53, column: 25, scope: !17)
!63 = !DILocation(line: 53, column: 4, scope: !17)
