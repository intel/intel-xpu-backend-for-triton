#loc = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0)
#loc60 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":284:0)
#loc62 = loc(unknown)
#loc65 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0)
#loc69 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":70:0)
module {
  tt.func public @triton_red_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_sum_unsqueeze_view_where_2(%arg0: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg4: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg5: i64 loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg6: i64 loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0), %arg7: i32 loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":18:0)) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %c1_i32_0 = arith.constant 1 : i32 loc(#loc3)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc3)
    %1 = arith.muli %0, %c1_i32_1 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1 : i32, start = 0 : i32} : tensor<1xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<1xi32> -> tensor<1x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x1xi32> loc(#loc6)
    %true = arith.constant true loc(#loc7)
    %cst = arith.constant dense<true> : tensor<1x16xi1> loc(#loc7)
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %c0_i64 = arith.constant 0 : i64 loc(#loc10)
    %cst_2 = arith.constant dense<0> : tensor<1x16xi64> loc(#loc10)
    %c0_i32 = arith.constant 0 : i32 loc(#loc11)
    %c16_i32 = arith.constant 16 : i32 loc(#loc11)
    %8 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc11)
    %9 = arith.bitcast %arg7 : i32 to i32 loc(#loc11)
    %10 = arith.bitcast %c16_i32 : i32 to i32 loc(#loc11)
    %11 = ub.poison : i32 loc(#loc11)
    %12 = scf.for %arg8 = %8 to %9 step %10 iter_args(%arg9 = %cst_2) -> (tensor<1x16xi64>)  : i32 {
      %22 = tt.splat %arg8 : i32 -> tensor<1x16xi32> loc(#loc12)
      %23 = arith.addi %22, %7 : tensor<1x16xi32> loc(#loc12)
      %24 = tt.splat %arg7 : i32 -> tensor<1x16xi32> loc(#loc13)
      %25 = arith.cmpi slt, %23, %24 : tensor<1x16xi32> loc(#loc13)
      %26 = tt.splat %arg0 : !tt.ptr<i32> -> tensor<1x16x!tt.ptr<i32>> loc(#loc14)
      %27 = tt.addptr %26, %23 : tensor<1x16x!tt.ptr<i32>>, tensor<1x16xi32> loc(#loc14)
      %cst_7 = arith.constant 0.000000e+00 : f32 loc(#loc15)
      %cst_8 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc15)
      %28 = arith.fptosi %cst_8 : tensor<1x16xf32> to tensor<1x16xi32> loc(#loc15)
      %29 = tt.load %27, %25, %28 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<i32>> loc(#loc15)
      %30 = arith.extsi %29 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc16)
      %31 = arith.addi %arg9, %30 : tensor<1x16xi64> loc(#loc17)
      %32 = arith.select %25, %31, %arg9 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc18)
      scf.yield %32 : tensor<1x16xi64> loc(#loc19)
    } loc(#loc11)
    %13 = tt.call @"triton.language.standard.sum__i64S1_16S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%12) : (tensor<1x16xi64>) -> tensor<1xi64> loc(#loc20)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc21)
    %15 = arith.trunci %14 : tensor<1x1xi64> to tensor<1x1xi32> loc(#loc22)
    %c0_i32_3 = arith.constant 0 : i32 loc(#loc23)
    %cst_4 = arith.constant dense<0> : tensor<1x1xi32> loc(#loc23)
    %16 = tt.splat %arg2 : !tt.ptr<i32> -> tensor<1x1x!tt.ptr<i32>> loc(#loc24)
    %17 = tt.addptr %16, %cst_4 : tensor<1x1x!tt.ptr<i32>>, tensor<1x1xi32> loc(#loc24)
    tt.store %17, %15 : tensor<1x1x!tt.ptr<i32>> loc(#loc25)
    %c0_i32_5 = arith.constant 0 : i32 loc(#loc26)
    %c16_i32_6 = arith.constant 16 : i32 loc(#loc26)
    %18 = arith.bitcast %c0_i32_5 : i32 to i32 loc(#loc26)
    %19 = arith.bitcast %arg7 : i32 to i32 loc(#loc26)
    %20 = arith.bitcast %c16_i32_6 : i32 to i32 loc(#loc26)
    %21 = ub.poison : i32 loc(#loc26)
    scf.for %arg8 = %18 to %19 step %20  : i32 {
      %22 = tt.splat %arg8 : i32 -> tensor<1x16xi32> loc(#loc27)
      %23 = arith.addi %22, %7 : tensor<1x16xi32> loc(#loc27)
      %24 = tt.splat %arg7 : i32 -> tensor<1x16xi32> loc(#loc28)
      %25 = arith.cmpi slt, %23, %24 : tensor<1x16xi32> loc(#loc28)
      %26 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x16x!tt.ptr<i64>> loc(#loc29)
      %27 = tt.addptr %26, %23 : tensor<1x16x!tt.ptr<i64>>, tensor<1x16xi32> loc(#loc29)
      %cst_7 = arith.constant 0.000000e+00 : f32 loc(#loc30)
      %cst_8 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc30)
      %28 = arith.fptosi %cst_8 : tensor<1x16xf32> to tensor<1x16xi64> loc(#loc30)
      %29 = tt.load %27, %25, %28 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<i64>> loc(#loc30)
      %30 = arith.trunci %29 : tensor<1x16xi64> to tensor<1x16xi32> loc(#loc31)
      %31 = tt.broadcast %15 : tensor<1x1xi32> -> tensor<1x16xi32> loc(#loc32)
      %32 = arith.cmpi slt, %23, %31 : tensor<1x16xi32> loc(#loc32)
      %c-1_i32 = arith.constant -1 : i32 loc(#loc33)
      %c-1_i64 = arith.constant -1 : i64 loc(#loc33)
      %33 = arith.addi %c-1_i64, %arg5 : i64 loc(#loc33)
      %34 = arith.addi %33, %arg6 : i64 loc(#loc34)
      %35 = tt.call @torch._inductor.runtime.triton_helpers.div_floor_integer__i64_i64__(%34, %arg6) : (i64, i64) -> i64 loc(#loc35)
      %36 = arith.extsi %30 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc36)
      %37 = tt.splat %35 : i64 -> tensor<1x16xi64> loc(#loc36)
      %38 = arith.select %32, %36, %37 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc36)
      %c-1_i32_9 = arith.constant -1 : i32 loc(#loc37)
      %c-1_i64_10 = arith.constant -1 : i64 loc(#loc37)
      %39 = arith.addi %c-1_i64_10, %arg5 : i64 loc(#loc37)
      %40 = arith.addi %39, %arg6 : i64 loc(#loc38)
      %41 = tt.call @torch._inductor.runtime.triton_helpers.div_floor_integer__i64_i64__(%40, %arg6) : (i64, i64) -> i64 loc(#loc39)
      %c1_i32_11 = arith.constant 1 : i32 loc(#loc40)
      %c1_i64 = arith.constant 1 : i64 loc(#loc40)
      %42 = arith.addi %c1_i64, %41 : i64 loc(#loc40)
      %43 = tt.splat %42 : i64 -> tensor<1x16xi64> loc(#loc41)
      %44 = arith.addi %38, %43 : tensor<1x16xi64> loc(#loc41)
      %c0_i32_12 = arith.constant 0 : i32 loc(#loc42)
      %45 = arith.extsi %c0_i32_12 : i32 to i64 loc(#loc42)
      %46 = tt.splat %45 : i64 -> tensor<1x16xi64> loc(#loc42)
      %47 = arith.cmpi slt, %38, %46 : tensor<1x16xi64> loc(#loc42)
      %48 = arith.select %47, %44, %38 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc43)
      %c0_i32_13 = arith.constant 0 : i32 loc(#loc44)
      %49 = arith.extsi %c0_i32_13 : i32 to i64 loc(#loc44)
      %50 = tt.splat %49 : i64 -> tensor<1x16xi64> loc(#loc44)
      %51 = arith.cmpi sle, %50, %48 : tensor<1x16xi64> loc(#loc44)
      %c-1_i32_14 = arith.constant -1 : i32 loc(#loc45)
      %c-1_i64_15 = arith.constant -1 : i64 loc(#loc45)
      %52 = arith.addi %c-1_i64_15, %arg5 : i64 loc(#loc45)
      %53 = arith.addi %52, %arg6 : i64 loc(#loc46)
      %54 = tt.call @torch._inductor.runtime.triton_helpers.div_floor_integer__i64_i64__(%53, %arg6) : (i64, i64) -> i64 loc(#loc47)
      %c1_i32_16 = arith.constant 1 : i32 loc(#loc48)
      %c1_i64_17 = arith.constant 1 : i64 loc(#loc48)
      %55 = arith.addi %c1_i64_17, %54 : i64 loc(#loc48)
      %56 = tt.splat %55 : i64 -> tensor<1x16xi64> loc(#loc49)
      %57 = arith.cmpi slt, %48, %56 : tensor<1x16xi64> loc(#loc49)
      %58 = arith.andi %51, %57 : tensor<1x16xi1> loc(#loc50)
      %true_18 = arith.constant true loc(#loc51)
      %cst_19 = arith.constant dense<true> : tensor<1x16xi1> loc(#loc51)
      %59 = arith.xori %25, %cst_19 : tensor<1x16xi1> loc(#loc51)
      %60 = arith.ori %58, %59 : tensor<1x16xi1> loc(#loc52)
      tt.assert %60, "index out of bounds: 0 <= tmp15 < 1 + (triton_helpers.div_floor_integer((-1) + ks0 + ks1,  ks1))" : tensor<1x16xi1> loc(#loc53)
      %c1_i32_20 = arith.constant 1 : i32 loc(#loc54)
      %cst_21 = arith.constant dense<1> : tensor<1x1xi32> loc(#loc54)
      %61 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<1x16x!tt.ptr<i32>> loc(#loc55)
      %62 = tt.addptr %61, %23 : tensor<1x16x!tt.ptr<i32>>, tensor<1x16xi32> loc(#loc55)
      tt.store %62, %30, %25 : tensor<1x16x!tt.ptr<i32>> loc(#loc56)
      %63 = tt.splat %arg4 : !tt.ptr<i32> -> tensor<1x16x!tt.ptr<i32>> loc(#loc57)
      %64 = tt.addptr %63, %48 : tensor<1x16x!tt.ptr<i32>>, tensor<1x16xi64> loc(#loc57)
      %cst_22 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc58)
      tt.store %64, %cst_22, %25 : tensor<1x16x!tt.ptr<i32>> loc(#loc58)
    } loc(#loc26)
    tt.return loc(#loc59)
  } loc(#loc)
  tt.func private @"triton.language.standard.sum__i64S1_16S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<1x16xi64> loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":284:0)) -> tensor<1xi64> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: i64 loc(unknown), %arg2: i64 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__i64_i64__(%arg1, %arg2) : (i64, i64) -> i64 loc(#loc61)
      tt.reduce.return %2 : i64 loc(#loc61)
    }) : (tensor<1x16xi64>) -> tensor<1xi64> loc(#loc61)
    tt.return %0 : tensor<1xi64> loc(#loc63)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<1xi64> loc(#loc64)
    tt.return %1 : tensor<1xi64> loc(#loc64)
  } loc(#loc60)
  tt.func private @triton.language.standard._sum_combine__i64_i64__(%arg0: i64 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0), %arg1: i64 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0)) -> i64 attributes {noinline = false} {
    %0 = arith.addi %arg0, %arg1 : i64 loc(#loc66)
    tt.return %0 : i64 loc(#loc67)
  ^bb1:  // no predecessors
    %1 = ub.poison : i64 loc(#loc68)
    tt.return %1 : i64 loc(#loc68)
  } loc(#loc65)
  tt.func private @torch._inductor.runtime.triton_helpers.div_floor_integer__i64_i64__(%arg0: i64 loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":70:0), %arg1: i64 loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":70:0)) -> i64 attributes {noinline = false} {
    %0 = arith.divsi %arg0, %arg1 : i64 loc(#loc70)
    %1 = arith.remsi %arg0, %arg1 : i64 loc(#loc71)
    %c0_i32 = arith.constant 0 : i32 loc(#loc72)
    %2 = arith.extsi %c0_i32 : i32 to i64 loc(#loc72)
    %3 = arith.cmpi ne, %1, %2 : i64 loc(#loc72)
    %c1_i32 = arith.constant 1 : i32 loc(#loc73)
    %c1_i64 = arith.constant 1 : i64 loc(#loc73)
    %4 = arith.subi %0, %c1_i64 : i64 loc(#loc73)
    %5 = arith.select %3, %4, %0 : i64 loc(#loc74)
    %c0_i32_0 = arith.constant 0 : i32 loc(#loc75)
    %6 = arith.extsi %c0_i32_0 : i32 to i64 loc(#loc75)
    %7 = arith.cmpi slt, %arg0, %6 : i64 loc(#loc75)
    %c0_i32_1 = arith.constant 0 : i32 loc(#loc76)
    %8 = arith.extsi %c0_i32_1 : i32 to i64 loc(#loc76)
    %9 = arith.cmpi slt, %arg1, %8 : i64 loc(#loc76)
    %10 = arith.cmpi ne, %7, %9 : i1 loc(#loc77)
    %11 = arith.select %10, %5, %0 : i64 loc(#loc78)
    tt.return %11 : i64 loc(#loc79)
  ^bb1:  // no predecessors
    %12 = ub.poison : i64 loc(#loc80)
    tt.return %12 : i64 loc(#loc80)
  } loc(#loc69)
} loc(#loc)
#loc1 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":19:13)
#loc2 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":22:28)
#loc3 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":22:33)
#loc4 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":23:36)
#loc5 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":23:44)
#loc6 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":23:23)
#loc7 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":24:46)
#loc8 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":25:27)
#loc9 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":25:37)
#loc10 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":27:43)
#loc11 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":28:40)
#loc12 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":29:31)
#loc13 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":30:29)
#loc14 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":34:34)
#loc15 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":34:41)
#loc16 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":35:23)
#loc17 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":37:23)
#loc18 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":38:40)
#loc19 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":38:8)
#loc20 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":39:25)
#loc21 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":39:28)
#loc22 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":40:19)
#loc23 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":41:49)
#loc24 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":41:25)
#loc25 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":41:67)
#loc26 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":42:40)
#loc27 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":43:31)
#loc28 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":44:29)
#loc29 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":48:34)
#loc30 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":48:41)
#loc31 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":49:23)
#loc32 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":51:22)
#loc33 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":52:56)
#loc34 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":52:62)
#loc35 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":52:68)
#loc36 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":53:37)
#loc37 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":54:61)
#loc38 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":54:67)
#loc39 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":54:73)
#loc40 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":54:21)
#loc41 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":55:24)
#loc42 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":56:24)
#loc43 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":57:39)
#loc44 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:32)
#loc45 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:95)
#loc46 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:101)
#loc47 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:107)
#loc48 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:55)
#loc49 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:50)
#loc50 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:42)
#loc51 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:119)
#loc52 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:117)
#loc53 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":58:129)
#loc54 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":59:35)
#loc55 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":60:29)
#loc56 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":60:79)
#loc57 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":61:29)
#loc58 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":61:81)
#loc59 = loc("/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py":42:4)
#loc61 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc63 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:11)
#loc64 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:4)
#loc66 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc67 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:11)
#loc68 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:4)
#loc70 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":73:16)
#loc71 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":74:20)
#loc72 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:34)
#loc73 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:44)
#loc74 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:47)
#loc75 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:25)
#loc76 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:36)
#loc77 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:32)
#loc78 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:47)
#loc79 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:11)
#loc80 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:4)
