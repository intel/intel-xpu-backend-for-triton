; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7, ptr addrspace(3) captures(none) %8) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %10 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %11 = trunc i64 %10 to i32, !dbg !21
  %12 = icmp sgt i32 %5, %11, !dbg !22
  %13 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %14 = trunc i64 %13 to i32, !dbg !23
  %15 = shl i32 %14, 2, !dbg !23
  %16 = and i32 %15, 2044, !dbg !23
  %17 = shl i32 %11, 12, !dbg !24
  %18 = or disjoint i32 %16, %17
  %19 = sext i32 %18 to i64, !dbg !25
  br i1 %12, label %20, label %23, !dbg !26

20:                                               ; preds = %9
  %21 = getelementptr bfloat, ptr addrspace(1) %0, i64 %19, !dbg !27
  %22 = load <4 x i16>, ptr addrspace(1) %21, align 8, !dbg !26
  br label %23, !dbg !26

23:                                               ; preds = %20, %9
  %bc17 = phi <4 x i16> [ %22, %20 ], [ zeroinitializer, %9 ], !dbg !26
  %24 = extractelement <4 x i16> %bc17, i64 0, !dbg !28
  %25 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %24) #4
  %26 = extractelement <4 x i16> %bc17, i64 1, !dbg !28
  %27 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %26) #4
  %28 = extractelement <4 x i16> %bc17, i64 2, !dbg !28
  %29 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %28) #4
  %30 = extractelement <4 x i16> %bc17, i64 3, !dbg !28
  %31 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %30) #4
  br i1 %12, label %32, label %35, !dbg !29

32:                                               ; preds = %23
  %33 = getelementptr bfloat, ptr addrspace(1) %1, i64 %19, !dbg !30
  %34 = load <4 x i16>, ptr addrspace(1) %33, align 8, !dbg !29
  br label %35, !dbg !29

35:                                               ; preds = %32, %23
  %bc21 = phi <4 x i16> [ %34, %32 ], [ zeroinitializer, %23 ], !dbg !29
  %36 = extractelement <4 x i16> %bc21, i64 0, !dbg !31
  %37 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %36) #4
  %38 = extractelement <4 x i16> %bc21, i64 1, !dbg !31
  %39 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %38) #4
  %40 = extractelement <4 x i16> %bc21, i64 2, !dbg !31
  %41 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %40) #4
  %42 = extractelement <4 x i16> %bc21, i64 3, !dbg !31
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #4
  %44 = fadd float %25, %37, !dbg !32
  %45 = fadd float %27, %39, !dbg !32
  %46 = fadd float %29, %41, !dbg !32
  %47 = fadd float %31, %43, !dbg !32
  %48 = fmul float %44, %44, !dbg !33
  %49 = fmul float %45, %45, !dbg !33
  %50 = fmul float %46, %46, !dbg !33
  %51 = fmul float %47, %47, !dbg !33
  %52 = or disjoint i64 %19, 2048, !dbg !34
  br i1 %12, label %53, label %56, !dbg !26

53:                                               ; preds = %35
  %54 = getelementptr bfloat, ptr addrspace(1) %0, i64 %52, !dbg !27
  %55 = load <4 x i16>, ptr addrspace(1) %54, align 8, !dbg !26
  br label %56, !dbg !26

56:                                               ; preds = %53, %35
  %bc17.1 = phi <4 x i16> [ %55, %53 ], [ zeroinitializer, %35 ], !dbg !26
  %57 = extractelement <4 x i16> %bc17.1, i64 0, !dbg !28
  %58 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %57) #4
  %59 = extractelement <4 x i16> %bc17.1, i64 1, !dbg !28
  %60 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %59) #4
  %61 = extractelement <4 x i16> %bc17.1, i64 2, !dbg !28
  %62 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %61) #4
  %63 = extractelement <4 x i16> %bc17.1, i64 3, !dbg !28
  %64 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %63) #4
  br i1 %12, label %65, label %68, !dbg !29

65:                                               ; preds = %56
  %66 = getelementptr bfloat, ptr addrspace(1) %1, i64 %52, !dbg !30
  %67 = load <4 x i16>, ptr addrspace(1) %66, align 8, !dbg !29
  br label %68, !dbg !29

68:                                               ; preds = %65, %56
  %bc21.1 = phi <4 x i16> [ %67, %65 ], [ zeroinitializer, %56 ], !dbg !29
  %69 = extractelement <4 x i16> %bc21.1, i64 0, !dbg !31
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #4
  %71 = extractelement <4 x i16> %bc21.1, i64 1, !dbg !31
  %72 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %71) #4
  %73 = extractelement <4 x i16> %bc21.1, i64 2, !dbg !31
  %74 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %73) #4
  %75 = extractelement <4 x i16> %bc21.1, i64 3, !dbg !31
  %76 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %75) #4
  %77 = fadd float %58, %70, !dbg !32
  %78 = fadd float %60, %72, !dbg !32
  %79 = fadd float %62, %74, !dbg !32
  %80 = fadd float %64, %76, !dbg !32
  %81 = fmul float %77, %77, !dbg !33
  %82 = fmul float %78, %78, !dbg !33
  %83 = fmul float %79, %79, !dbg !33
  %84 = fmul float %80, %80, !dbg !33
  %85 = fadd float %48, %81, !dbg !35
  %86 = fadd float %49, %82, !dbg !35
  %87 = fadd float %50, %83, !dbg !35
  %88 = fadd float %51, %84, !dbg !35
  %89 = and i32 %14, 511, !dbg !23
  %90 = and i32 %14, 31, !dbg !23
  %91 = fadd float %85, %86, !dbg !36
  %92 = fadd float %87, %91, !dbg !36
  %93 = fadd float %88, %92, !dbg !36
  %94 = select i1 %12, float %93, float 0.000000e+00, !dbg !36
  %95 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %94) #5, !dbg !40
  %96 = icmp eq i32 %90, 0, !dbg !40
  br i1 %96, label %97, label %101, !dbg !40

97:                                               ; preds = %68
  %98 = lshr exact i32 %89, 5, !dbg !23
  %99 = zext nneg i32 %98 to i64, !dbg !40
  %100 = getelementptr float, ptr addrspace(3) %8, i64 %99, !dbg !40
  store float %95, ptr addrspace(3) %100, align 4, !dbg !40
  br label %101, !dbg !40

101:                                              ; preds = %97, %68
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !40
  %102 = icmp samesign ult i32 %89, 16, !dbg !40
  %103 = and i64 %13, 511, !dbg !40
  %104 = getelementptr float, ptr addrspace(3) %8, i64 %103, !dbg !40
  br i1 %102, label %105, label %107, !dbg !40

105:                                              ; preds = %101
  %106 = load float, ptr addrspace(3) %104, align 4, !dbg !40
  br label %107, !dbg !40

107:                                              ; preds = %105, %101
  %108 = phi float [ %106, %105 ], [ undef, %101 ], !dbg !39
  %109 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %108, i32 16) #5, !dbg !40
  %110 = and i32 %14, 15, !dbg !40
  %111 = icmp eq i32 %110, 0, !dbg !40
  %112 = and i1 %102, %111, !dbg !40
  br i1 %112, label %113, label %114, !dbg !40

113:                                              ; preds = %107
  store float %109, ptr addrspace(3) %104, align 4, !dbg !40
  br label %114, !dbg !40

114:                                              ; preds = %113, %107
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !40
  %115 = load float, ptr addrspace(3) %8, align 4, !dbg !40
  %116 = fmul float %115, 0x3F30000000000000, !dbg !41
  %117 = fptrunc double %3 to float, !dbg !42
  %118 = fadd float %116, %117, !dbg !43
  %119 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %118) #6, !dbg !44
  br i1 %12, label %.split.us.preheader, label %.split25.us

.split.us.preheader:                              ; preds = %114
  %120 = zext nneg i32 %16 to i64, !dbg !45
  %121 = getelementptr bfloat, ptr addrspace(1) %2, i64 %120, !dbg !46
  %122 = load i16, ptr addrspace(1) %121, align 8, !dbg !47
  %123 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %122) #4
  %124 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 2, !dbg !47
  %125 = load i16, ptr addrspace(1) %124, align 2, !dbg !47
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 4, !dbg !47
  %128 = load i16, ptr addrspace(1) %127, align 4, !dbg !47
  %129 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %128) #4
  %130 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 6, !dbg !47
  %131 = load i16, ptr addrspace(1) %130, align 2, !dbg !47
  %132 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %131) #4
  %133 = getelementptr bfloat, ptr addrspace(1) %0, i64 %19, !dbg !48
  %134 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 6, !dbg !49
  %135 = load i16, ptr addrspace(1) %134, align 2, !dbg !49
  %136 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %135) #4
  %137 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 4, !dbg !49
  %138 = load i16, ptr addrspace(1) %137, align 4, !dbg !49
  %139 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %138) #4
  %140 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 2, !dbg !49
  %141 = load i16, ptr addrspace(1) %140, align 2, !dbg !49
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #4
  %143 = load i16, ptr addrspace(1) %133, align 8, !dbg !49
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #4
  %145 = getelementptr bfloat, ptr addrspace(1) %1, i64 %19, !dbg !50
  %146 = load i16, ptr addrspace(1) %145, align 8, !dbg !51
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #4
  %148 = fadd float %144, %147, !dbg !52
  %149 = fmul float %119, %148, !dbg !53
  %150 = fmul float %123, %149, !dbg !54
  %151 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %150) #4
  %152 = insertelement <2 x i16> poison, i16 %151, i64 0, !dbg !55
  %153 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 2, !dbg !51
  %154 = load i16, ptr addrspace(1) %153, align 2, !dbg !51
  %155 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %154) #4
  %156 = fadd float %142, %155, !dbg !52
  %157 = fmul float %119, %156, !dbg !53
  %158 = fmul float %126, %157, !dbg !54
  %159 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %158) #4
  %160 = insertelement <2 x i16> %152, i16 %159, i64 1, !dbg !55
  %161 = bitcast <2 x i16> %160 to i32, !dbg !55
  %162 = insertelement <2 x i32> poison, i32 %161, i64 0, !dbg !55
  %163 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 4, !dbg !51
  %164 = load i16, ptr addrspace(1) %163, align 4, !dbg !51
  %165 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %164) #4
  %166 = fadd float %139, %165, !dbg !52
  %167 = fmul float %119, %166, !dbg !53
  %168 = fmul float %129, %167, !dbg !54
  %169 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %168) #4
  %170 = insertelement <2 x i16> poison, i16 %169, i64 0, !dbg !55
  %171 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 6, !dbg !51
  %172 = load i16, ptr addrspace(1) %171, align 2, !dbg !51
  %173 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %172) #4
  %174 = fadd float %136, %173, !dbg !52
  %175 = fmul float %119, %174, !dbg !53
  %176 = fmul float %132, %175, !dbg !54
  %177 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %176) #4
  %178 = insertelement <2 x i16> %170, i16 %177, i64 1, !dbg !55
  %179 = bitcast <2 x i16> %178 to i32, !dbg !55
  %180 = insertelement <2 x i32> %162, i32 %179, i64 1, !dbg !55
  %181 = getelementptr bfloat, ptr addrspace(1) %4, i64 %19, !dbg !56
  store <2 x i32> %180, ptr addrspace(1) %181, align 8, !dbg !55
  %182 = getelementptr bfloat, ptr addrspace(1) %2, i64 %120, !dbg !46
  %183 = getelementptr i8, ptr addrspace(1) %182, i64 4096, !dbg !46
  %184 = load i16, ptr addrspace(1) %183, align 8, !dbg !47
  %185 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %184) #4
  %186 = getelementptr i8, ptr addrspace(1) %182, i64 4098, !dbg !47
  %187 = load i16, ptr addrspace(1) %186, align 2, !dbg !47
  %188 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %187) #4
  %189 = getelementptr i8, ptr addrspace(1) %182, i64 4100, !dbg !47
  %190 = load i16, ptr addrspace(1) %189, align 4, !dbg !47
  %191 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %190) #4
  %192 = getelementptr i8, ptr addrspace(1) %182, i64 4102, !dbg !47
  %193 = load i16, ptr addrspace(1) %192, align 2, !dbg !47
  %194 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %193) #4
  %195 = getelementptr bfloat, ptr addrspace(1) %0, i64 %52, !dbg !48
  %196 = getelementptr inbounds nuw i8, ptr addrspace(1) %195, i64 6, !dbg !49
  %197 = load i16, ptr addrspace(1) %196, align 2, !dbg !49
  %198 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %197) #4
  %199 = getelementptr inbounds nuw i8, ptr addrspace(1) %195, i64 4, !dbg !49
  %200 = load i16, ptr addrspace(1) %199, align 4, !dbg !49
  %201 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %200) #4
  %202 = getelementptr inbounds nuw i8, ptr addrspace(1) %195, i64 2, !dbg !49
  %203 = load i16, ptr addrspace(1) %202, align 2, !dbg !49
  %204 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %203) #4
  %205 = load i16, ptr addrspace(1) %195, align 8, !dbg !49
  %206 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %205) #4
  %207 = getelementptr bfloat, ptr addrspace(1) %1, i64 %52, !dbg !50
  %208 = load i16, ptr addrspace(1) %207, align 8, !dbg !51
  %209 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %208) #4
  %210 = fadd float %206, %209, !dbg !52
  %211 = fmul float %119, %210, !dbg !53
  %212 = fmul float %185, %211, !dbg !54
  %213 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %212) #4
  %214 = insertelement <2 x i16> poison, i16 %213, i64 0, !dbg !55
  %215 = getelementptr inbounds nuw i8, ptr addrspace(1) %207, i64 2, !dbg !51
  %216 = load i16, ptr addrspace(1) %215, align 2, !dbg !51
  %217 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %216) #4
  %218 = fadd float %204, %217, !dbg !52
  %219 = fmul float %119, %218, !dbg !53
  %220 = fmul float %188, %219, !dbg !54
  %221 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %220) #4
  %222 = insertelement <2 x i16> %214, i16 %221, i64 1, !dbg !55
  %223 = bitcast <2 x i16> %222 to i32, !dbg !55
  %224 = insertelement <2 x i32> poison, i32 %223, i64 0, !dbg !55
  %225 = getelementptr inbounds nuw i8, ptr addrspace(1) %207, i64 4, !dbg !51
  %226 = load i16, ptr addrspace(1) %225, align 4, !dbg !51
  %227 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %226) #4
  %228 = fadd float %201, %227, !dbg !52
  %229 = fmul float %119, %228, !dbg !53
  %230 = fmul float %191, %229, !dbg !54
  %231 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %230) #4
  %232 = insertelement <2 x i16> poison, i16 %231, i64 0, !dbg !55
  %233 = getelementptr inbounds nuw i8, ptr addrspace(1) %207, i64 6, !dbg !51
  %234 = load i16, ptr addrspace(1) %233, align 2, !dbg !51
  %235 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %234) #4
  %236 = fadd float %198, %235, !dbg !52
  %237 = fmul float %119, %236, !dbg !53
  %238 = fmul float %194, %237, !dbg !54
  %239 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %238) #4
  %240 = insertelement <2 x i16> %232, i16 %239, i64 1, !dbg !55
  %241 = bitcast <2 x i16> %240 to i32, !dbg !55
  %242 = insertelement <2 x i32> %224, i32 %241, i64 1, !dbg !55
  %243 = getelementptr bfloat, ptr addrspace(1) %4, i64 %52, !dbg !56
  store <2 x i32> %242, ptr addrspace(1) %243, align 8, !dbg !55
  br label %.split25.us, !dbg !57

.split25.us:                                      ; preds = %114, %.split.us.preheader
  ret void, !dbg !57
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cp7scfr25g2jfegnzk44j7hwvjrho5tr26malxtsdft2vgurk7dg.py", directory: "/tmp/torchinductor_jovyan/p7")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 46, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 51, scope: !18)
!27 = !DILocation(line: 35, column: 34, scope: !18)
!28 = !DILocation(line: 35, column: 112, scope: !18)
!29 = !DILocation(line: 36, column: 51, scope: !18)
!30 = !DILocation(line: 36, column: 34, scope: !18)
!31 = !DILocation(line: 36, column: 112, scope: !18)
!32 = !DILocation(line: 37, column: 22, scope: !18)
!33 = !DILocation(line: 39, column: 22, scope: !18)
!34 = !DILocation(line: 35, column: 41, scope: !18)
!35 = !DILocation(line: 41, column: 23, scope: !18)
!36 = !DILocation(line: 260, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !18, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!39 = !DILocation(line: 43, column: 25, scope: !18)
!40 = !DILocation(line: 290, column: 36, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 57, column: 24, scope: !18)
!42 = !DILocation(line: 58, column: 25, scope: !18)
!43 = !DILocation(line: 59, column: 24, scope: !18)
!44 = !DILocation(line: 60, column: 32, scope: !18)
!45 = !DILocation(line: 45, column: 40, scope: !18)
!46 = !DILocation(line: 51, column: 34, scope: !18)
!47 = !DILocation(line: 51, column: 94, scope: !18)
!48 = !DILocation(line: 52, column: 34, scope: !18)
!49 = !DILocation(line: 52, column: 113, scope: !18)
!50 = !DILocation(line: 53, column: 35, scope: !18)
!51 = !DILocation(line: 53, column: 114, scope: !18)
!52 = !DILocation(line: 54, column: 23, scope: !18)
!53 = !DILocation(line: 61, column: 24, scope: !18)
!54 = !DILocation(line: 63, column: 23, scope: !18)
!55 = !DILocation(line: 64, column: 53, scope: !18)
!56 = !DILocation(line: 64, column: 29, scope: !18)
!57 = !DILocation(line: 45, column: 4, scope: !18)
