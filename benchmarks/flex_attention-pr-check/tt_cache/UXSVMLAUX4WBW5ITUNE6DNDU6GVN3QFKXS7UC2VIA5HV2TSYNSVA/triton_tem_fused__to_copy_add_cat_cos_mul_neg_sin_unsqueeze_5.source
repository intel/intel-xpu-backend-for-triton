#loc = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0)
#loc110 = loc(unknown)
#loc183 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":31:0)
#loc193 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":66:0)
#loc197 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0)
#loc207 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0)
#loc250 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":412:0)
#loc254 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":408:0)
#loc258 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":174:0)
#loc262 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":166:0)
#loc266 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":284:0)
#loc270 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0)
#loc276 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":449:0)
module {
  tt.func public @triton_tem_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_5(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg5: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg6: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg7: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg8: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg9: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg10: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg12: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg13: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg14: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0), %arg15: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":19:0)) attributes {noinline = false} {
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c128_i32_0 = arith.constant 128 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc2)
    %c1024_i32_1 = arith.constant 1024 : i32 loc(#loc2)
    %0 = arith.muli %c1024_i32_1, %arg12 : i32 loc(#loc2)
    %c1024_i32_2 = arith.constant 1024 : i32 loc(#loc3)
    %c1024_i32_3 = arith.constant 1024 : i32 loc(#loc3)
    %1 = arith.addi %c1024_i32_3, %0 : i32 loc(#loc3)
    %c128_i32_4 = arith.constant 128 : i32 loc(#loc4)
    %c128_i32_5 = arith.constant 128 : i32 loc(#loc4)
    %2 = arith.muli %c128_i32_5, %arg12 : i32 loc(#loc4)
    %c128_i32_6 = arith.constant 128 : i32 loc(#loc5)
    %c128_i32_7 = arith.constant 128 : i32 loc(#loc5)
    %3 = arith.addi %c128_i32_7, %2 : i32 loc(#loc5)
    %c128_i32_8 = arith.constant 128 : i32 loc(#loc6)
    %c1_i32_9 = arith.constant 1 : i32 loc(#loc6)
    %c1024_i32_10 = arith.constant 1024 : i32 loc(#loc7)
    %c1024_i32_11 = arith.constant 1024 : i32 loc(#loc7)
    %4 = arith.muli %c1024_i32_11, %arg13 : i32 loc(#loc7)
    %c1024_i32_12 = arith.constant 1024 : i32 loc(#loc8)
    %c1024_i32_13 = arith.constant 1024 : i32 loc(#loc8)
    %5 = arith.addi %c1024_i32_13, %4 : i32 loc(#loc8)
    %c128_i32_14 = arith.constant 128 : i32 loc(#loc9)
    %c128_i32_15 = arith.constant 128 : i32 loc(#loc9)
    %6 = arith.muli %c128_i32_15, %arg13 : i32 loc(#loc9)
    %c128_i32_16 = arith.constant 128 : i32 loc(#loc10)
    %c128_i32_17 = arith.constant 128 : i32 loc(#loc10)
    %7 = arith.addi %c128_i32_17, %6 : i32 loc(#loc10)
    %c128_i32_18 = arith.constant 128 : i32 loc(#loc11)
    %c1_i32_19 = arith.constant 1 : i32 loc(#loc11)
    %c448_i32 = arith.constant 448 : i32 loc(#loc12)
    %c32_i32 = arith.constant 32 : i32 loc(#loc12)
    %c1_i32_20 = arith.constant 1 : i32 loc(#loc12)
    %c1_i32_21 = arith.constant 1 : i32 loc(#loc12)
    %c448_i32_22 = arith.constant 448 : i32 loc(#loc13)
    %c32_i32_23 = arith.constant 32 : i32 loc(#loc13)
    %c1_i32_24 = arith.constant 1 : i32 loc(#loc13)
    %c1_i32_25 = arith.constant 1 : i32 loc(#loc13)
    %c1_i32_26 = arith.constant 1 : i32 loc(#loc14)
    %c1_i32_27 = arith.constant 1 : i32 loc(#loc15)
    %c8_i32 = arith.constant 8 : i32 loc(#loc16)
    %c4_i32 = arith.constant 4 : i32 loc(#loc17)
    %c4_i32_28 = arith.constant 4 : i32 loc(#loc17)
    %8 = arith.muli %c8_i32, %c4_i32_28 : i32 loc(#loc17)
    %c1_i32_29 = arith.constant 1 : i32 loc(#loc18)
    %c1_i32_30 = arith.constant 1 : i32 loc(#loc19)
    %c1_i32_31 = arith.constant 1 : i32 loc(#loc19)
    %9 = arith.addi %c1_i32_31, %arg12 : i32 loc(#loc19)
    %10 = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_14_"(%9) : (i32) -> i32 loc(#loc20)
    %11 = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%10) : (i32) -> i32 loc(#loc21)
    %c64_i32 = arith.constant 64 : i32 loc(#loc22)
    %c64_i32_32 = arith.constant 64 : i32 loc(#loc22)
    %12 = arith.muli %11, %c64_i32_32 : i32 loc(#loc22)
    %c64_i32_33 = arith.constant 64 : i32 loc(#loc23)
    %c64_i32_34 = arith.constant 64 : i32 loc(#loc23)
    %13 = arith.divsi %12, %c64_i32_34 : i32 loc(#loc23)
    %14 = tt.get_program_id x : i32 loc(#loc24)
    %15 = arith.divsi %14, %c8_i32 : i32 loc(#loc25)
    %16 = arith.remsi %15, %c1_i32_27 : i32 loc(#loc26)
    %17 = tt.get_program_id x : i32 loc(#loc27)
    %18 = arith.remsi %17, %c8_i32 : i32 loc(#loc28)
    %19 = tt.get_program_id y : i32 loc(#loc29)
    %20 = arith.muli %15, %c4096_i32 : i32 loc(#loc30)
    %21 = arith.muli %18, %c512_i32 : i32 loc(#loc31)
    %22 = arith.addi %20, %21 : i32 loc(#loc32)
    %23 = arith.muli %16, %1 : i32 loc(#loc33)
    %24 = arith.muli %18, %3 : i32 loc(#loc34)
    %25 = arith.addi %23, %24 : i32 loc(#loc35)
    %26 = arith.muli %16, %5 : i32 loc(#loc36)
    %27 = arith.muli %18, %7 : i32 loc(#loc37)
    %28 = arith.addi %26, %27 : i32 loc(#loc38)
    %c1_i32_35 = arith.constant 1 : i32 loc(#loc39)
    %c1_i32_36 = arith.constant 1 : i32 loc(#loc40)
    %29 = arith.remsi %15, %c1_i32_35 : i32 loc(#loc41)
    %30 = arith.remsi %18, %c1_i32_36 : i32 loc(#loc42)
    %31 = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_128_"(%9) : (i32) -> i32 loc(#loc43)
    %32 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_8__(1,)cconstexpr_fp32_"() : () -> tensor<8xf32> loc(#loc44)
    %cst = arith.constant 0x7F800000 : f32 loc(#loc45)
    %cst_37 = arith.constant 0x7F800000 : f32 loc(#loc45)
    %cst_38 = arith.constant dense<0x7F800000> : tensor<8xf32> loc(#loc45)
    %33 = arith.subf %32, %cst_38 : tensor<8xf32> loc(#loc45)
    %34 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_8__(1,)cconstexpr_fp32_"() : () -> tensor<8xf32> loc(#loc46)
    %35 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_8__(0, 1)cconstexpr_128__(1,)cconstexpr_fp32_"() : () -> tensor<8x128xf32> loc(#loc47)
    %true = arith.constant true loc(#loc48)
    tt.assert %true, "" : i1 loc(#loc48)
    %36 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc49)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc50)
    %38 = tt.broadcast %37 : tensor<4x1xi32> -> tensor<4x2xi32> loc(#loc51)
    %39 = tt.call @"triton.language.standard.ravel__i32S4_2S__(1,)cconstexpr_False_"(%38) : (tensor<4x2xi32>) -> tensor<8xi32> loc(#loc52)
    %c4_i32_39 = arith.constant 4 : i32 loc(#loc53)
    %c4_i32_40 = arith.constant 4 : i32 loc(#loc53)
    %40 = arith.muli %18, %c4_i32_40 : i32 loc(#loc53)
    %41 = tt.splat %40 : i32 -> tensor<8xi32> loc(#loc54)
    %42 = arith.addi %39, %41 : tensor<8xi32> loc(#loc54)
    %43 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc55)
    %44 = tt.expand_dims %43 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc56)
    %45 = tt.broadcast %44 : tensor<1x2xi32> -> tensor<4x2xi32> loc(#loc57)
    %46 = tt.call @"triton.language.standard.ravel__i32S4_2S__(1,)cconstexpr_False_"(%45) : (tensor<4x2xi32>) -> tensor<8xi32> loc(#loc58)
    %47 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc59)
    %48 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc60)
    %c1_i32_41 = arith.constant 1 : i32 loc(#loc61)
    %c1_i32_42 = arith.constant 1 : i32 loc(#loc61)
    %c1_i32_43 = arith.constant 1 : i32 loc(#loc61)
    %49 = arith.muli %29, %c1_i32_41 : i32 loc(#loc62)
    %50 = arith.muli %30, %c1_i32_42 : i32 loc(#loc63)
    %51 = arith.addi %49, %50 : i32 loc(#loc64)
    %c1_i32_44 = arith.constant 1 : i32 loc(#loc65)
    %52 = arith.muli %29, %arg14 : i32 loc(#loc66)
    %53 = arith.muli %30, %arg14 : i32 loc(#loc67)
    %54 = arith.addi %52, %53 : i32 loc(#loc68)
    %55 = arith.muli %19, %13 : i32 loc(#loc69)
    %56 = arith.addi %55, %13 : i32 loc(#loc70)
    %57 = tt.expand_dims %36 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc71)
    %58 = tt.expand_dims %57 {axis = 2 : i32} : tensor<4x1xi32> -> tensor<4x1x1xi32> loc(#loc71)
    %cst_45 = arith.constant dense<128> : tensor<4x1x1xi32> loc(#loc72)
    %59 = arith.muli %cst_45, %58 : tensor<4x1x1xi32> loc(#loc72)
    %60 = tt.expand_dims %43 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc73)
    %61 = tt.expand_dims %60 {axis = 2 : i32} : tensor<1x2xi32> -> tensor<1x2x1xi32> loc(#loc73)
    %cst_46 = arith.constant dense<128> : tensor<1x2x1xi32> loc(#loc74)
    %62 = arith.muli %cst_46, %61 : tensor<1x2x1xi32> loc(#loc74)
    %63 = tt.broadcast %59 : tensor<4x1x1xi32> -> tensor<4x2x1xi32> loc(#loc75)
    %64 = tt.broadcast %62 : tensor<1x2x1xi32> -> tensor<4x2x1xi32> loc(#loc75)
    %65 = arith.addi %63, %64 : tensor<4x2x1xi32> loc(#loc75)
    %66 = tt.expand_dims %47 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc76)
    %67 = tt.expand_dims %66 {axis = 1 : i32} : tensor<1x128xi32> -> tensor<1x1x128xi32> loc(#loc76)
    %cst_47 = arith.constant dense<1> : tensor<1x1x128xi32> loc(#loc77)
    %68 = arith.muli %cst_47, %67 : tensor<1x1x128xi32> loc(#loc77)
    %69 = tt.broadcast %65 : tensor<4x2x1xi32> -> tensor<4x2x128xi32> loc(#loc78)
    %70 = tt.broadcast %68 : tensor<1x1x128xi32> -> tensor<4x2x128xi32> loc(#loc78)
    %71 = arith.addi %69, %70 : tensor<4x2x128xi32> loc(#loc78)
    %72 = tt.expand_dims %43 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc79)
    %73 = tt.expand_dims %72 {axis = 2 : i32} : tensor<1x2xi32> -> tensor<1x2x1xi32> loc(#loc79)
    %cst_48 = arith.constant dense<1> : tensor<1x2x1xi32> loc(#loc80)
    %74 = arith.cmpi slt, %73, %cst_48 : tensor<1x2x1xi32> loc(#loc80)
    %75 = tt.addptr %arg0, %22 : !tt.ptr<bf16>, i32 loc(#loc81)
    %76 = tt.splat %75 : !tt.ptr<bf16> -> tensor<4x2x128x!tt.ptr<bf16>> loc(#loc82)
    %77 = tt.addptr %76, %71 : tensor<4x2x128x!tt.ptr<bf16>>, tensor<4x2x128xi32> loc(#loc82)
    %78 = tt.broadcast %74 : tensor<1x2x1xi1> -> tensor<4x2x128xi1> loc(#loc83)
    %79 = tt.load %77, %78 : tensor<4x2x128x!tt.ptr<bf16>> loc(#loc83)
    %80 = tt.reshape %79 : tensor<4x2x128xbf16> -> tensor<8x128xbf16> loc(#loc84)
    %81 = tt.addptr %arg6, %54 : !tt.ptr<i32>, i32 loc(#loc85)
    %82 = tt.addptr %arg5, %51 : !tt.ptr<i32>, i32 loc(#loc86)
    %83 = tt.load %82 : !tt.ptr<i32> loc(#loc87)
    %c2_i32 = arith.constant 2 : i32 loc(#loc88)
    %c2_i32_49 = arith.constant 2 : i32 loc(#loc88)
    %84 = arith.divsi %55, %c2_i32_49 : i32 loc(#loc88)
    %c2_i32_50 = arith.constant 2 : i32 loc(#loc89)
    %c2_i32_51 = arith.constant 2 : i32 loc(#loc89)
    %85 = arith.remsi %55, %c2_i32_51 : i32 loc(#loc89)
    %86 = tt.addptr %81, %84 : !tt.ptr<i32>, i32 loc(#loc90)
    %87 = tt.load %86 : !tt.ptr<i32> loc(#loc91)
    %c128_i32_52 = arith.constant 128 : i32 loc(#loc92)
    %c128_i32_53 = arith.constant 128 : i32 loc(#loc92)
    %88 = arith.muli %87, %c128_i32_53 : i32 loc(#loc92)
    %c64_i32_54 = arith.constant 64 : i32 loc(#loc93)
    %c64_i32_55 = arith.constant 64 : i32 loc(#loc93)
    %89 = arith.muli %85, %c64_i32_55 : i32 loc(#loc93)
    %90 = arith.addi %88, %89 : i32 loc(#loc94)
    %c2_i32_56 = arith.constant 2 : i32 loc(#loc95)
    %c2_i32_57 = arith.constant 2 : i32 loc(#loc95)
    %91 = arith.muli %83, %c2_i32_57 : i32 loc(#loc95)
    %92 = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%9) : (i32) -> i32 loc(#loc96)
    %c1_i32_58 = arith.constant 1 : i32 loc(#loc97)
    %93 = arith.maxsi %92, %c1_i32_58 : i32 loc(#loc97)
    %94 = arith.minsi %91, %93 : i32 loc(#loc98)
    %95 = tt.addptr %arg1, %25 : !tt.ptr<bf16>, i32 loc(#loc99)
    %c128_i64 = arith.constant 128 : i64 loc(#loc100)
    %96 = arith.extsi %9 : i32 to i64 loc(#loc100)
    %97 = arith.extsi %c1_i32_9 : i32 to i64 loc(#loc100)
    %98 = arith.extsi %c128_i32_8 : i32 to i64 loc(#loc100)
    %c0_i32 = arith.constant 0 : i32 loc(#loc100)
    %99 = tt.make_tensor_ptr %95, [%c128_i64, %96], [%97, %98], [%c0_i32, %90] {order = array<i32: 0, 1>} : <tensor<128x64xbf16>> loc(#loc100)
    %100 = tt.addptr %arg2, %28 : !tt.ptr<bf16>, i32 loc(#loc101)
    %101 = arith.extsi %9 : i32 to i64 loc(#loc102)
    %c128_i64_59 = arith.constant 128 : i64 loc(#loc102)
    %102 = arith.extsi %c128_i32_18 : i32 to i64 loc(#loc102)
    %103 = arith.extsi %c1_i32_19 : i32 to i64 loc(#loc102)
    %c0_i32_60 = arith.constant 0 : i32 loc(#loc102)
    %104 = tt.make_tensor_ptr %100, [%101, %c128_i64_59], [%102, %103], [%90, %c0_i32_60] {order = array<i32: 1, 0>} : <tensor<64x128xbf16>> loc(#loc102)
    %105 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc103)
    %106 = tt.splat %90 : i32 -> tensor<64xi32> loc(#loc104)
    %107 = arith.addi %105, %106 : tensor<64xi32> loc(#loc104)
    %108 = tt.expand_dims %42 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc105)
    %109 = tt.expand_dims %46 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc106)
    %110 = tt.expand_dims %107 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc107)
    %111 = arith.cmpi sle, %56, %94 : i32 loc(#loc108)
    %112 = scf.if %111 -> (i32) {
      scf.yield %56 : i32 loc(#loc110)
    } else {
      scf.yield %94 : i32 loc(#loc110)
    } loc(#loc109)
    %113:3 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_inner__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_Pi32_i32_i32_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(35,)cconstexpr_bf16__(36,)cconstexpr_False_"(%arg0, %arg1, %arg2, %arg3, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9, %arg10, %arg11, %arg12, %arg13, %arg14, %arg15, %80, %99, %104, %c1_i32_29, %9, %35, %34, %33, %15, %108, %109, %110, %81, %83, %55, %112) : (!tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32>, !tt.ptr<f32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i64>, !tt.ptr<i1>, !tt.ptr<f32>, i32, i32, i32, i32, tensor<8x128xbf16>, !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, i32, i32, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, i32, tensor<8x1xi32>, tensor<8x1xi32>, tensor<1x64xi32>, !tt.ptr<i32>, i32, i32, i32) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc111)
    %114 = tt.addptr %arg8, %54 : !tt.ptr<i32>, i32 loc(#loc112)
    %115 = tt.addptr %arg7, %51 : !tt.ptr<i32>, i32 loc(#loc113)
    %116 = tt.load %115 : !tt.ptr<i32> loc(#loc114)
    %c14_i32 = arith.constant 14 : i32 loc(#loc115)
    %c14_i32_61 = arith.constant 14 : i32 loc(#loc115)
    %117 = arith.subi %c14_i32_61, %19 : i32 loc(#loc115)
    %c1_i32_62 = arith.constant 1 : i32 loc(#loc116)
    %c1_i32_63 = arith.constant 1 : i32 loc(#loc116)
    %118 = arith.subi %117, %c1_i32_63 : i32 loc(#loc116)
    %119 = arith.muli %118, %13 : i32 loc(#loc117)
    %120 = arith.addi %119, %13 : i32 loc(#loc118)
    %c2_i32_64 = arith.constant 2 : i32 loc(#loc119)
    %c2_i32_65 = arith.constant 2 : i32 loc(#loc119)
    %121 = arith.divsi %119, %c2_i32_65 : i32 loc(#loc119)
    %c2_i32_66 = arith.constant 2 : i32 loc(#loc120)
    %c2_i32_67 = arith.constant 2 : i32 loc(#loc120)
    %122 = arith.remsi %119, %c2_i32_67 : i32 loc(#loc120)
    %123 = tt.addptr %114, %121 : !tt.ptr<i32>, i32 loc(#loc121)
    %124 = tt.load %123 : !tt.ptr<i32> loc(#loc122)
    %c128_i32_68 = arith.constant 128 : i32 loc(#loc123)
    %c128_i32_69 = arith.constant 128 : i32 loc(#loc123)
    %125 = arith.muli %124, %c128_i32_69 : i32 loc(#loc123)
    %c64_i32_70 = arith.constant 64 : i32 loc(#loc124)
    %c64_i32_71 = arith.constant 64 : i32 loc(#loc124)
    %126 = arith.muli %122, %c64_i32_71 : i32 loc(#loc124)
    %127 = arith.addi %125, %126 : i32 loc(#loc125)
    %c2_i32_72 = arith.constant 2 : i32 loc(#loc126)
    %c2_i32_73 = arith.constant 2 : i32 loc(#loc126)
    %128 = arith.muli %116, %c2_i32_73 : i32 loc(#loc126)
    %129 = tt.call @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%9) : (i32) -> i32 loc(#loc127)
    %c1_i32_74 = arith.constant 1 : i32 loc(#loc128)
    %130 = arith.maxsi %129, %c1_i32_74 : i32 loc(#loc128)
    %131 = arith.minsi %128, %130 : i32 loc(#loc129)
    %132 = tt.addptr %arg1, %25 : !tt.ptr<bf16>, i32 loc(#loc130)
    %c128_i64_75 = arith.constant 128 : i64 loc(#loc131)
    %133 = arith.extsi %9 : i32 to i64 loc(#loc131)
    %134 = arith.extsi %c1_i32_9 : i32 to i64 loc(#loc131)
    %135 = arith.extsi %c128_i32_8 : i32 to i64 loc(#loc131)
    %c0_i32_76 = arith.constant 0 : i32 loc(#loc131)
    %136 = tt.make_tensor_ptr %132, [%c128_i64_75, %133], [%134, %135], [%c0_i32_76, %127] {order = array<i32: 0, 1>} : <tensor<128x64xbf16>> loc(#loc131)
    %137 = tt.addptr %arg2, %28 : !tt.ptr<bf16>, i32 loc(#loc132)
    %138 = arith.extsi %9 : i32 to i64 loc(#loc133)
    %c128_i64_77 = arith.constant 128 : i64 loc(#loc133)
    %139 = arith.extsi %c128_i32_18 : i32 to i64 loc(#loc133)
    %140 = arith.extsi %c1_i32_19 : i32 to i64 loc(#loc133)
    %c0_i32_78 = arith.constant 0 : i32 loc(#loc133)
    %141 = tt.make_tensor_ptr %137, [%138, %c128_i64_77], [%139, %140], [%127, %c0_i32_78] {order = array<i32: 1, 0>} : <tensor<64x128xbf16>> loc(#loc133)
    %142 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc134)
    %143 = tt.splat %127 : i32 -> tensor<64xi32> loc(#loc135)
    %144 = arith.addi %142, %143 : tensor<64xi32> loc(#loc135)
    %145 = tt.expand_dims %42 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc136)
    %146 = tt.expand_dims %46 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc137)
    %147 = tt.expand_dims %144 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc138)
    %148 = arith.cmpi sle, %120, %131 : i32 loc(#loc139)
    %149 = scf.if %148 -> (i32) {
      scf.yield %120 : i32 loc(#loc110)
    } else {
      scf.yield %131 : i32 loc(#loc110)
    } loc(#loc140)
    %150:3 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_inner__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_Pi32_i32_i32_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(35,)cconstexpr_bf16__(36,)cconstexpr_True_"(%arg0, %arg1, %arg2, %arg3, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9, %arg10, %arg11, %arg12, %arg13, %arg14, %arg15, %80, %136, %141, %c1_i32_29, %9, %113#0, %113#1, %113#2, %15, %145, %146, %147, %114, %116, %119, %149) : (!tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32>, !tt.ptr<f32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i64>, !tt.ptr<i1>, !tt.ptr<f32>, i32, i32, i32, i32, tensor<8x128xbf16>, !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, i32, i32, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, i32, tensor<8x1xi32>, tensor<8x1xi32>, tensor<1x64xi32>, !tt.ptr<i32>, i32, i32, i32) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc141)
    %151 = arith.muli %19, %c32_i32 : i32 loc(#loc142)
    %152 = arith.muli %15, %c448_i32 : i32 loc(#loc143)
    %153 = arith.addi %151, %152 : i32 loc(#loc144)
    %154 = arith.muli %19, %c32_i32_23 : i32 loc(#loc145)
    %155 = arith.muli %15, %c448_i32_22 : i32 loc(#loc146)
    %156 = arith.addi %154, %155 : i32 loc(#loc147)
    %157 = tt.addptr %arg3, %153 : !tt.ptr<f32>, i32 loc(#loc148)
    %c4_i32_79 = arith.constant 4 : i32 loc(#loc149)
    %c4_i32_80 = arith.constant 4 : i32 loc(#loc149)
    %158 = arith.muli %18, %c4_i32_80 : i32 loc(#loc149)
    %c4_i64 = arith.constant 4 : i64 loc(#loc150)
    %159 = arith.extsi %c1_i32_29 : i32 to i64 loc(#loc150)
    %160 = arith.extsi %c1_i32_20 : i32 to i64 loc(#loc150)
    %161 = arith.extsi %c1_i32_21 : i32 to i64 loc(#loc150)
    %c0_i32_81 = arith.constant 0 : i32 loc(#loc150)
    %162 = tt.make_tensor_ptr %157, [%c4_i64, %159], [%160, %161], [%158, %c0_i32_81] {order = array<i32: 1, 0>} : <tensor<4x2xf32>> loc(#loc150)
    %163 = tt.addptr %arg4, %156 : !tt.ptr<f32>, i32 loc(#loc151)
    %c4_i32_82 = arith.constant 4 : i32 loc(#loc152)
    %c4_i32_83 = arith.constant 4 : i32 loc(#loc152)
    %164 = arith.muli %18, %c4_i32_83 : i32 loc(#loc152)
    %c4_i64_84 = arith.constant 4 : i64 loc(#loc153)
    %165 = arith.extsi %c1_i32_29 : i32 to i64 loc(#loc153)
    %166 = arith.extsi %c1_i32_24 : i32 to i64 loc(#loc153)
    %167 = arith.extsi %c1_i32_25 : i32 to i64 loc(#loc153)
    %c0_i32_85 = arith.constant 0 : i32 loc(#loc153)
    %168 = tt.make_tensor_ptr %163, [%c4_i64_84, %165], [%166, %167], [%164, %c0_i32_85] {order = array<i32: 1, 0>} : <tensor<4x2xf32>> loc(#loc153)
    %169 = tt.reshape %150#2 : tensor<8xf32> -> tensor<4x2xf32> loc(#loc154)
    %170 = tt.reshape %150#1 : tensor<8xf32> -> tensor<4x2xf32> loc(#loc155)
    tt.store %162, %169 {boundaryCheck = array<i32: 1>} : !tt.ptr<tensor<4x2xf32>> loc(#loc156)
    tt.store %168, %170 {boundaryCheck = array<i32: 1>} : !tt.ptr<tensor<4x2xf32>> loc(#loc157)
    %c4_i32_86 = arith.constant 4 : i32 loc(#loc158)
    %c4_i32_87 = arith.constant 4 : i32 loc(#loc158)
    %171 = arith.muli %18, %c4_i32_87 : i32 loc(#loc158)
    %172 = tt.expand_dims %36 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc159)
    %173 = tt.expand_dims %172 {axis = 2 : i32} : tensor<4x1xi32> -> tensor<4x1x1xi32> loc(#loc159)
    %174 = tt.splat %171 : i32 -> tensor<4x1x1xi32> loc(#loc160)
    %175 = arith.addi %174, %173 : tensor<4x1x1xi32> loc(#loc160)
    %176 = tt.expand_dims %43 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc161)
    %177 = tt.expand_dims %176 {axis = 2 : i32} : tensor<1x2xi32> -> tensor<1x2x1xi32> loc(#loc161)
    %178 = tt.expand_dims %48 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc162)
    %179 = tt.expand_dims %178 {axis = 1 : i32} : tensor<1x128xi32> -> tensor<1x1x128xi32> loc(#loc162)
    %cst_88 = arith.constant dense<1> : tensor<1x2x1xi32> loc(#loc163)
    %180 = arith.cmpi slt, %177, %cst_88 : tensor<1x2x1xi32> loc(#loc163)
    %c128_i32_89 = arith.constant 128 : i32 loc(#loc164)
    %cst_90 = arith.constant dense<128> : tensor<1x1x128xi32> loc(#loc164)
    %181 = arith.cmpi slt, %179, %cst_90 : tensor<1x1x128xi32> loc(#loc164)
    %182 = tt.broadcast %180 : tensor<1x2x1xi1> -> tensor<1x2x128xi1> loc(#loc165)
    %183 = tt.broadcast %181 : tensor<1x1x128xi1> -> tensor<1x2x128xi1> loc(#loc165)
    %184 = arith.andi %182, %183 : tensor<1x2x128xi1> loc(#loc165)
    %185 = tt.reshape %150#0 : tensor<8x128xf32> -> tensor<4x2x128xf32> loc(#loc166)
    %c128_i32_91 = arith.constant 128 : i32 loc(#loc167)
    %c128_i32_92 = arith.constant 128 : i32 loc(#loc167)
    %cst_93 = arith.constant dense<128> : tensor<4x1x1xi32> loc(#loc167)
    %186 = arith.muli %cst_93, %175 : tensor<4x1x1xi32> loc(#loc167)
    %187 = tt.broadcast %179 : tensor<1x1x128xi32> -> tensor<4x1x128xi32> loc(#loc168)
    %188 = tt.broadcast %186 : tensor<4x1x1xi32> -> tensor<4x1x128xi32> loc(#loc168)
    %189 = arith.addi %187, %188 : tensor<4x1x128xi32> loc(#loc168)
    %c128_i32_94 = arith.constant 128 : i32 loc(#loc169)
    %c128_i32_95 = arith.constant 128 : i32 loc(#loc169)
    %cst_96 = arith.constant dense<128> : tensor<1x2x1xi32> loc(#loc169)
    %190 = arith.muli %cst_96, %177 : tensor<1x2x1xi32> loc(#loc169)
    %191 = tt.broadcast %189 : tensor<4x1x128xi32> -> tensor<4x2x128xi32> loc(#loc170)
    %192 = tt.broadcast %190 : tensor<1x2x1xi32> -> tensor<4x2x128xi32> loc(#loc170)
    %193 = arith.addi %191, %192 : tensor<4x2x128xi32> loc(#loc170)
    %c4096_i32_97 = arith.constant 4096 : i32 loc(#loc171)
    %c4096_i32_98 = arith.constant 4096 : i32 loc(#loc171)
    %194 = arith.muli %c4096_i32_98, %19 : i32 loc(#loc171)
    %195 = tt.splat %194 : i32 -> tensor<4x2x128xi32> loc(#loc172)
    %196 = arith.addi %193, %195 : tensor<4x2x128xi32> loc(#loc172)
    %c57344_i32 = arith.constant 57344 : i32 loc(#loc173)
    %c57344_i32_99 = arith.constant 57344 : i32 loc(#loc173)
    %197 = arith.muli %c57344_i32_99, %15 : i32 loc(#loc173)
    %198 = tt.splat %197 : i32 -> tensor<4x2x128xi32> loc(#loc174)
    %199 = arith.addi %196, %198 : tensor<4x2x128xi32> loc(#loc174)
    %c128_i32_100 = arith.constant 128 : i32 loc(#loc175)
    %c128_i32_101 = arith.constant 128 : i32 loc(#loc175)
    %cst_102 = arith.constant dense<128> : tensor<4x1x1xi32> loc(#loc175)
    %200 = arith.muli %cst_102, %175 : tensor<4x1x1xi32> loc(#loc175)
    %201 = tt.broadcast %179 : tensor<1x1x128xi32> -> tensor<4x1x128xi32> loc(#loc176)
    %202 = tt.broadcast %200 : tensor<4x1x1xi32> -> tensor<4x1x128xi32> loc(#loc176)
    %203 = arith.addi %201, %202 : tensor<4x1x128xi32> loc(#loc176)
    %c4096_i32_103 = arith.constant 4096 : i32 loc(#loc177)
    %c4096_i32_104 = arith.constant 4096 : i32 loc(#loc177)
    %204 = arith.muli %c4096_i32_104, %19 : i32 loc(#loc177)
    %205 = tt.splat %204 : i32 -> tensor<4x1x128xi32> loc(#loc178)
    %206 = arith.addi %203, %205 : tensor<4x1x128xi32> loc(#loc178)
    %207 = tt.broadcast %206 : tensor<4x1x128xi32> -> tensor<4x2x128xi32> loc(#loc179)
    %208 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<4x2x128x!tt.ptr<f32>> loc(#loc180)
    %209 = tt.addptr %208, %207 : tensor<4x2x128x!tt.ptr<f32>>, tensor<4x2x128xi32> loc(#loc180)
    %210 = tt.broadcast %184 : tensor<1x2x128xi1> -> tensor<4x2x128xi1> loc(#loc181)
    tt.store %209, %185, %210 : tensor<4x2x128x!tt.ptr<f32>> loc(#loc181)
    tt.return loc(#loc182)
  } loc(#loc)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_14_"(%arg0: i32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":31:0)) -> i32 attributes {noinline = false} {
    %c14_i32 = arith.constant 14 : i32 loc(#loc184)
    %c14_i32_0 = arith.constant 14 : i32 loc(#loc184)
    %0 = arith.addi %arg0, %c14_i32_0 : i32 loc(#loc184)
    %c1_i32 = arith.constant 1 : i32 loc(#loc185)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc185)
    %1 = arith.subi %0, %c1_i32_1 : i32 loc(#loc185)
    %c14_i32_2 = arith.constant 14 : i32 loc(#loc186)
    %c14_i32_3 = arith.constant 14 : i32 loc(#loc186)
    %2 = arith.divsi %1, %c14_i32_3 : i32 loc(#loc186)
    tt.return %2 : i32 loc(#loc187)
  ^bb1:  // no predecessors
    %3 = ub.poison : i32 loc(#loc188)
    tt.return %3 : i32 loc(#loc188)
  } loc(#loc183)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%arg0: i32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":31:0)) -> i32 attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc184)
    %c64_i32_0 = arith.constant 64 : i32 loc(#loc184)
    %0 = arith.addi %arg0, %c64_i32_0 : i32 loc(#loc184)
    %c1_i32 = arith.constant 1 : i32 loc(#loc185)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc185)
    %1 = arith.subi %0, %c1_i32_1 : i32 loc(#loc185)
    %c64_i32_2 = arith.constant 64 : i32 loc(#loc186)
    %c64_i32_3 = arith.constant 64 : i32 loc(#loc186)
    %2 = arith.divsi %1, %c64_i32_3 : i32 loc(#loc186)
    tt.return %2 : i32 loc(#loc187)
  ^bb1:  // no predecessors
    %3 = ub.poison : i32 loc(#loc188)
    tt.return %3 : i32 loc(#loc188)
  } loc(#loc183)
  tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_128_"(%arg0: i32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":31:0)) -> i32 attributes {noinline = false} {
    %c128_i32 = arith.constant 128 : i32 loc(#loc184)
    %c128_i32_0 = arith.constant 128 : i32 loc(#loc184)
    %0 = arith.addi %arg0, %c128_i32_0 : i32 loc(#loc184)
    %c1_i32 = arith.constant 1 : i32 loc(#loc185)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc185)
    %1 = arith.subi %0, %c1_i32_1 : i32 loc(#loc185)
    %c128_i32_2 = arith.constant 128 : i32 loc(#loc186)
    %c128_i32_3 = arith.constant 128 : i32 loc(#loc186)
    %2 = arith.divsi %1, %c128_i32_3 : i32 loc(#loc186)
    tt.return %2 : i32 loc(#loc187)
  ^bb1:  // no predecessors
    %3 = ub.poison : i32 loc(#loc188)
    tt.return %3 : i32 loc(#loc188)
  } loc(#loc183)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_8__(1,)cconstexpr_fp32_"() -> tensor<8xf32> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc190)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8xf32> loc(#loc190)
    tt.return %cst_0 : tensor<8xf32> loc(#loc191)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<8xf32> loc(#loc192)
    tt.return %0 : tensor<8xf32> loc(#loc192)
  } loc(#loc189)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_8__(0, 1)cconstexpr_128__(1,)cconstexpr_fp32_"() -> tensor<8x128xf32> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc190)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x128xf32> loc(#loc190)
    tt.return %cst_0 : tensor<8x128xf32> loc(#loc191)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<8x128xf32> loc(#loc192)
    tt.return %0 : tensor<8x128xf32> loc(#loc192)
  } loc(#loc189)
  tt.func private @"triton.language.standard.ravel__i32S4_2S__(1,)cconstexpr_False_"(%arg0: tensor<4x2xi32> loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":66:0)) -> tensor<8xi32> attributes {noinline = false} {
    %0 = tt.reshape %arg0 : tensor<4x2xi32> -> tensor<8xi32> loc(#loc194)
    tt.return %0 : tensor<8xi32> loc(#loc195)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<8xi32> loc(#loc196)
    tt.return %1 : tensor<8xi32> loc(#loc196)
  } loc(#loc193)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_inner__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_Pi32_i32_i32_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(35,)cconstexpr_bf16__(36,)cconstexpr_False_"(%arg0: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg1: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg2: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg3: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg4: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg5: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg6: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg7: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg8: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg9: !tt.ptr<i64> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg10: !tt.ptr<i1> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg11: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg12: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg13: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg14: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg15: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg16: tensor<8x128xbf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg17: !tt.ptr<tensor<128x64xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg18: !tt.ptr<tensor<64x128xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg19: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg20: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg21: tensor<8x128xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg22: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg23: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg24: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg25: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg26: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg27: tensor<1x64xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg28: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg29: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg30: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg31: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0)) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc198)
    %0 = arith.bitcast %arg30 : i32 to i32 loc(#loc198)
    %1 = arith.bitcast %arg31 : i32 to i32 loc(#loc198)
    %2 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc198)
    %3 = ub.poison : i32 loc(#loc198)
    %4:6 = scf.for %arg32 = %0 to %1 step %2 iter_args(%arg33 = %arg17, %arg34 = %arg18, %arg35 = %arg21, %arg36 = %arg22, %arg37 = %arg23, %arg38 = %arg27) -> (!tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, tensor<1x64xi32>)  : i32 {
      %8:3 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_block_mn__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(32,)cconstexpr_bf16__(33,)cconstexpr_1_d_44269504__(34,)cconstexpr_False__(35,)cconstexpr_True_"(%arg0, %arg1, %arg2, %arg3, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9, %arg10, %arg11, %arg12, %arg13, %arg14, %arg15, %arg16, %arg33, %arg34, %arg19, %arg20, %arg35, %arg36, %arg37, %arg24, %arg25, %arg26, %arg38, %arg32) : (!tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32>, !tt.ptr<f32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i64>, !tt.ptr<i1>, !tt.ptr<f32>, i32, i32, i32, i32, tensor<8x128xbf16>, !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, i32, i32, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, i32, tensor<8x1xi32>, tensor<8x1xi32>, tensor<1x64xi32>, i32) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc199)
      %9 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_offset_for_next_block__i32_Pi32_i32__(3,)cconstexpr_128__(4,)cconstexpr_2__(5,)cconstexpr_64__(6,)cconstexpr_False_"(%arg32, %arg28, %arg29) : (i32, !tt.ptr<i32>, i32) -> i32 loc(#loc200)
      %10 = tt.splat %9 : i32 -> tensor<1x64xi32> loc(#loc201)
      %11 = arith.addi %arg38, %10 : tensor<1x64xi32> loc(#loc201)
      %c0_i32 = arith.constant 0 : i32 loc(#loc202)
      %12 = tt.advance %arg33, [%c0_i32, %9] : <tensor<128x64xbf16>> loc(#loc202)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc203)
      %13 = tt.advance %arg34, [%9, %c0_i32_0] : <tensor<64x128xbf16>> loc(#loc203)
      scf.yield %12, %13, %8#0, %8#1, %8#2, %11 : !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, tensor<1x64xi32> loc(#loc204)
    } loc(#loc198)
    tt.return %4#2, %4#3, %4#4 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc205)
  ^bb1:  // no predecessors
    %5 = ub.poison : tensor<8x128xf32> loc(#loc206)
    %6 = ub.poison : tensor<8xf32> loc(#loc206)
    %7 = ub.poison : tensor<8xf32> loc(#loc206)
    tt.return %5, %6, %7 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc206)
  } loc(#loc197)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_block_mn__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(32,)cconstexpr_bf16__(33,)cconstexpr_1_d_44269504__(34,)cconstexpr_False__(35,)cconstexpr_True_"(%arg0: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg1: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg2: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg3: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg4: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg5: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg6: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg7: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg8: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg9: !tt.ptr<i64> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg10: !tt.ptr<i1> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg11: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg12: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg13: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg14: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg15: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg16: tensor<8x128xbf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg17: !tt.ptr<tensor<128x64xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg18: !tt.ptr<tensor<64x128xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg19: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg20: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg21: tensor<8x128xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg22: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg23: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg24: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg25: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg26: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg27: tensor<1x64xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg28: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0)) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) attributes {noinline = false} {
    %0 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S128_64S__(1,)cconstexpr_True__(2,)cconstexpr_False_"(%arg17) : (!tt.ptr<tensor<128x64xbf16>>) -> tensor<128x64xbf16> loc(#loc208)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc209)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x64xf32> loc(#loc209)
    %1 = tt.dot %arg16, %0, %cst_0 : tensor<8x128xbf16> * tensor<128x64xbf16> -> tensor<8x64xf32> loc(#loc209)
    %cst_1 = arith.constant 0.0883883461 : f32 loc(#loc210)
    %cst_2 = arith.constant 0.0883883461 : f32 loc(#loc210)
    %cst_3 = arith.constant dense<0.0883883461> : tensor<8x64xf32> loc(#loc210)
    %2 = arith.mulf %1, %cst_3 : tensor<8x64xf32> loc(#loc210)
    %3 = tt.call @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S8_1S_i32__(%arg26, %arg19) : (tensor<8x1xi32>, i32) -> tensor<8x1xi32> loc(#loc211)
    %4 = tt.call @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S1_64S_i32__(%arg27, %arg20) : (tensor<1x64xi32>, i32) -> tensor<1x64xi32> loc(#loc212)
    %5 = tt.splat %arg20 : i32 -> tensor<1x64xi32> loc(#loc213)
    %6 = arith.cmpi slt, %arg27, %5 : tensor<1x64xi32> loc(#loc213)
    %cst_4 = arith.constant 0xFF800000 : f32 loc(#loc214)
    %cst_5 = arith.constant 0xFF800000 : f32 loc(#loc214)
    %cst_6 = arith.constant dense<0xFF800000> : tensor<8x64xf32> loc(#loc214)
    %7 = tt.broadcast %6 : tensor<1x64xi1> -> tensor<8x64xi1> loc(#loc214)
    %8 = arith.select %7, %2, %cst_6 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc214)
    %true = arith.constant true loc(#loc215)
    %cst_7 = arith.constant dense<true> : tensor<1xi1> loc(#loc215)
    %9 = tt.splat %arg15 : i32 -> tensor<1x64xi32> loc(#loc216)
    %10 = arith.addi %4, %9 : tensor<1x64xi32> loc(#loc216)
    %11 = arith.extsi %10 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc217)
    %12 = arith.extsi %3 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc218)
    %c0_i32 = arith.constant 0 : i32 loc(#loc219)
    %13 = tt.addptr %arg9, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc219)
    %14 = tt.load %13 : !tt.ptr<i64> loc(#loc220)
    %15 = tt.splat %14 : i64 -> tensor<8x1xi64> loc(#loc221)
    %16 = arith.addi %12, %15 : tensor<8x1xi64> loc(#loc221)
    %17 = tt.broadcast %11 : tensor<1x64xi64> -> tensor<8x64xi64> loc(#loc222)
    %18 = tt.broadcast %16 : tensor<8x1xi64> -> tensor<8x64xi64> loc(#loc222)
    %19 = arith.cmpi sle, %17, %18 : tensor<8x64xi64> loc(#loc222)
    %20 = tt.expand_dims %cst_7 {axis = 0 : i32} : tensor<1xi1> -> tensor<1x1xi1> loc(#loc223)
    %21 = tt.broadcast %20 : tensor<1x1xi1> -> tensor<8x64xi1> loc(#loc223)
    %22 = arith.andi %21, %19 : tensor<8x64xi1> loc(#loc223)
    %23 = tt.splat %arg10 : !tt.ptr<i1> -> tensor<1x64x!tt.ptr<i1>> loc(#loc224)
    %24 = tt.addptr %23, %10 : tensor<1x64x!tt.ptr<i1>>, tensor<1x64xi32> loc(#loc224)
    %25 = tt.bitcast %24 : tensor<1x64x!tt.ptr<i1>> -> tensor<1x64x!tt.ptr<i8>> loc(#loc225)
    %26 = tt.load %25 : tensor<1x64x!tt.ptr<i8>> loc(#loc225)
    %c0_i8 = arith.constant 0 : i8 loc(#loc225)
    %cst_8 = arith.constant dense<0> : tensor<1x64xi8> loc(#loc225)
    %27 = arith.cmpi ne, %26, %cst_8 : tensor<1x64xi8> loc(#loc225)
    %28 = tt.broadcast %27 : tensor<1x64xi1> -> tensor<8x64xi1> loc(#loc226)
    %29 = arith.andi %22, %28 : tensor<8x64xi1> loc(#loc226)
    %30 = tt.splat %arg20 : i32 -> tensor<1x64xi32> loc(#loc227)
    %31 = arith.cmpi slt, %arg27, %30 : tensor<1x64xi32> loc(#loc227)
    %false = arith.constant false loc(#loc228)
    %false_9 = arith.constant false loc(#loc228)
    %cst_10 = arith.constant dense<false> : tensor<8x64xi1> loc(#loc228)
    %32 = tt.broadcast %31 : tensor<1x64xi1> -> tensor<8x64xi1> loc(#loc228)
    %33 = arith.select %32, %29, %cst_10 : tensor<8x64xi1>, tensor<8x64xi1> loc(#loc228)
    %cst_11 = arith.constant 0xFF800000 : f32 loc(#loc229)
    %cst_12 = arith.constant 0xFF800000 : f32 loc(#loc229)
    %cst_13 = arith.constant dense<0xFF800000> : tensor<8x64xf32> loc(#loc229)
    %34 = arith.select %33, %8, %cst_13 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc229)
    %cst_14 = arith.constant 1.44269502 : f32 loc(#loc230)
    %cst_15 = arith.constant 1.44269502 : f32 loc(#loc230)
    %cst_16 = arith.constant dense<1.44269502> : tensor<8x64xf32> loc(#loc230)
    %35 = arith.mulf %34, %cst_16 : tensor<8x64xf32> loc(#loc230)
    %36 = tt.call @"triton.language.standard.max__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%35) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc231)
    %37 = arith.maxnumf %arg23, %36 : tensor<8xf32> loc(#loc232)
    %cst_17 = arith.constant 0xFF800000 : f32 loc(#loc233)
    %cst_18 = arith.constant dense<0xFF800000> : tensor<8xf32> loc(#loc233)
    %38 = arith.cmpf oeq, %37, %cst_18 : tensor<8xf32> loc(#loc233)
    %c0_i32_19 = arith.constant 0 : i32 loc(#loc234)
    %cst_20 = arith.constant 0.000000e+00 : f32 loc(#loc234)
    %cst_21 = arith.constant dense<0.000000e+00> : tensor<8xf32> loc(#loc234)
    %39 = arith.select %38, %cst_21, %37 : tensor<8xi1>, tensor<8xf32> loc(#loc234)
    %40 = arith.subf %arg23, %39 : tensor<8xf32> loc(#loc235)
    %41 = math.exp2 %40 : tensor<8xf32> loc(#loc236)
    %42 = tt.expand_dims %39 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc237)
    %43 = tt.broadcast %42 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc238)
    %44 = arith.subf %35, %43 : tensor<8x64xf32> loc(#loc238)
    %45 = math.exp2 %44 : tensor<8x64xf32> loc(#loc239)
    %46 = arith.mulf %arg22, %41 : tensor<8xf32> loc(#loc240)
    %47 = tt.call @"triton.language.standard.sum__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%45) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc241)
    %48 = arith.addf %46, %47 : tensor<8xf32> loc(#loc242)
    %49 = tt.expand_dims %41 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc243)
    %50 = tt.broadcast %49 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc244)
    %51 = arith.mulf %arg21, %50 : tensor<8x128xf32> loc(#loc244)
    %52 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S64_128S__(1,)cconstexpr_False__(2,)cconstexpr_True_"(%arg18) : (!tt.ptr<tensor<64x128xbf16>>) -> tensor<64x128xbf16> loc(#loc245)
    %53 = arith.truncf %45 : tensor<8x64xf32> to tensor<8x64xbf16> loc(#loc246)
    %cst_22 = arith.constant 0.000000e+00 : f32 loc(#loc247)
    %54 = tt.dot %53, %52, %51 : tensor<8x64xbf16> * tensor<64x128xbf16> -> tensor<8x128xf32> loc(#loc247)
    tt.return %54, %48, %37 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc248)
  ^bb1:  // no predecessors
    %55 = ub.poison : tensor<8x128xf32> loc(#loc249)
    %56 = ub.poison : tensor<8xf32> loc(#loc249)
    %57 = ub.poison : tensor<8xf32> loc(#loc249)
    tt.return %55, %56, %57 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc249)
  } loc(#loc207)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S128_64S__(1,)cconstexpr_True__(2,)cconstexpr_False_"(%arg0: !tt.ptr<tensor<128x64xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":412:0)) -> tensor<128x64xbf16> attributes {noinline = false} {
    %0 = tt.load %arg0 {boundaryCheck = array<i32: 1>, padding = 1 : i32} : !tt.ptr<tensor<128x64xbf16>> loc(#loc251)
    tt.return %0 : tensor<128x64xbf16> loc(#loc252)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<128x64xbf16> loc(#loc253)
    tt.return %1 : tensor<128x64xbf16> loc(#loc253)
  } loc(#loc250)
  tt.func private @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S8_1S_i32__(%arg0: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":408:0), %arg1: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":408:0)) -> tensor<8x1xi32> attributes {noinline = false} {
    %0 = tt.splat %arg1 : i32 -> tensor<8x1xi32> loc(#loc255)
    %1 = arith.remsi %arg0, %0 : tensor<8x1xi32> loc(#loc255)
    tt.return %1 : tensor<8x1xi32> loc(#loc256)
  ^bb1:  // no predecessors
    %2 = ub.poison : tensor<8x1xi32> loc(#loc257)
    tt.return %2 : tensor<8x1xi32> loc(#loc257)
  } loc(#loc254)
  tt.func private @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S1_64S_i32__(%arg0: tensor<1x64xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":408:0), %arg1: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":408:0)) -> tensor<1x64xi32> attributes {noinline = false} {
    %0 = tt.splat %arg1 : i32 -> tensor<1x64xi32> loc(#loc255)
    %1 = arith.remsi %arg0, %0 : tensor<1x64xi32> loc(#loc255)
    tt.return %1 : tensor<1x64xi32> loc(#loc256)
  ^bb1:  // no predecessors
    %2 = ub.poison : tensor<1x64xi32> loc(#loc257)
    tt.return %2 : tensor<1x64xi32> loc(#loc257)
  } loc(#loc254)
  tt.func private @"triton.language.standard.max__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%arg0: tensor<8x64xf32> loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":174:0)) -> tensor<8xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._elementwise_max__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc259)
      tt.reduce.return %2 : f32 loc(#loc259)
    }) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc259)
    tt.return %0 : tensor<8xf32> loc(#loc260)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<8xf32> loc(#loc261)
    tt.return %1 : tensor<8xf32> loc(#loc261)
  } loc(#loc258)
  tt.func private @triton.language.standard._elementwise_max__fp32_fp32__(%arg0: f32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":166:0), %arg1: f32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":166:0)) -> f32 attributes {noinline = false} {
    %0 = arith.maxnumf %arg0, %arg1 : f32 loc(#loc263)
    tt.return %0 : f32 loc(#loc264)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc265)
    tt.return %1 : f32 loc(#loc265)
  } loc(#loc262)
  tt.func private @"triton.language.standard.sum__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<8x64xf32> loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":284:0)) -> tensor<8xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc267)
      tt.reduce.return %2 : f32 loc(#loc267)
    }) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc267)
    tt.return %0 : tensor<8xf32> loc(#loc268)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<8xf32> loc(#loc269)
    tt.return %1 : tensor<8xf32> loc(#loc269)
  } loc(#loc266)
  tt.func private @triton.language.standard._sum_combine__fp32_fp32__(%arg0: f32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0), %arg1: f32 loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":259:0)) -> f32 attributes {noinline = false} {
    %0 = arith.addf %arg0, %arg1 : f32 loc(#loc271)
    tt.return %0 : f32 loc(#loc272)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc273)
    tt.return %1 : f32 loc(#loc273)
  } loc(#loc270)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S64_128S__(1,)cconstexpr_False__(2,)cconstexpr_True_"(%arg0: !tt.ptr<tensor<64x128xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":412:0)) -> tensor<64x128xbf16> attributes {noinline = false} {
    %0 = tt.load %arg0 {boundaryCheck = array<i32: 0>, padding = 1 : i32} : !tt.ptr<tensor<64x128xbf16>> loc(#loc274)
    tt.return %0 : tensor<64x128xbf16> loc(#loc275)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<64x128xbf16> loc(#loc253)
    tt.return %1 : tensor<64x128xbf16> loc(#loc253)
  } loc(#loc250)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_offset_for_next_block__i32_Pi32_i32__(3,)cconstexpr_128__(4,)cconstexpr_2__(5,)cconstexpr_64__(6,)cconstexpr_False_"(%arg0: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":449:0), %arg1: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":449:0), %arg2: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":449:0)) -> i32 attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc277)
    %c2_i32_0 = arith.constant 2 : i32 loc(#loc277)
    %0 = arith.divsi %arg0, %c2_i32_0 : i32 loc(#loc277)
    %1 = tt.addptr %arg1, %0 : !tt.ptr<i32>, i32 loc(#loc278)
    %2 = tt.load %1 evictionPolicy = evict_last : !tt.ptr<i32> loc(#loc279)
    %c1_i32 = arith.constant 1 : i32 loc(#loc280)
    %c1_i32_1 = arith.constant 1 : i32 loc(#loc280)
    %3 = arith.addi %0, %c1_i32_1 : i32 loc(#loc280)
    %4 = arith.cmpi slt, %3, %arg2 : i32 loc(#loc281)
    %5 = tt.addptr %arg1, %0 : !tt.ptr<i32>, i32 loc(#loc282)
    %c1_i32_2 = arith.constant 1 : i32 loc(#loc283)
    %6 = tt.addptr %5, %c1_i32_2 : !tt.ptr<i32>, i32 loc(#loc283)
    %7 = tt.load %6, %4 evictionPolicy = evict_last : !tt.ptr<i32> loc(#loc284)
    %c1_i32_3 = arith.constant 1 : i32 loc(#loc285)
    %c1_i32_4 = arith.constant 1 : i32 loc(#loc285)
    %8 = arith.addi %arg0, %c1_i32_4 : i32 loc(#loc285)
    %c2_i32_5 = arith.constant 2 : i32 loc(#loc286)
    %c2_i32_6 = arith.constant 2 : i32 loc(#loc286)
    %9 = arith.remsi %8, %c2_i32_6 : i32 loc(#loc286)
    %c0_i32 = arith.constant 0 : i32 loc(#loc287)
    %10 = arith.cmpi eq, %9, %c0_i32 : i32 loc(#loc287)
    %11 = arith.subi %7, %2 : i32 loc(#loc288)
    %c128_i32 = arith.constant 128 : i32 loc(#loc289)
    %c128_i32_7 = arith.constant 128 : i32 loc(#loc289)
    %12 = arith.muli %11, %c128_i32_7 : i32 loc(#loc289)
    %c64_i32 = arith.constant 64 : i32 loc(#loc290)
    %c64_i32_8 = arith.constant 64 : i32 loc(#loc290)
    %13 = arith.subi %12, %c64_i32_8 : i32 loc(#loc290)
    %14 = arith.extui %10 : i1 to i32 loc(#loc291)
    %15 = arith.muli %13, %14 : i32 loc(#loc291)
    %c1_i32_9 = arith.constant 1 : i32 loc(#loc292)
    %c1_i32_10 = arith.constant 1 : i32 loc(#loc292)
    %16 = arith.extui %10 : i1 to i32 loc(#loc292)
    %17 = arith.subi %c1_i32_10, %16 : i32 loc(#loc292)
    %c64_i32_11 = arith.constant 64 : i32 loc(#loc293)
    %c64_i32_12 = arith.constant 64 : i32 loc(#loc293)
    %18 = arith.muli %17, %c64_i32_12 : i32 loc(#loc293)
    %19 = arith.addi %15, %18 : i32 loc(#loc294)
    tt.return %19 : i32 loc(#loc295)
  ^bb1:  // no predecessors
    %20 = ub.poison : i32 loc(#loc296)
    tt.return %20 : i32 loc(#loc296)
  } loc(#loc276)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_inner__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_Pi32_i32_i32_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(35,)cconstexpr_bf16__(36,)cconstexpr_True_"(%arg0: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg1: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg2: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg3: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg4: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg5: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg6: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg7: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg8: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg9: !tt.ptr<i64> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg10: !tt.ptr<i1> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg11: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg12: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg13: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg14: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg15: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg16: tensor<8x128xbf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg17: !tt.ptr<tensor<128x64xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg18: !tt.ptr<tensor<64x128xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg19: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg20: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg21: tensor<8x128xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg22: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg23: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg24: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg25: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg26: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg27: tensor<1x64xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg28: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg29: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg30: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0), %arg31: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":306:0)) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc198)
    %0 = arith.bitcast %arg30 : i32 to i32 loc(#loc198)
    %1 = arith.bitcast %arg31 : i32 to i32 loc(#loc198)
    %2 = arith.bitcast %c1_i32 : i32 to i32 loc(#loc198)
    %3 = ub.poison : i32 loc(#loc198)
    %4:6 = scf.for %arg32 = %0 to %1 step %2 iter_args(%arg33 = %arg17, %arg34 = %arg18, %arg35 = %arg21, %arg36 = %arg22, %arg37 = %arg23, %arg38 = %arg27) -> (!tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, tensor<1x64xi32>)  : i32 {
      %8:3 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_block_mn__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(32,)cconstexpr_bf16__(33,)cconstexpr_1_d_44269504__(34,)cconstexpr_True__(35,)cconstexpr_True_"(%arg0, %arg1, %arg2, %arg3, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9, %arg10, %arg11, %arg12, %arg13, %arg14, %arg15, %arg16, %arg33, %arg34, %arg19, %arg20, %arg35, %arg36, %arg37, %arg24, %arg25, %arg26, %arg38, %arg32) : (!tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<f32>, !tt.ptr<f32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i32>, !tt.ptr<i64>, !tt.ptr<i1>, !tt.ptr<f32>, i32, i32, i32, i32, tensor<8x128xbf16>, !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, i32, i32, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, i32, tensor<8x1xi32>, tensor<8x1xi32>, tensor<1x64xi32>, i32) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc199)
      %9 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_offset_for_next_block__i32_Pi32_i32__(3,)cconstexpr_128__(4,)cconstexpr_2__(5,)cconstexpr_64__(6,)cconstexpr_False_"(%arg32, %arg28, %arg29) : (i32, !tt.ptr<i32>, i32) -> i32 loc(#loc200)
      %10 = tt.splat %9 : i32 -> tensor<1x64xi32> loc(#loc201)
      %11 = arith.addi %arg38, %10 : tensor<1x64xi32> loc(#loc201)
      %c0_i32 = arith.constant 0 : i32 loc(#loc202)
      %12 = tt.advance %arg33, [%c0_i32, %9] : <tensor<128x64xbf16>> loc(#loc202)
      %c0_i32_0 = arith.constant 0 : i32 loc(#loc203)
      %13 = tt.advance %arg34, [%9, %c0_i32_0] : <tensor<64x128xbf16>> loc(#loc203)
      scf.yield %12, %13, %8#0, %8#1, %8#2, %11 : !tt.ptr<tensor<128x64xbf16>>, !tt.ptr<tensor<64x128xbf16>>, tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>, tensor<1x64xi32> loc(#loc204)
    } loc(#loc198)
    tt.return %4#2, %4#3, %4#4 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc205)
  ^bb1:  // no predecessors
    %5 = ub.poison : tensor<8x128xf32> loc(#loc206)
    %6 = ub.poison : tensor<8xf32> loc(#loc206)
    %7 = ub.poison : tensor<8xf32> loc(#loc206)
    tt.return %5, %6, %7 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc206)
  } loc(#loc197)
  tt.func private @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.forward_block_mn__Pbf16_Pbf16_Pbf16_Pfp32_Pfp32_Pi32_Pi32_Pi32_Pi32_Pi64_Pu1_Pfp32_i32_i32_i32_i32_bf16S8_128S_Pbf16S128_64S_Pbf16S64_128S_i32_i32_fp32S8_128S_fp32S8S_fp32S8S_i32_i32S8_1S_i32S8_1S_i32S1_64S_i32__(19,)cconstexpr_None__(20,)cconstexpr_None__(30,)cconstexpr_None__(32,)cconstexpr_bf16__(33,)cconstexpr_1_d_44269504__(34,)cconstexpr_True__(35,)cconstexpr_True_"(%arg0: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg1: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg2: !tt.ptr<bf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg3: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg4: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg5: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg6: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg7: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg8: !tt.ptr<i32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg9: !tt.ptr<i64> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg10: !tt.ptr<i1> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg11: !tt.ptr<f32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg12: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg13: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg14: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg15: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg16: tensor<8x128xbf16> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg17: !tt.ptr<tensor<128x64xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg18: !tt.ptr<tensor<64x128xbf16>> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg19: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg20: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg21: tensor<8x128xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg22: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg23: tensor<8xf32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg24: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg25: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg26: tensor<8x1xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg27: tensor<1x64xi32> loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0), %arg28: i32 loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":465:0)) -> (tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32>) attributes {noinline = false} {
    %0 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S128_64S__(1,)cconstexpr_True__(2,)cconstexpr_False_"(%arg17) : (!tt.ptr<tensor<128x64xbf16>>) -> tensor<128x64xbf16> loc(#loc208)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc209)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x64xf32> loc(#loc209)
    %1 = tt.dot %arg16, %0, %cst_0 : tensor<8x128xbf16> * tensor<128x64xbf16> -> tensor<8x64xf32> loc(#loc209)
    %cst_1 = arith.constant 0.0883883461 : f32 loc(#loc210)
    %cst_2 = arith.constant 0.0883883461 : f32 loc(#loc210)
    %cst_3 = arith.constant dense<0.0883883461> : tensor<8x64xf32> loc(#loc210)
    %2 = arith.mulf %1, %cst_3 : tensor<8x64xf32> loc(#loc210)
    %3 = tt.call @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S8_1S_i32__(%arg26, %arg19) : (tensor<8x1xi32>, i32) -> tensor<8x1xi32> loc(#loc211)
    %4 = tt.call @torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.get_bounded_indices__i32S1_64S_i32__(%arg27, %arg20) : (tensor<1x64xi32>, i32) -> tensor<1x64xi32> loc(#loc212)
    %5 = tt.splat %arg20 : i32 -> tensor<1x64xi32> loc(#loc213)
    %6 = arith.cmpi slt, %arg27, %5 : tensor<1x64xi32> loc(#loc213)
    %cst_4 = arith.constant 0xFF800000 : f32 loc(#loc214)
    %cst_5 = arith.constant 0xFF800000 : f32 loc(#loc214)
    %cst_6 = arith.constant dense<0xFF800000> : tensor<8x64xf32> loc(#loc214)
    %7 = tt.broadcast %6 : tensor<1x64xi1> -> tensor<8x64xi1> loc(#loc214)
    %8 = arith.select %7, %2, %cst_6 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc214)
    %cst_7 = arith.constant 1.44269502 : f32 loc(#loc230)
    %cst_8 = arith.constant 1.44269502 : f32 loc(#loc230)
    %cst_9 = arith.constant dense<1.44269502> : tensor<8x64xf32> loc(#loc230)
    %9 = arith.mulf %8, %cst_9 : tensor<8x64xf32> loc(#loc230)
    %10 = tt.call @"triton.language.standard.max__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cconstexpr_True__(4,)cconstexpr_False_"(%9) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc231)
    %11 = arith.maxnumf %arg23, %10 : tensor<8xf32> loc(#loc232)
    %cst_10 = arith.constant 0xFF800000 : f32 loc(#loc233)
    %cst_11 = arith.constant dense<0xFF800000> : tensor<8xf32> loc(#loc233)
    %12 = arith.cmpf oeq, %11, %cst_11 : tensor<8xf32> loc(#loc233)
    %c0_i32 = arith.constant 0 : i32 loc(#loc234)
    %cst_12 = arith.constant 0.000000e+00 : f32 loc(#loc234)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<8xf32> loc(#loc234)
    %13 = arith.select %12, %cst_13, %11 : tensor<8xi1>, tensor<8xf32> loc(#loc234)
    %14 = arith.subf %arg23, %13 : tensor<8xf32> loc(#loc235)
    %15 = math.exp2 %14 : tensor<8xf32> loc(#loc236)
    %16 = tt.expand_dims %13 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc237)
    %17 = tt.broadcast %16 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc238)
    %18 = arith.subf %9, %17 : tensor<8x64xf32> loc(#loc238)
    %19 = math.exp2 %18 : tensor<8x64xf32> loc(#loc239)
    %20 = arith.mulf %arg22, %15 : tensor<8xf32> loc(#loc240)
    %21 = tt.call @"triton.language.standard.sum__fp32S8_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%19) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc241)
    %22 = arith.addf %20, %21 : tensor<8xf32> loc(#loc242)
    %23 = tt.expand_dims %15 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc243)
    %24 = tt.broadcast %23 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc244)
    %25 = arith.mulf %arg21, %24 : tensor<8x128xf32> loc(#loc244)
    %26 = tt.call @"torch._inductor.runtime.compile_tasks.cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.load_checked_block__Pbf16S64_128S__(1,)cconstexpr_False__(2,)cconstexpr_True_"(%arg18) : (!tt.ptr<tensor<64x128xbf16>>) -> tensor<64x128xbf16> loc(#loc245)
    %27 = arith.truncf %19 : tensor<8x64xf32> to tensor<8x64xbf16> loc(#loc246)
    %cst_14 = arith.constant 0.000000e+00 : f32 loc(#loc247)
    %28 = tt.dot %27, %26, %25 : tensor<8x64xbf16> * tensor<64x128xbf16> -> tensor<8x128xf32> loc(#loc247)
    tt.return %28, %22, %11 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc248)
  ^bb1:  // no predecessors
    %29 = ub.poison : tensor<8x128xf32> loc(#loc249)
    %30 = ub.poison : tensor<8xf32> loc(#loc249)
    %31 = ub.poison : tensor<8xf32> loc(#loc249)
    tt.return %29, %30, %31 : tensor<8x128xf32>, tensor<8xf32>, tensor<8xf32> loc(#loc249)
  } loc(#loc207)
} loc(#loc)
#loc1 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":85:60)
#loc2 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":86:61)
#loc3 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":86:56)
#loc4 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":86:76)
#loc5 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":86:72)
#loc6 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":86:49)
#loc7 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":87:61)
#loc8 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":87:56)
#loc9 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":87:76)
#loc10 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":87:72)
#loc11 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":87:49)
#loc12 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":88:49)
#loc13 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":89:49)
#loc14 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":92:8)
#loc15 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":93:10)
#loc16 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":94:10)
#loc17 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":96:15)
#loc18 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":97:12)
#loc19 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":98:17)
#loc20 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":103:33)
#loc21 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":104:34)
#loc22 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":104:45)
#loc23 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":105:49)
#loc24 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":107:26)
#loc25 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":107:32)
#loc26 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":108:22)
#loc27 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":109:28)
#loc28 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":109:33)
#loc29 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":110:26)
#loc30 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":112:23)
#loc31 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":112:45)
#loc32 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":112:35)
#loc33 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":113:25)
#loc34 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":113:47)
#loc35 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":113:37)
#loc36 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":114:25)
#loc37 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":114:47)
#loc38 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":114:37)
#loc39 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":116:15)
#loc40 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":117:16)
#loc41 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":119:27)
#loc42 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":120:29)
#loc43 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":123:42)
#loc44 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":126:19)
#loc45 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":126:50)
#loc46 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":127:19)
#loc47 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":128:19)
#loc48 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":131:21)
#loc49 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":133:25)
#loc50 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":134:44)
#loc51 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":134:54)
#loc52 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":134:22)
#loc53 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":135:33)
#loc54 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":135:23)
#loc55 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":136:25)
#loc56 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":137:44)
#loc57 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":137:54)
#loc58 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":137:22)
#loc59 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":138:26)
#loc60 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":139:27)
#loc61 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":142:55)
#loc62 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":143:44)
#loc63 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":143:76)
#loc64 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":143:61)
#loc65 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":144:61)
#loc66 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":145:42)
#loc67 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":145:71)
#loc68 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":145:56)
#loc69 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":148:28)
#loc70 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":149:34)
#loc71 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:32)
#loc72 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:26)
#loc73 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:67)
#loc74 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:61)
#loc75 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:49)
#loc76 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:103)
#loc77 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:96)
#loc78 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":151:84)
#loc79 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":158:55)
#loc80 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":158:72)
#loc81 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":158:24)
#loc82 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":158:35)
#loc83 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":158:20)
#loc84 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":162:22)
#loc85 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":170:26)
#loc86 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":171:42)
#loc87 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":171:28)
#loc88 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":172:35)
#loc89 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":173:44)
#loc90 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":174:33)
#loc91 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":174:20)
#loc92 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":174:48)
#loc93 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":174:95)
#loc94 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":174:71)
#loc95 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":178:52)
#loc96 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":178:99)
#loc97 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":178:109)
#loc98 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":178:72)
#loc99 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":181:17)
#loc100 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":186:8)
#loc101 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":189:17)
#loc102 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":194:8)
#loc103 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":196:26)
#loc104 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":196:37)
#loc105 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":204:23)
#loc106 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":204:40)
#loc107 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":204:57)
#loc108 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":208:53)
#loc109 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":208:38)
#loc111 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":209:8)
#loc112 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":218:35)
#loc113 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":219:51)
#loc114 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":219:32)
#loc115 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":221:36)
#loc116 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":221:44)
#loc117 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":221:49)
#loc118 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":222:38)
#loc119 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":223:39)
#loc120 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":224:48)
#loc121 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":225:37)
#loc122 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":225:24)
#loc123 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":225:52)
#loc124 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":225:99)
#loc125 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":225:75)
#loc126 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":228:56)
#loc127 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":228:103)
#loc128 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":228:113)
#loc129 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":228:76)
#loc130 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":231:21)
#loc131 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":236:12)
#loc132 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":239:21)
#loc133 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":244:12)
#loc134 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":246:30)
#loc135 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":246:41)
#loc136 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":254:27)
#loc137 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":254:44)
#loc138 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":254:61)
#loc139 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":258:57)
#loc140 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":258:42)
#loc141 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":259:12)
#loc142 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":263:23)
#loc143 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":263:43)
#loc144 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":263:35)
#loc145 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":264:23)
#loc146 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":264:43)
#loc147 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":264:35)
#loc148 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":267:17)
#loc149 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":270:25)
#loc150 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":272:8)
#loc151 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":275:17)
#loc152 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":278:25)
#loc153 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":280:8)
#loc154 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":284:25)
#loc155 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":285:25)
#loc156 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":290:30)
#loc157 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":291:30)
#loc158 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":296:21)
#loc159 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":296:31)
#loc160 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":296:25)
#loc161 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":297:18)
#loc162 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":298:20)
#loc163 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":300:20)
#loc164 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":300:38)
#loc165 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":300:30)
#loc166 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":301:41)
#loc167 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:25)
#loc168 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:21)
#loc169 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:38)
#loc170 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:34)
#loc171 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:51)
#loc172 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:46)
#loc173 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:65)
#loc174 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":302:59)
#loc175 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:53)
#loc176 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:49)
#loc177 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:67)
#loc178 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:62)
#loc179 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:74)
#loc180 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:25)
#loc181 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:92)
#loc182 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":303:4)
#loc184 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":40:16)
#loc185 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":40:22)
#loc186 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":40:28)
#loc187 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":40:11)
#loc188 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":40:4)
#loc189 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":117:0)
#loc190 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":126:31)
#loc191 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":126:11)
#loc192 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":126:4)
#loc194 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":73:27)
#loc195 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":73:11)
#loc196 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":73:4)
#loc198 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":356:40)
#loc199 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":388:16)
#loc200 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":395:63)
#loc201 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":398:26)
#loc202 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":400:50)
#loc203 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":401:50)
#loc204 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":399:8)
#loc205 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":404:11)
#loc206 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":404:4)
#loc208 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":506:55)
#loc209 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":511:19)
#loc210 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":513:14)
#loc211 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":518:36)
#loc212 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":519:36)
#loc213 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":527:44)
#loc214 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":527:69)
#loc215 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":530:34)
#loc216 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":533:22)
#loc217 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":534:23)
#loc218 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":536:23)
#loc219 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":537:33)
#loc220 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":537:23)
#loc221 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":538:22)
#loc222 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":539:24)
#loc223 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":540:23)
#loc224 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":542:35)
#loc225 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":542:24)
#loc226 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":543:24)
#loc227 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":548:48)
#loc228 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":548:73)
#loc229 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":550:69)
#loc230 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":553:27)
#loc231 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":557:51)
#loc232 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":557:27)
#loc233 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":559:35)
#loc234 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":560:51)
#loc235 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":564:31)
#loc236 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":564:25)
#loc237 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":565:51)
#loc238 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":565:39)
#loc239 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":565:21)
#loc240 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":570:16)
#loc241 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":570:34)
#loc242 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":570:24)
#loc243 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":572:22)
#loc244 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":572:16)
#loc245 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":573:54)
#loc246 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":574:22)
#loc247 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":574:44)
#loc248 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":579:11)
#loc249 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":579:4)
#loc251 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":416:19)
#loc252 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":416:11)
#loc253 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":413:2)
#loc255 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":409:21)
#loc256 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":409:11)
#loc257 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":409:4)
#loc259 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":188:40)
#loc260 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":188:15)
#loc261 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":176:4)
#loc263 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":167:27)
#loc264 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":167:11)
#loc265 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":167:4)
#loc267 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc268 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:11)
#loc269 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:4)
#loc271 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc272 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:11)
#loc273 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:4)
#loc274 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":418:21)
#loc275 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":418:13)
#loc277 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":456:33)
#loc278 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":457:38)
#loc279 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":457:24)
#loc280 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":458:109)
#loc281 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":458:113)
#loc282 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":458:39)
#loc283 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":458:55)
#loc284 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":458:25)
#loc285 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":459:30)
#loc286 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":459:35)
#loc287 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":459:60)
#loc288 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":460:34)
#loc289 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":460:48)
#loc290 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":460:63)
#loc291 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":461:29)
#loc292 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":461:47)
#loc293 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":461:61)
#loc294 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":461:42)
#loc295 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":462:11)
#loc296 = loc("/tmp/torchinductor_jovyan/gr/cgrzfqcquse4qir5hhbel5w6pbn26hmoxyxwwqjv5czj6mtped47.py":462:4)
