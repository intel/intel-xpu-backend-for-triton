#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [16, 2], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [8, 1], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0)
#loc1 = loc(unknown)
#loc55 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":60:27)
#loc82 = loc(callsite(#loc1 at #loc55))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg4: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg5: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg6: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg7: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg8: i32 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg9: i32 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<16x1xi64, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x4xi64, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x4xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<false> : tensor<16x4xi1, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<16x4xi8, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<true> : tensor<16x4xi1, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1x4xi64, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<16x4xi64, #blocked1> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<16x1xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<16x1xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<16x1xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<16x1xi32, #blocked> loc(#loc5)
    %10 = tt.splat %arg8 : i32 -> tensor<16x1xi32, #blocked1> loc(#loc6)
    %11 = tt.splat %arg8 : i32 -> tensor<16x1xi32, #blocked> loc(#loc6)
    %12 = arith.cmpi slt, %8, %10 : tensor<16x1xi32, #blocked1> loc(#loc6)
    %13 = arith.cmpi slt, %9, %11 : tensor<16x1xi32, #blocked> loc(#loc6)
    %14 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %15 = tt.expand_dims %14 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x4xi32, #blocked1> loc(#loc7)
    %16 = tt.splat %arg9 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc8)
    %17 = tt.splat %arg4 : i64 -> tensor<1x4xi64, #blocked1> loc(#loc72)
    %18 = arith.cmpi slt, %arg4, %c0_i64 : i64 loc(#loc73)
    %19 = tt.splat %18 : i1 -> tensor<1x4xi1, #blocked1> loc(#loc74)
    %20 = arith.extsi %8 : tensor<16x1xi32, #blocked1> to tensor<16x1xi64, #blocked1> loc(#loc13)
    %21 = tt.splat %arg4 : i64 -> tensor<16x1xi64, #blocked1> loc(#loc13)
    %22 = arith.muli %21, %20 : tensor<16x1xi64, #blocked1> loc(#loc13)
    %23 = tt.broadcast %22 : tensor<16x1xi64, #blocked1> -> tensor<16x4xi64, #blocked1> loc(#loc14)
    %24 = tt.splat %arg5 : i64 -> tensor<16x4xi64, #blocked1> loc(#loc15)
    %25 = tt.splat %arg6 : i64 -> tensor<1x4xi64, #blocked1> loc(#loc16)
    %26 = arith.addi %arg6, %arg7 : i64 loc(#loc17)
    %27 = tt.splat %26 : i64 -> tensor<1x4xi64, #blocked1> loc(#loc18)
    %28 = tt.splat %arg7 : i64 -> tensor<16x4xi64, #blocked1> loc(#loc19)
    %29 = tt.broadcast %12 : tensor<16x1xi1, #blocked1> -> tensor<16x4xi1, #blocked1> loc(#loc20)
    %30 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<16x4x!tt.ptr<i1>, #blocked1> loc(#loc21)
    %31 = scf.for %arg10 = %c0_i32 to %arg9 step %c4_i32 iter_args(%arg11 = %cst_6) -> (tensor<16x4xi64, #blocked1>)  : i32 {
      %47 = tt.splat %arg10 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc23)
      %48 = arith.addi %47, %15 : tensor<1x4xi32, #blocked1> loc(#loc23)
      %49 = arith.cmpi slt, %48, %16 : tensor<1x4xi32, #blocked1> loc(#loc8)
      %50 = arith.extsi %48 : tensor<1x4xi32, #blocked1> to tensor<1x4xi64, #blocked1> loc(#loc72)
      %51 = arith.divsi %50, %17 : tensor<1x4xi64, #blocked1> loc(#loc72)
      %52 = arith.remsi %50, %17 : tensor<1x4xi64, #blocked1> loc(#loc75)
      %53 = arith.cmpi ne, %52, %cst_0 : tensor<1x4xi64, #blocked1> loc(#loc76)
      %54 = arith.subi %51, %cst_5 : tensor<1x4xi64, #blocked1> loc(#loc77)
      %55 = arith.select %53, %54, %51 : tensor<1x4xi1, #blocked1>, tensor<1x4xi64, #blocked1> loc(#loc78)
      %56 = arith.cmpi slt, %48, %cst_1 : tensor<1x4xi32, #blocked1> loc(#loc79)
      %57 = arith.cmpi ne, %56, %19 : tensor<1x4xi1, #blocked1> loc(#loc74)
      %58 = arith.select %57, %55, %51 : tensor<1x4xi1, #blocked1>, tensor<1x4xi64, #blocked1> loc(#loc80)
      %59 = arith.cmpi slt, %58, %cst_5 : tensor<1x4xi64, #blocked1> loc(#loc30)
      %60 = tt.broadcast %52 : tensor<1x4xi64, #blocked1> -> tensor<16x4xi64, #blocked1> loc(#loc14)
      %61 = arith.addi %60, %23 : tensor<16x4xi64, #blocked1> loc(#loc14)
      %62 = arith.cmpi slt, %61, %24 : tensor<16x4xi64, #blocked1> loc(#loc15)
      %63 = tt.broadcast %59 : tensor<1x4xi1, #blocked1> -> tensor<16x4xi1, #blocked1> loc(#loc31)
      %64 = arith.andi %63, %62 : tensor<16x4xi1, #blocked1> loc(#loc31)
      %65 = tt.load %arg0 : !tt.ptr<i64> loc(#loc32)
      %66 = tt.splat %65 : i64 -> tensor<16x4xi64, #blocked1> loc(#loc33)
      %67 = arith.select %64, %66, %cst_6 : tensor<16x4xi1, #blocked1>, tensor<16x4xi64, #blocked1> loc(#loc34)
      %68 = arith.addi %25, %52 : tensor<1x4xi64, #blocked1> loc(#loc16)
      %69 = tt.broadcast %68 : tensor<1x4xi64, #blocked1> -> tensor<16x4xi64, #blocked1> loc(#loc35)
      %70 = arith.addi %69, %23 : tensor<16x4xi64, #blocked1> loc(#loc35)
      %71 = arith.cmpi sle, %70, %67 : tensor<16x4xi64, #blocked1> loc(#loc36)
      %72 = arith.cmpi slt, %70, %cst_6 : tensor<16x4xi64, #blocked1> loc(#loc37)
      %73 = arith.addi %27, %52 : tensor<1x4xi64, #blocked1> loc(#loc18)
      %74 = tt.broadcast %73 : tensor<1x4xi64, #blocked1> -> tensor<16x4xi64, #blocked1> loc(#loc38)
      %75 = arith.addi %74, %23 : tensor<16x4xi64, #blocked1> loc(#loc38)
      %76 = arith.select %72, %75, %70 : tensor<16x4xi1, #blocked1>, tensor<16x4xi64, #blocked1> loc(#loc39)
      %77 = arith.cmpi sge, %76, %cst_6 : tensor<16x4xi64, #blocked1> loc(#loc40)
      %78 = arith.cmpi slt, %76, %28 : tensor<16x4xi64, #blocked1> loc(#loc19)
      %79 = arith.andi %77, %78 : tensor<16x4xi1, #blocked1> loc(#loc41)
      %80 = tt.broadcast %49 : tensor<1x4xi1, #blocked1> -> tensor<16x4xi1, #blocked1> loc(#loc42)
      %81 = arith.andi %80, %64 : tensor<16x4xi1, #blocked1> loc(#loc42)
      %82 = arith.andi %81, %29 : tensor<16x4xi1, #blocked1> loc(#loc20)
      %83 = arith.xori %82, %cst_4 : tensor<16x4xi1, #blocked1> loc(#loc43)
      %84 = arith.ori %79, %83 : tensor<16x4xi1, #blocked1> loc(#loc44)
      tt.assert %84, "index out of bounds: 0 <= tl.where(ks2 + r0_1 + ks0*x0 < 0, ks2 + ks3 + r0_1 + ks0*x0, ks2 + r0_1 + ks0*x0) < ks3" : tensor<16x4xi1, #blocked1> loc(#loc45)
      %85 = tt.addptr %30, %76 : tensor<16x4x!tt.ptr<i1>, #blocked1>, tensor<16x4xi64, #blocked1> loc(#loc21)
      %86 = tt.bitcast %85 : tensor<16x4x!tt.ptr<i1>, #blocked1> -> tensor<16x4x!tt.ptr<i8>, #blocked1> loc(#loc46)
      %87 = tt.load %86, %82, %cst_3 evictionPolicy = evict_last : tensor<16x4x!tt.ptr<i8>, #blocked1> loc(#loc46)
      %88 = arith.cmpi ne, %87, %cst_3 : tensor<16x4xi8, #blocked1> loc(#loc46)
      %89 = arith.andi %71, %88 : tensor<16x4xi1, #blocked1> loc(#loc47)
      %90 = arith.select %64, %89, %cst_2 : tensor<16x4xi1, #blocked1>, tensor<16x4xi1, #blocked1> loc(#loc48)
      %91 = arith.extui %90 : tensor<16x4xi1, #blocked1> to tensor<16x4xi64, #blocked1> loc(#loc49)
      %92 = arith.addi %arg11, %91 : tensor<16x4xi64, #blocked1> loc(#loc50)
      %93 = arith.andi %80, %29 : tensor<16x4xi1, #blocked1> loc(#loc51)
      %94 = arith.select %93, %92, %arg11 : tensor<16x4xi1, #blocked1>, tensor<16x4xi64, #blocked1> loc(#loc52)
      scf.yield %94 : tensor<16x4xi64, #blocked1> loc(#loc53)
    } loc(#loc22)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg10: i64 loc(callsite(#loc1 at #loc55)), %arg11: i64 loc(callsite(#loc1 at #loc55))):
      %47 = arith.addi %arg10, %arg11 : i64 loc(#loc85)
      tt.reduce.return %47 : i64 loc(#loc81)
    }) : (tensor<16x4xi64, #blocked1>) -> tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc81)
    %33 = ttg.convert_layout %32 : tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc57)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi64, #blocked> loc(#loc57)
    %35 = arith.cmpi sgt, %34, %cst : tensor<16x1xi64, #blocked> loc(#loc58)
    %36 = arith.muli %arg4, %arg4 : i64 loc(#loc59)
    %37 = tt.splat %36 : i64 -> tensor<16x1xi64, #blocked> loc(#loc60)
    %38 = arith.cmpi slt, %34, %37 : tensor<16x1xi64, #blocked> loc(#loc60)
    %39 = arith.andi %35, %38 : tensor<16x1xi1, #blocked> loc(#loc61)
    %40 = arith.extui %39 : tensor<16x1xi1, #blocked> to tensor<16x1xi32, #blocked> loc(#loc83)
    %41 = arith.cmpi eq, %34, %37 : tensor<16x1xi64, #blocked> loc(#loc64)
    %42 = arith.extui %41 : tensor<16x1xi1, #blocked> to tensor<16x1xi32, #blocked> loc(#loc84)
    %43 = tt.splat %arg2 : !tt.ptr<i32> -> tensor<16x1x!tt.ptr<i32>, #blocked> loc(#loc67)
    %44 = tt.addptr %43, %9 : tensor<16x1x!tt.ptr<i32>, #blocked>, tensor<16x1xi32, #blocked> loc(#loc67)
    tt.store %44, %40, %13 : tensor<16x1x!tt.ptr<i32>, #blocked> loc(#loc68)
    %45 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<16x1x!tt.ptr<i32>, #blocked> loc(#loc69)
    %46 = tt.addptr %45, %9 : tensor<16x1x!tt.ptr<i32>, #blocked>, tensor<16x1xi32, #blocked> loc(#loc69)
    tt.store %46, %42, %13 : tensor<16x1x!tt.ptr<i32>, #blocked> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":21:28)
#loc3 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":21:33)
#loc4 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":22:44)
#loc5 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":22:23)
#loc6 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":23:21)
#loc7 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":24:37)
#loc8 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":30:29)
#loc9 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":73:16)
#loc10 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":33:59)
#loc11 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:36)
#loc12 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:32)
#loc13 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":38:26)
#loc14 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":38:22)
#loc15 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":40:22)
#loc16 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":47:22)
#loc17 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:72)
#loc18 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:78)
#loc19 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:202)
#loc20 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:229)
#loc21 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":52:35)
#loc22 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":28:40)
#loc23 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":29:31)
#loc24 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":74:20)
#loc25 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:34)
#loc26 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:44)
#loc27 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:47)
#loc28 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:25)
#loc29 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:47)
#loc30 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":37:22)
#loc31 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":41:22)
#loc32 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":42:23)
#loc33 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":43:37)
#loc34 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":44:36)
#loc35 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":47:29)
#loc36 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":48:25)
#loc37 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:63)
#loc38 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:85)
#loc39 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:93)
#loc40 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:32)
#loc41 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:118)
#loc42 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:222)
#loc43 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:212)
#loc44 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:210)
#loc45 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:237)
#loc46 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":52:119)
#loc47 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":53:24)
#loc48 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":55:38)
#loc49 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":56:25)
#loc50 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":58:25)
#loc51 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:36)
#loc52 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:50)
#loc53 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:8)
#loc54 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc56 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc57 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":60:30)
#loc58 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":62:20)
#loc59 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":63:16)
#loc60 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":64:20)
#loc61 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":65:20)
#loc62 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":67:21)
#loc63 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":66:21)
#loc64 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":68:21)
#loc65 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":70:21)
#loc66 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":69:21)
#loc67 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":71:25)
#loc68 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":71:37)
#loc69 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:25)
#loc70 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:37)
#loc71 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:4)
#loc72 = loc(callsite(#loc9 at #loc10))
#loc73 = loc(callsite(#loc11 at #loc10))
#loc74 = loc(callsite(#loc12 at #loc10))
#loc75 = loc(callsite(#loc24 at #loc10))
#loc76 = loc(callsite(#loc25 at #loc10))
#loc77 = loc(callsite(#loc26 at #loc10))
#loc78 = loc(callsite(#loc27 at #loc10))
#loc79 = loc(callsite(#loc28 at #loc10))
#loc80 = loc(callsite(#loc29 at #loc10))
#loc81 = loc(callsite(#loc54 at #loc55))
#loc83 = loc(fused[#loc62, #loc63])
#loc84 = loc(fused[#loc65, #loc66])
#loc85 = loc(callsite(#loc56 at #loc81))
