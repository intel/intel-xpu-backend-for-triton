; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@assertFunc_ = internal addrspace(1) constant [8 x i8] c"unknown\00"
@assertFile_ = internal addrspace(1) constant [85 x i8] c"/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py\00"
@assertMessage_ = internal addrspace(1) constant [114 x i8] c"index out of bounds: 0 <= tl.where(ks4 + r0_2 + ks0*x0 < 0, ks4 + ks5 + r0_2 + ks0*x0, ks4 + r0_2 + ks0*x0) < ks5\00"
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32, i32, i64, i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32, i32, i64) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define spir_kernel void @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_1(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i64 %5, i64 %6, i64 %7, i64 %8, i64 %9, i32 %10, i32 %11, ptr addrspace(1) readnone captures(none) %12, ptr addrspace(3) captures(none) %13) local_unnamed_addr #2 !dbg !16 !intel_reqd_sub_group_size !17 !max_work_group_size !18 {
  %15 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !19
  %16 = trunc i64 %15 to i32, !dbg !19
  %17 = icmp sgt i32 %10, %16, !dbg !20
  %18 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !21
  %19 = trunc i64 %18 to i32, !dbg !21
  %20 = and i32 %19, 511, !dbg !21
  %21 = and i32 %19, 31, !dbg !21
  %22 = lshr i32 %20, 5, !dbg !21
  %sext = shl i64 %15, 32, !dbg !22
  %23 = ashr exact i64 %sext, 32, !dbg !22
  %.frozen = freeze i64 %23, !dbg !22
  %.frozen45 = freeze i64 %5, !dbg !22
  %24 = sdiv i64 %.frozen, %.frozen45, !dbg !22
  %25 = mul i64 %24, %.frozen45, !dbg !23
  %.decomposed = sub i64 %.frozen, %25, !dbg !23
  %26 = icmp slt i64 %4, 0, !dbg !24
  %27 = mul i64 %24, %4, !dbg !28
  %28 = mul i64 %.decomposed, %4, !dbg !29
  %29 = icmp sgt i32 %11, 0, !dbg !30
  br i1 %29, label %.lr.ph, label %._crit_edge, !dbg !30

.lr.ph:                                           ; preds = %14
  %30 = add i64 %9, %8, !dbg !31
  %31 = add i64 %28, %8
  %32 = add i64 %28, %30
  %33 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32
  %34 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 8), align 8
  %35 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 16), align 16
  %36 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32
  %37 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 8), align 8
  %38 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 16), align 16
  br label %39, !dbg !30

39:                                               ; preds = %.lr.ph, %167
  %40 = phi i64 [ 0, %.lr.ph ], [ %179, %167 ]
  %41 = phi i64 [ 0, %.lr.ph ], [ %182, %167 ]
  %42 = phi i64 [ 0, %.lr.ph ], [ %185, %167 ]
  %43 = phi i64 [ 0, %.lr.ph ], [ %188, %167 ]
  %44 = phi i32 [ 0, %.lr.ph ], [ %189, %167 ]
  %45 = or disjoint i32 %44, %20, !dbg !32
  %46 = or disjoint i32 %45, 512, !dbg !32
  %47 = or disjoint i32 %45, 1024, !dbg !32
  %48 = or disjoint i32 %45, 1536, !dbg !32
  %49 = icmp slt i32 %45, %11, !dbg !33
  %50 = icmp slt i32 %46, %11, !dbg !33
  %51 = icmp slt i32 %47, %11, !dbg !33
  %52 = icmp slt i32 %48, %11, !dbg !33
  %53 = sext i32 %45 to i64, !dbg !34
  %54 = sext i32 %46 to i64, !dbg !34
  %55 = sext i32 %47 to i64, !dbg !34
  %56 = sext i32 %48 to i64, !dbg !34
  %.frozen46 = freeze i64 %53, !dbg !34
  %.frozen47 = freeze i64 %4, !dbg !34
  %57 = sdiv i64 %.frozen46, %.frozen47, !dbg !34
  %.frozen49 = freeze i64 %54, !dbg !34
  %.frozen50 = freeze i64 %4, !dbg !34
  %58 = sdiv i64 %.frozen49, %.frozen50, !dbg !34
  %.frozen52 = freeze i64 %55, !dbg !34
  %.frozen53 = freeze i64 %4, !dbg !34
  %59 = sdiv i64 %.frozen52, %.frozen53, !dbg !34
  %.frozen55 = freeze i64 %56, !dbg !34
  %.frozen56 = freeze i64 %4, !dbg !34
  %60 = sdiv i64 %.frozen55, %.frozen56, !dbg !34
  %61 = mul i64 %57, %.frozen47, !dbg !35
  %.decomposed48 = sub i64 %.frozen46, %61, !dbg !35
  %62 = mul i64 %58, %.frozen50, !dbg !35
  %.decomposed51 = sub i64 %.frozen49, %62, !dbg !35
  %63 = mul i64 %59, %.frozen53, !dbg !35
  %.decomposed54 = sub i64 %.frozen52, %63, !dbg !35
  %64 = mul i64 %60, %.frozen56, !dbg !35
  %.decomposed57 = sub i64 %.frozen55, %64, !dbg !35
  %.not = icmp ne i64 %.decomposed48, 0, !dbg !36
  %.not4 = icmp ne i64 %.decomposed51, 0, !dbg !36
  %.not5 = icmp ne i64 %.decomposed54, 0, !dbg !36
  %.not6 = icmp ne i64 %.decomposed57, 0, !dbg !36
  %65 = icmp slt i32 %44, 0, !dbg !37
  %66 = xor i1 %26, %65, !dbg !38
  %narrow = select i1 %66, i1 %.not, i1 false, !dbg !39
  %67 = sext i1 %narrow to i64, !dbg !39
  %narrow7 = select i1 %66, i1 %.not4, i1 false, !dbg !39
  %68 = sext i1 %narrow7 to i64, !dbg !39
  %narrow8 = select i1 %66, i1 %.not5, i1 false, !dbg !39
  %69 = sext i1 %narrow8 to i64, !dbg !39
  %narrow9 = select i1 %66, i1 %.not6, i1 false, !dbg !39
  %70 = sext i1 %narrow9 to i64, !dbg !39
  %71 = add i64 %57, %27, !dbg !39
  %72 = add i64 %71, %67, !dbg !40
  %73 = add i64 %58, %27, !dbg !39
  %74 = add i64 %73, %68, !dbg !40
  %75 = add i64 %59, %27, !dbg !39
  %76 = add i64 %75, %69, !dbg !40
  %77 = add i64 %60, %27, !dbg !39
  %78 = add i64 %77, %70, !dbg !40
  %79 = icmp slt i64 %72, %6, !dbg !41
  %80 = icmp slt i64 %74, %6, !dbg !41
  %81 = icmp slt i64 %76, %6, !dbg !41
  %82 = icmp slt i64 %78, %6, !dbg !41
  %83 = add i64 %.decomposed48, %28, !dbg !42
  %84 = add i64 %.decomposed51, %28, !dbg !42
  %85 = add i64 %.decomposed54, %28, !dbg !42
  %86 = add i64 %.decomposed57, %28, !dbg !42
  %87 = icmp slt i64 %83, %7, !dbg !43
  %88 = icmp slt i64 %84, %7, !dbg !43
  %89 = icmp slt i64 %85, %7, !dbg !43
  %90 = icmp slt i64 %86, %7, !dbg !43
  %91 = and i1 %87, %79, !dbg !44
  %92 = and i1 %88, %80, !dbg !44
  %93 = and i1 %89, %81, !dbg !44
  %94 = and i1 %90, %82, !dbg !44
  %95 = load i64, ptr addrspace(1) %0, align 8, !dbg !45
  %96 = select i1 %91, i64 %95, i64 0, !dbg !46
  %97 = select i1 %92, i64 %95, i64 0, !dbg !46
  %98 = select i1 %93, i64 %95, i64 0, !dbg !46
  %99 = select i1 %94, i64 %95, i64 0, !dbg !46
  %100 = add i64 %96, %72, !dbg !47
  %101 = add i64 %97, %74, !dbg !47
  %102 = add i64 %98, %76, !dbg !47
  %103 = add i64 %99, %78, !dbg !47
  %104 = add i64 %31, %.decomposed48, !dbg !48
  %105 = add i64 %31, %.decomposed51, !dbg !48
  %106 = add i64 %31, %.decomposed54, !dbg !48
  %107 = add i64 %31, %.decomposed57, !dbg !48
  %108 = icmp sle i64 %104, %100, !dbg !49
  %109 = icmp sle i64 %105, %101, !dbg !49
  %110 = icmp sle i64 %106, %102, !dbg !49
  %111 = icmp sle i64 %107, %103, !dbg !49
  %112 = icmp slt i64 %104, 0, !dbg !50
  %113 = icmp slt i64 %105, 0, !dbg !50
  %114 = icmp slt i64 %106, 0, !dbg !50
  %115 = icmp slt i64 %107, 0, !dbg !50
  %116 = add i64 %32, %.decomposed48, !dbg !51
  %117 = add i64 %32, %.decomposed51, !dbg !51
  %118 = add i64 %32, %.decomposed54, !dbg !51
  %119 = add i64 %32, %.decomposed57, !dbg !51
  %120 = select i1 %112, i64 %116, i64 %104, !dbg !52
  %121 = select i1 %113, i64 %117, i64 %105, !dbg !52
  %122 = select i1 %114, i64 %118, i64 %106, !dbg !52
  %123 = select i1 %115, i64 %119, i64 %107, !dbg !52
  %124 = icmp slt i64 %120, 0, !dbg !53
  %125 = icmp slt i64 %121, 0, !dbg !53
  %126 = icmp slt i64 %122, 0, !dbg !53
  %127 = icmp slt i64 %123, 0, !dbg !53
  %128 = icmp sge i64 %120, %9, !dbg !54
  %129 = icmp sge i64 %121, %9, !dbg !54
  %130 = icmp sge i64 %122, %9, !dbg !54
  %131 = icmp sge i64 %123, %9, !dbg !54
  %.not14 = or i1 %124, %128, !dbg !55
  %.not19 = or i1 %125, %129, !dbg !55
  %.not24 = or i1 %126, %130, !dbg !55
  %.not29 = or i1 %127, %131, !dbg !56
  %132 = and i1 %49, %91, !dbg !56
  %133 = and i1 %50, %92, !dbg !56
  %134 = and i1 %51, %93, !dbg !56
  %135 = and i1 %52, %94, !dbg !56
  %136 = and i1 %17, %132, !dbg !57
  %137 = and i1 %17, %133, !dbg !57
  %138 = and i1 %17, %134, !dbg !57
  %139 = and i1 %17, %135, !dbg !57
  %.not11 = and i1 %.not14, %136, !dbg !58
  %.not16 = and i1 %.not19, %137, !dbg !58
  %.not21 = and i1 %.not24, %138, !dbg !58
  %.not26 = and i1 %.not29, %139, !dbg !59
  %140 = or i1 %.not11, %.not16, !dbg !59
  %141 = or i1 %140, %.not21, !dbg !59
  %142 = or i1 %141, %.not26, !dbg !59
  br i1 %142, label %143, label %144, !dbg !59

143:                                              ; preds = %39
  tail call spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertMessage_ to ptr addrspace(4)), ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFile_ to ptr addrspace(4)), i32 noundef 53, ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFunc_ to ptr addrspace(4)), i64 noundef %33, i64 noundef %34, i64 noundef %35, i64 noundef %36, i64 noundef %37, i64 noundef %38) #5, !dbg !59
  br label %144, !dbg !59

144:                                              ; preds = %143, %39
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !59
  %145 = getelementptr i1, ptr addrspace(1) %1, i64 %121, !dbg !60
  %146 = getelementptr i1, ptr addrspace(1) %1, i64 %122, !dbg !60
  %147 = getelementptr i1, ptr addrspace(1) %1, i64 %123, !dbg !60
  br i1 %136, label %148, label %152, !dbg !61

148:                                              ; preds = %144
  %149 = getelementptr i1, ptr addrspace(1) %1, i64 %120, !dbg !60
  %150 = load i8, ptr addrspace(1) %149, align 1, !dbg !61
  %151 = icmp ne i8 %150, 0, !dbg !61
  br label %152, !dbg !61

152:                                              ; preds = %148, %144
  %153 = phi i1 [ %151, %148 ], [ false, %144 ], !dbg !61
  br i1 %137, label %154, label %157, !dbg !61

154:                                              ; preds = %152
  %155 = load i8, ptr addrspace(1) %145, align 1, !dbg !61
  %156 = icmp ne i8 %155, 0, !dbg !61
  br label %157, !dbg !61

157:                                              ; preds = %154, %152
  %158 = phi i1 [ %156, %154 ], [ false, %152 ], !dbg !61
  br i1 %138, label %159, label %162, !dbg !61

159:                                              ; preds = %157
  %160 = load i8, ptr addrspace(1) %146, align 1, !dbg !61
  %161 = icmp ne i8 %160, 0, !dbg !61
  br label %162, !dbg !61

162:                                              ; preds = %159, %157
  %163 = phi i1 [ %161, %159 ], [ false, %157 ], !dbg !61
  br i1 %139, label %164, label %167, !dbg !61

164:                                              ; preds = %162
  %165 = load i8, ptr addrspace(1) %147, align 1, !dbg !61
  %166 = icmp ne i8 %165, 0, !dbg !61
  br label %167, !dbg !61

167:                                              ; preds = %164, %162
  %168 = phi i1 [ %166, %164 ], [ false, %162 ], !dbg !61
  %169 = and i1 %108, %153, !dbg !62
  %170 = and i1 %109, %158, !dbg !62
  %171 = and i1 %110, %163, !dbg !62
  %172 = and i1 %111, %168, !dbg !62
  %173 = and i1 %17, %49, !dbg !63
  %174 = and i1 %17, %50, !dbg !63
  %175 = and i1 %17, %51, !dbg !63
  %176 = and i1 %17, %52, !dbg !63
  %177 = select i1 %173, i1 %91, i1 false, !dbg !64
  %narrow30 = select i1 %177, i1 %169, i1 false, !dbg !64
  %178 = zext i1 %narrow30 to i64, !dbg !64
  %179 = add i64 %40, %178, !dbg !64
  %180 = select i1 %174, i1 %92, i1 false, !dbg !64
  %narrow31 = select i1 %180, i1 %170, i1 false, !dbg !64
  %181 = zext i1 %narrow31 to i64, !dbg !64
  %182 = add i64 %41, %181, !dbg !64
  %183 = select i1 %175, i1 %93, i1 false, !dbg !64
  %narrow32 = select i1 %183, i1 %171, i1 false, !dbg !64
  %184 = zext i1 %narrow32 to i64, !dbg !64
  %185 = add i64 %42, %184, !dbg !64
  %186 = select i1 %176, i1 %94, i1 false, !dbg !64
  %narrow33 = select i1 %186, i1 %172, i1 false, !dbg !64
  %187 = zext i1 %narrow33 to i64, !dbg !64
  %188 = add i64 %43, %187, !dbg !64
  %189 = add i32 %44, 2048, !dbg !30
  %190 = icmp slt i32 %189, %11, !dbg !30
  br i1 %190, label %39, label %._crit_edge.loopexit, !dbg !30

._crit_edge.loopexit:                             ; preds = %167
  %191 = add i64 %179, %182, !dbg !65
  %192 = add i64 %191, %185, !dbg !65
  %193 = add i64 %192, %188, !dbg !65
  br label %._crit_edge, !dbg !65

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %14
  %194 = phi i64 [ 0, %14 ], [ %193, %._crit_edge.loopexit ], !dbg !65
  %195 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %194) #6, !dbg !69
  %196 = icmp eq i32 %21, 0, !dbg !69
  br i1 %196, label %197, label %200, !dbg !69

197:                                              ; preds = %._crit_edge
  %198 = zext nneg i32 %22 to i64, !dbg !69
  %199 = getelementptr i64, ptr addrspace(3) %13, i64 %198, !dbg !69
  store i64 %195, ptr addrspace(3) %199, align 4, !dbg !69
  br label %200, !dbg !69

200:                                              ; preds = %197, %._crit_edge
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !69
  %201 = icmp samesign ult i32 %20, 16, !dbg !69
  %202 = and i64 %18, 511, !dbg !69
  %203 = getelementptr i64, ptr addrspace(3) %13, i64 %202, !dbg !69
  br i1 %201, label %204, label %206, !dbg !69

204:                                              ; preds = %200
  %205 = load i64, ptr addrspace(3) %203, align 4, !dbg !69
  br label %206, !dbg !69

206:                                              ; preds = %204, %200
  %207 = phi i64 [ %205, %204 ], [ undef, %200 ], !dbg !68
  %208 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32 3, i32 3, i64 %207, i32 16) #6, !dbg !69
  %209 = and i32 %19, 15, !dbg !69
  %210 = icmp eq i32 %209, 0, !dbg !69
  %211 = and i1 %201, %210, !dbg !69
  br i1 %211, label %212, label %213, !dbg !69

212:                                              ; preds = %206
  store i64 %208, ptr addrspace(3) %203, align 4, !dbg !69
  br label %213, !dbg !69

213:                                              ; preds = %212, %206
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !69
  %214 = icmp samesign ult i32 %20, 32, !dbg !70
  %215 = and i1 %196, %214, !dbg !70
  %216 = and i1 %17, %215, !dbg !70
  br i1 %216, label %217, label %.critedge, !dbg !70

217:                                              ; preds = %213
  %218 = load i64, ptr addrspace(3) %13, align 4, !dbg !69
  %219 = mul i64 %4, %4, !dbg !71
  %220 = icmp eq i64 %218, %219, !dbg !72
  %221 = zext i1 %220 to i32, !dbg !73
  %222 = icmp sgt i64 %218, 0, !dbg !74
  %223 = icmp slt i64 %218, %219, !dbg !75
  %224 = and i1 %222, %223, !dbg !76
  %225 = zext i1 %224 to i32, !dbg !73
  %226 = insertelement <1 x i32> poison, i32 %225, i64 0, !dbg !70
  %227 = ashr exact i64 %sext, 30, !dbg !77
  %228 = getelementptr i8, ptr addrspace(1) %2, i64 %227, !dbg !77
  store <1 x i32> %226, ptr addrspace(1) %228, align 4, !dbg !70
  %229 = insertelement <1 x i32> poison, i32 %221, i64 0, !dbg !78
  %230 = getelementptr i8, ptr addrspace(1) %3, i64 %227, !dbg !79
  store <1 x i32> %229, ptr addrspace(1) %230, align 4, !dbg !78
  br label %.critedge, !dbg !78

.critedge:                                        ; preds = %213, %217
  ret void, !dbg !80
}

; Function Attrs: convergent mustprogress norecurse nounwind
declare extern_weak dso_local spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef, ptr addrspace(4) noundef, i32 noundef, ptr addrspace(4) noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/netbatch/donb74095_00/dir/workspace/NIT/xmain-rel/LX/xmainefi2linux_release/ws/icsws/llvm/libdevice/fallback-cassert.cpp" "sycl-optlevel"="2" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind }
attributes #6 = { convergent nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py", directory: "/tmp/torchinductor_jovyan/xy")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformIAddiimj", linkageName: "_Z27__spirv_GroupNonUniformIAddiimj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformIAddiim", linkageName: "_Z27__spirv_GroupNonUniformIAddiim", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_1", linkageName: "triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_1", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!17 = !{i32 32}
!18 = !{i64 512, i64 1, i64 1}
!19 = !DILocation(line: 21, column: 28, scope: !16)
!20 = !DILocation(line: 23, column: 21, scope: !16)
!21 = !DILocation(line: 24, column: 37, scope: !16)
!22 = !DILocation(line: 26, column: 19, scope: !16)
!23 = !DILocation(line: 27, column: 19, scope: !16)
!24 = !DILocation(line: 76, column: 36, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !16, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 35, column: 59, scope: !16)
!28 = !DILocation(line: 37, column: 26, scope: !16)
!29 = !DILocation(line: 40, column: 26, scope: !16)
!30 = !DILocation(line: 30, column: 40, scope: !16)
!31 = !DILocation(line: 53, column: 72, scope: !16)
!32 = !DILocation(line: 31, column: 31, scope: !16)
!33 = !DILocation(line: 32, column: 29, scope: !16)
!34 = !DILocation(line: 73, column: 16, scope: !25, inlinedAt: !27)
!35 = !DILocation(line: 74, column: 20, scope: !25, inlinedAt: !27)
!36 = !DILocation(line: 75, column: 34, scope: !25, inlinedAt: !27)
!37 = !DILocation(line: 76, column: 25, scope: !25, inlinedAt: !27)
!38 = !DILocation(line: 76, column: 32, scope: !25, inlinedAt: !27)
!39 = !DILocation(line: 76, column: 47, scope: !25, inlinedAt: !27)
!40 = !DILocation(line: 37, column: 22, scope: !16)
!41 = !DILocation(line: 39, column: 22, scope: !16)
!42 = !DILocation(line: 40, column: 22, scope: !16)
!43 = !DILocation(line: 42, column: 22, scope: !16)
!44 = !DILocation(line: 43, column: 22, scope: !16)
!45 = !DILocation(line: 44, column: 23, scope: !16)
!46 = !DILocation(line: 46, column: 36, scope: !16)
!47 = !DILocation(line: 48, column: 24, scope: !16)
!48 = !DILocation(line: 49, column: 29, scope: !16)
!49 = !DILocation(line: 50, column: 25, scope: !16)
!50 = !DILocation(line: 53, column: 63, scope: !16)
!51 = !DILocation(line: 53, column: 85, scope: !16)
!52 = !DILocation(line: 53, column: 93, scope: !16)
!53 = !DILocation(line: 53, column: 32, scope: !16)
!54 = !DILocation(line: 53, column: 202, scope: !16)
!55 = !DILocation(line: 53, column: 118, scope: !16)
!56 = !DILocation(line: 53, column: 222, scope: !16)
!57 = !DILocation(line: 53, column: 229, scope: !16)
!58 = !DILocation(line: 53, column: 210, scope: !16)
!59 = !DILocation(line: 53, column: 237, scope: !16)
!60 = !DILocation(line: 54, column: 35, scope: !16)
!61 = !DILocation(line: 54, column: 119, scope: !16)
!62 = !DILocation(line: 55, column: 24, scope: !16)
!63 = !DILocation(line: 61, column: 36, scope: !16)
!64 = !DILocation(line: 61, column: 50, scope: !16)
!65 = !DILocation(line: 260, column: 15, scope: !66, inlinedAt: !68)
!66 = distinct !DILexicalBlockFile(scope: !16, file: !67, discriminator: 0)
!67 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!68 = !DILocation(line: 62, column: 27, scope: !16)
!69 = !DILocation(line: 290, column: 36, scope: !66, inlinedAt: !68)
!70 = !DILocation(line: 73, column: 37, scope: !16)
!71 = !DILocation(line: 65, column: 16, scope: !16)
!72 = !DILocation(line: 70, column: 21, scope: !16)
!73 = !DILocation(line: 0, scope: !16)
!74 = !DILocation(line: 64, column: 20, scope: !16)
!75 = !DILocation(line: 66, column: 20, scope: !16)
!76 = !DILocation(line: 67, column: 20, scope: !16)
!77 = !DILocation(line: 73, column: 25, scope: !16)
!78 = !DILocation(line: 74, column: 37, scope: !16)
!79 = !DILocation(line: 74, column: 25, scope: !16)
!80 = !DILocation(line: 74, column: 4, scope: !16)
