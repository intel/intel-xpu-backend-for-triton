; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, double %4, ptr addrspace(1) writeonly captures(none) %5, i32 %6, ptr addrspace(1) readnone captures(none) %7, ptr addrspace(3) captures(none) %8) local_unnamed_addr #2 !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %10 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !20
  %11 = trunc i64 %10 to i32, !dbg !20
  %12 = shl i64 %10, 2, !dbg !20
  %13 = and i64 %12, 2044, !dbg !20
  %14 = getelementptr bfloat, ptr addrspace(1) %0, i64 %13, !dbg !21
  %15 = load i16, ptr addrspace(1) %14, align 8, !dbg !22
  %16 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %15) #4
  %17 = getelementptr inbounds nuw i8, ptr addrspace(1) %14, i64 2, !dbg !22
  %18 = load i16, ptr addrspace(1) %17, align 2, !dbg !22
  %19 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %18) #4
  %20 = getelementptr inbounds nuw i8, ptr addrspace(1) %14, i64 4, !dbg !22
  %21 = load i16, ptr addrspace(1) %20, align 4, !dbg !22
  %22 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %21) #4
  %23 = getelementptr inbounds nuw i8, ptr addrspace(1) %14, i64 6, !dbg !22
  %24 = load i16, ptr addrspace(1) %23, align 2, !dbg !22
  %25 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %24) #4
  %26 = getelementptr bfloat, ptr addrspace(1) %1, i64 %13, !dbg !23
  %27 = load i16, ptr addrspace(1) %26, align 8, !dbg !24
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #4
  %29 = getelementptr inbounds nuw i8, ptr addrspace(1) %26, i64 2, !dbg !24
  %30 = load i16, ptr addrspace(1) %29, align 2, !dbg !24
  %31 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %30) #4
  %32 = getelementptr inbounds nuw i8, ptr addrspace(1) %26, i64 4, !dbg !24
  %33 = load i16, ptr addrspace(1) %32, align 4, !dbg !24
  %34 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %33) #4
  %35 = getelementptr inbounds nuw i8, ptr addrspace(1) %26, i64 6, !dbg !24
  %36 = load i16, ptr addrspace(1) %35, align 2, !dbg !24
  %37 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %36) #4
  %38 = getelementptr bfloat, ptr addrspace(1) %2, i64 %13, !dbg !25
  %39 = load i16, ptr addrspace(1) %38, align 8, !dbg !26
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #4
  %41 = getelementptr inbounds nuw i8, ptr addrspace(1) %38, i64 2, !dbg !26
  %42 = load i16, ptr addrspace(1) %41, align 2, !dbg !26
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #4
  %44 = getelementptr inbounds nuw i8, ptr addrspace(1) %38, i64 4, !dbg !26
  %45 = load i16, ptr addrspace(1) %44, align 4, !dbg !26
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #4
  %47 = getelementptr inbounds nuw i8, ptr addrspace(1) %38, i64 6, !dbg !26
  %48 = load i16, ptr addrspace(1) %47, align 2, !dbg !26
  %49 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %48) #4
  %50 = fadd float %16, %28, !dbg !27
  %51 = fadd float %19, %31, !dbg !27
  %52 = fadd float %22, %34, !dbg !27
  %53 = fadd float %25, %37, !dbg !27
  %54 = fadd float %50, %40, !dbg !28
  %55 = fadd float %51, %43, !dbg !28
  %56 = fadd float %52, %46, !dbg !28
  %57 = fadd float %53, %49, !dbg !28
  %58 = fmul float %54, %54, !dbg !29
  %59 = fmul float %55, %55, !dbg !29
  %60 = fmul float %56, %56, !dbg !29
  %61 = fmul float %57, %57, !dbg !29
  %62 = or disjoint i64 %13, 2048, !dbg !30
  %63 = getelementptr bfloat, ptr addrspace(1) %0, i64 %62, !dbg !21
  %64 = load i16, ptr addrspace(1) %63, align 8, !dbg !22
  %65 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %64) #4
  %66 = getelementptr inbounds nuw i8, ptr addrspace(1) %63, i64 2, !dbg !22
  %67 = load i16, ptr addrspace(1) %66, align 2, !dbg !22
  %68 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %67) #4
  %69 = getelementptr inbounds nuw i8, ptr addrspace(1) %63, i64 4, !dbg !22
  %70 = load i16, ptr addrspace(1) %69, align 4, !dbg !22
  %71 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %70) #4
  %72 = getelementptr inbounds nuw i8, ptr addrspace(1) %63, i64 6, !dbg !22
  %73 = load i16, ptr addrspace(1) %72, align 2, !dbg !22
  %74 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %73) #4
  %75 = getelementptr bfloat, ptr addrspace(1) %1, i64 %62, !dbg !23
  %76 = load i16, ptr addrspace(1) %75, align 8, !dbg !24
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #4
  %78 = getelementptr inbounds nuw i8, ptr addrspace(1) %75, i64 2, !dbg !24
  %79 = load i16, ptr addrspace(1) %78, align 2, !dbg !24
  %80 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %79) #4
  %81 = getelementptr inbounds nuw i8, ptr addrspace(1) %75, i64 4, !dbg !24
  %82 = load i16, ptr addrspace(1) %81, align 4, !dbg !24
  %83 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %82) #4
  %84 = getelementptr inbounds nuw i8, ptr addrspace(1) %75, i64 6, !dbg !24
  %85 = load i16, ptr addrspace(1) %84, align 2, !dbg !24
  %86 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %85) #4
  %87 = getelementptr bfloat, ptr addrspace(1) %2, i64 %62, !dbg !25
  %88 = load i16, ptr addrspace(1) %87, align 8, !dbg !26
  %89 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %88) #4
  %90 = getelementptr inbounds nuw i8, ptr addrspace(1) %87, i64 2, !dbg !26
  %91 = load i16, ptr addrspace(1) %90, align 2, !dbg !26
  %92 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %91) #4
  %93 = getelementptr inbounds nuw i8, ptr addrspace(1) %87, i64 4, !dbg !26
  %94 = load i16, ptr addrspace(1) %93, align 4, !dbg !26
  %95 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %94) #4
  %96 = getelementptr inbounds nuw i8, ptr addrspace(1) %87, i64 6, !dbg !26
  %97 = load i16, ptr addrspace(1) %96, align 2, !dbg !26
  %98 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %97) #4
  %99 = fadd float %65, %77, !dbg !27
  %100 = fadd float %68, %80, !dbg !27
  %101 = fadd float %71, %83, !dbg !27
  %102 = fadd float %74, %86, !dbg !27
  %103 = fadd float %99, %89, !dbg !28
  %104 = fadd float %100, %92, !dbg !28
  %105 = fadd float %101, %95, !dbg !28
  %106 = fadd float %102, %98, !dbg !28
  %107 = fmul float %103, %103, !dbg !29
  %108 = fmul float %104, %104, !dbg !29
  %109 = fmul float %105, %105, !dbg !29
  %110 = fmul float %106, %106, !dbg !29
  %111 = fadd float %58, %107, !dbg !31
  %112 = fadd float %59, %108, !dbg !31
  %113 = fadd float %60, %109, !dbg !31
  %114 = fadd float %61, %110, !dbg !31
  %115 = and i32 %11, 511, !dbg !20
  %116 = and i32 %11, 31, !dbg !20
  %117 = fadd float %111, %112, !dbg !32
  %118 = fadd float %113, %117, !dbg !32
  %119 = fadd float %114, %118, !dbg !32
  %120 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %119) #5, !dbg !36
  %121 = icmp eq i32 %116, 0, !dbg !36
  br i1 %121, label %122, label %126, !dbg !36

122:                                              ; preds = %9
  %123 = lshr exact i32 %115, 5, !dbg !20
  %124 = zext nneg i32 %123 to i64, !dbg !36
  %125 = getelementptr float, ptr addrspace(3) %8, i64 %124, !dbg !36
  store float %120, ptr addrspace(3) %125, align 4, !dbg !36
  br label %126, !dbg !36

126:                                              ; preds = %122, %9
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !36
  %127 = icmp samesign ult i32 %115, 16, !dbg !36
  %128 = and i64 %10, 511, !dbg !36
  %129 = getelementptr float, ptr addrspace(3) %8, i64 %128, !dbg !36
  br i1 %127, label %130, label %132, !dbg !36

130:                                              ; preds = %126
  %131 = load float, ptr addrspace(3) %129, align 4, !dbg !36
  br label %132, !dbg !36

132:                                              ; preds = %130, %126
  %133 = phi float [ %131, %130 ], [ undef, %126 ], !dbg !35
  %134 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %133, i32 16) #5, !dbg !36
  %135 = and i32 %11, 15, !dbg !36
  %136 = icmp eq i32 %135, 0, !dbg !36
  %137 = and i1 %127, %136, !dbg !36
  br i1 %137, label %138, label %139, !dbg !36

138:                                              ; preds = %132
  store float %134, ptr addrspace(3) %129, align 4, !dbg !36
  br label %139, !dbg !36

139:                                              ; preds = %138, %132
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !36
  %140 = load float, ptr addrspace(3) %8, align 4, !dbg !36
  %141 = fmul float %140, 0x3F30000000000000, !dbg !37
  %142 = fptrunc double %4 to float, !dbg !38
  %143 = fadd float %141, %142, !dbg !39
  %144 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %143) #6, !dbg !40
  %145 = getelementptr bfloat, ptr addrspace(1) %3, i64 %13, !dbg !41
  %146 = load i16, ptr addrspace(1) %145, align 8, !dbg !42
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #4
  %148 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 2, !dbg !42
  %149 = load i16, ptr addrspace(1) %148, align 2, !dbg !42
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 4, !dbg !42
  %152 = load i16, ptr addrspace(1) %151, align 4, !dbg !42
  %153 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %152) #4
  %154 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 6, !dbg !42
  %155 = load i16, ptr addrspace(1) %154, align 2, !dbg !42
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = load i16, ptr addrspace(1) %14, align 8, !dbg !43
  %158 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %157) #4
  %159 = load i16, ptr addrspace(1) %17, align 2, !dbg !43
  %160 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %159) #4
  %161 = load i16, ptr addrspace(1) %20, align 4, !dbg !43
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = load i16, ptr addrspace(1) %23, align 2, !dbg !43
  %164 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %163) #4
  %165 = load i16, ptr addrspace(1) %26, align 8, !dbg !44
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #4
  %167 = load i16, ptr addrspace(1) %29, align 2, !dbg !44
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #4
  %169 = load i16, ptr addrspace(1) %32, align 4, !dbg !44
  %170 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %169) #4
  %171 = load i16, ptr addrspace(1) %35, align 2, !dbg !44
  %172 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %171) #4
  %173 = fadd float %158, %166, !dbg !45
  %174 = load i16, ptr addrspace(1) %38, align 8, !dbg !46
  %175 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %174) #4
  %176 = fadd float %173, %175, !dbg !47
  %177 = fmul float %144, %176, !dbg !48
  %178 = fmul float %147, %177, !dbg !49
  %179 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %178) #4
  %180 = insertelement <2 x i16> poison, i16 %179, i64 0, !dbg !50
  %181 = fadd float %160, %168, !dbg !45
  %182 = load i16, ptr addrspace(1) %41, align 2, !dbg !46
  %183 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %182) #4
  %184 = fadd float %181, %183, !dbg !47
  %185 = fmul float %144, %184, !dbg !48
  %186 = fmul float %150, %185, !dbg !49
  %187 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %186) #4
  %188 = insertelement <2 x i16> %180, i16 %187, i64 1, !dbg !50
  %189 = bitcast <2 x i16> %188 to i32, !dbg !50
  %190 = insertelement <2 x i32> poison, i32 %189, i64 0, !dbg !50
  %191 = fadd float %162, %170, !dbg !45
  %192 = load i16, ptr addrspace(1) %44, align 4, !dbg !46
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #4
  %194 = fadd float %191, %193, !dbg !47
  %195 = fmul float %144, %194, !dbg !48
  %196 = fmul float %153, %195, !dbg !49
  %197 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %196) #4
  %198 = insertelement <2 x i16> poison, i16 %197, i64 0, !dbg !50
  %199 = fadd float %164, %172, !dbg !45
  %200 = load i16, ptr addrspace(1) %47, align 2, !dbg !46
  %201 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %200) #4
  %202 = fadd float %199, %201, !dbg !47
  %203 = fmul float %144, %202, !dbg !48
  %204 = fmul float %156, %203, !dbg !49
  %205 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %204) #4
  %206 = insertelement <2 x i16> %198, i16 %205, i64 1, !dbg !50
  %207 = bitcast <2 x i16> %206 to i32, !dbg !50
  %208 = insertelement <2 x i32> %190, i32 %207, i64 1, !dbg !50
  %209 = getelementptr bfloat, ptr addrspace(1) %5, i64 %13, !dbg !51
  store <2 x i32> %208, ptr addrspace(1) %209, align 8, !dbg !50
  %210 = getelementptr bfloat, ptr addrspace(1) %3, i64 %62, !dbg !41
  %211 = load i16, ptr addrspace(1) %210, align 8, !dbg !42
  %212 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %211) #4
  %213 = getelementptr inbounds nuw i8, ptr addrspace(1) %210, i64 2, !dbg !42
  %214 = load i16, ptr addrspace(1) %213, align 2, !dbg !42
  %215 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %214) #4
  %216 = getelementptr inbounds nuw i8, ptr addrspace(1) %210, i64 4, !dbg !42
  %217 = load i16, ptr addrspace(1) %216, align 4, !dbg !42
  %218 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %217) #4
  %219 = getelementptr inbounds nuw i8, ptr addrspace(1) %210, i64 6, !dbg !42
  %220 = load i16, ptr addrspace(1) %219, align 2, !dbg !42
  %221 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %220) #4
  %222 = load i16, ptr addrspace(1) %63, align 8, !dbg !43
  %223 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %222) #4
  %224 = load i16, ptr addrspace(1) %66, align 2, !dbg !43
  %225 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %224) #4
  %226 = load i16, ptr addrspace(1) %69, align 4, !dbg !43
  %227 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %226) #4
  %228 = load i16, ptr addrspace(1) %72, align 2, !dbg !43
  %229 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %228) #4
  %230 = load i16, ptr addrspace(1) %75, align 8, !dbg !44
  %231 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %230) #4
  %232 = load i16, ptr addrspace(1) %78, align 2, !dbg !44
  %233 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %232) #4
  %234 = load i16, ptr addrspace(1) %81, align 4, !dbg !44
  %235 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %234) #4
  %236 = load i16, ptr addrspace(1) %84, align 2, !dbg !44
  %237 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %236) #4
  %238 = fadd float %223, %231, !dbg !45
  %239 = load i16, ptr addrspace(1) %87, align 8, !dbg !46
  %240 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %239) #4
  %241 = fadd float %238, %240, !dbg !47
  %242 = fmul float %144, %241, !dbg !48
  %243 = fmul float %212, %242, !dbg !49
  %244 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %243) #4
  %245 = insertelement <2 x i16> poison, i16 %244, i64 0, !dbg !50
  %246 = fadd float %225, %233, !dbg !45
  %247 = load i16, ptr addrspace(1) %90, align 2, !dbg !46
  %248 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %247) #4
  %249 = fadd float %246, %248, !dbg !47
  %250 = fmul float %144, %249, !dbg !48
  %251 = fmul float %215, %250, !dbg !49
  %252 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %251) #4
  %253 = insertelement <2 x i16> %245, i16 %252, i64 1, !dbg !50
  %254 = bitcast <2 x i16> %253 to i32, !dbg !50
  %255 = insertelement <2 x i32> poison, i32 %254, i64 0, !dbg !50
  %256 = fadd float %227, %235, !dbg !45
  %257 = load i16, ptr addrspace(1) %93, align 4, !dbg !46
  %258 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %257) #4
  %259 = fadd float %256, %258, !dbg !47
  %260 = fmul float %144, %259, !dbg !48
  %261 = fmul float %218, %260, !dbg !49
  %262 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %261) #4
  %263 = insertelement <2 x i16> poison, i16 %262, i64 0, !dbg !50
  %264 = fadd float %229, %237, !dbg !45
  %265 = load i16, ptr addrspace(1) %96, align 2, !dbg !46
  %266 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %265) #4
  %267 = fadd float %264, %266, !dbg !47
  %268 = fmul float %144, %267, !dbg !48
  %269 = fmul float %221, %268, !dbg !49
  %270 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %269) #4
  %271 = insertelement <2 x i16> %263, i16 %270, i64 1, !dbg !50
  %272 = bitcast <2 x i16> %271 to i32, !dbg !50
  %273 = insertelement <2 x i32> %255, i32 %272, i64 1, !dbg !50
  %274 = getelementptr bfloat, ptr addrspace(1) %5, i64 %62, !dbg !51
  store <2 x i32> %273, ptr addrspace(1) %274, align 8, !dbg !50
  ret void, !dbg !52
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cou3dgy4iaeuomjsxcnhaxgy43dcspup4zfotylk7yvk5rfphosx.py", directory: "/tmp/torchinductor_jovyan/ou")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 512, i64 1, i64 1}
!20 = !DILocation(line: 26, column: 37, scope: !17)
!21 = !DILocation(line: 35, column: 34, scope: !17)
!22 = !DILocation(line: 35, column: 94, scope: !17)
!23 = !DILocation(line: 36, column: 34, scope: !17)
!24 = !DILocation(line: 36, column: 94, scope: !17)
!25 = !DILocation(line: 37, column: 34, scope: !17)
!26 = !DILocation(line: 37, column: 94, scope: !17)
!27 = !DILocation(line: 38, column: 22, scope: !17)
!28 = !DILocation(line: 39, column: 22, scope: !17)
!29 = !DILocation(line: 41, column: 22, scope: !17)
!30 = !DILocation(line: 30, column: 31, scope: !17)
!31 = !DILocation(line: 43, column: 23, scope: !17)
!32 = !DILocation(line: 260, column: 15, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !17, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!35 = !DILocation(line: 45, column: 25, scope: !17)
!36 = !DILocation(line: 290, column: 36, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 61, column: 24, scope: !17)
!38 = !DILocation(line: 62, column: 25, scope: !17)
!39 = !DILocation(line: 63, column: 24, scope: !17)
!40 = !DILocation(line: 64, column: 32, scope: !17)
!41 = !DILocation(line: 53, column: 35, scope: !17)
!42 = !DILocation(line: 53, column: 96, scope: !17)
!43 = !DILocation(line: 54, column: 96, scope: !17)
!44 = !DILocation(line: 55, column: 96, scope: !17)
!45 = !DILocation(line: 57, column: 24, scope: !17)
!46 = !DILocation(line: 56, column: 96, scope: !17)
!47 = !DILocation(line: 58, column: 24, scope: !17)
!48 = !DILocation(line: 65, column: 24, scope: !17)
!49 = !DILocation(line: 67, column: 24, scope: !17)
!50 = !DILocation(line: 68, column: 80, scope: !17)
!51 = !DILocation(line: 68, column: 29, scope: !17)
!52 = !DILocation(line: 47, column: 4, scope: !17)
