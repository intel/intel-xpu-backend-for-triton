; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i32 %5, ptr addrspace(1) readnone captures(none) %6, ptr addrspace(3) captures(none) %7) local_unnamed_addr #2 !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %9 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !20
  %10 = trunc i64 %9 to i32, !dbg !20
  %11 = shl i64 %9, 2, !dbg !20
  %12 = and i64 %11, 2044, !dbg !20
  %13 = getelementptr bfloat, ptr addrspace(1) %0, i64 %12, !dbg !21
  %14 = load i16, ptr addrspace(1) %13, align 8, !dbg !22
  %15 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %14) #4
  %16 = getelementptr inbounds nuw i8, ptr addrspace(1) %13, i64 2, !dbg !22
  %17 = load i16, ptr addrspace(1) %16, align 2, !dbg !22
  %18 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %17) #4
  %19 = getelementptr inbounds nuw i8, ptr addrspace(1) %13, i64 4, !dbg !22
  %20 = load i16, ptr addrspace(1) %19, align 4, !dbg !22
  %21 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %20) #4
  %22 = getelementptr inbounds nuw i8, ptr addrspace(1) %13, i64 6, !dbg !22
  %23 = load i16, ptr addrspace(1) %22, align 2, !dbg !22
  %24 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %23) #4
  %25 = getelementptr bfloat, ptr addrspace(1) %1, i64 %12, !dbg !23
  %26 = load i16, ptr addrspace(1) %25, align 8, !dbg !24
  %27 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %26) #4
  %28 = getelementptr inbounds nuw i8, ptr addrspace(1) %25, i64 2, !dbg !24
  %29 = load i16, ptr addrspace(1) %28, align 2, !dbg !24
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = getelementptr inbounds nuw i8, ptr addrspace(1) %25, i64 4, !dbg !24
  %32 = load i16, ptr addrspace(1) %31, align 4, !dbg !24
  %33 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %32) #4
  %34 = getelementptr inbounds nuw i8, ptr addrspace(1) %25, i64 6, !dbg !24
  %35 = load i16, ptr addrspace(1) %34, align 2, !dbg !24
  %36 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %35) #4
  %37 = fadd float %15, %27, !dbg !25
  %38 = fadd float %18, %30, !dbg !25
  %39 = fadd float %21, %33, !dbg !25
  %40 = fadd float %24, %36, !dbg !25
  %41 = fmul float %37, %37, !dbg !26
  %42 = fmul float %38, %38, !dbg !26
  %43 = fmul float %39, %39, !dbg !26
  %44 = fmul float %40, %40, !dbg !26
  %45 = or disjoint i64 %12, 2048, !dbg !27
  %46 = getelementptr bfloat, ptr addrspace(1) %0, i64 %45, !dbg !21
  %47 = load i16, ptr addrspace(1) %46, align 8, !dbg !22
  %48 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %47) #4
  %49 = getelementptr inbounds nuw i8, ptr addrspace(1) %46, i64 2, !dbg !22
  %50 = load i16, ptr addrspace(1) %49, align 2, !dbg !22
  %51 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %50) #4
  %52 = getelementptr inbounds nuw i8, ptr addrspace(1) %46, i64 4, !dbg !22
  %53 = load i16, ptr addrspace(1) %52, align 4, !dbg !22
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #4
  %55 = getelementptr inbounds nuw i8, ptr addrspace(1) %46, i64 6, !dbg !22
  %56 = load i16, ptr addrspace(1) %55, align 2, !dbg !22
  %57 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %56) #4
  %58 = getelementptr bfloat, ptr addrspace(1) %1, i64 %45, !dbg !23
  %59 = load i16, ptr addrspace(1) %58, align 8, !dbg !24
  %60 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %59) #4
  %61 = getelementptr inbounds nuw i8, ptr addrspace(1) %58, i64 2, !dbg !24
  %62 = load i16, ptr addrspace(1) %61, align 2, !dbg !24
  %63 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %62) #4
  %64 = getelementptr inbounds nuw i8, ptr addrspace(1) %58, i64 4, !dbg !24
  %65 = load i16, ptr addrspace(1) %64, align 4, !dbg !24
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #4
  %67 = getelementptr inbounds nuw i8, ptr addrspace(1) %58, i64 6, !dbg !24
  %68 = load i16, ptr addrspace(1) %67, align 2, !dbg !24
  %69 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %68) #4
  %70 = fadd float %48, %60, !dbg !25
  %71 = fadd float %51, %63, !dbg !25
  %72 = fadd float %54, %66, !dbg !25
  %73 = fadd float %57, %69, !dbg !25
  %74 = fmul float %70, %70, !dbg !26
  %75 = fmul float %71, %71, !dbg !26
  %76 = fmul float %72, %72, !dbg !26
  %77 = fmul float %73, %73, !dbg !26
  %78 = fadd float %41, %74, !dbg !28
  %79 = fadd float %42, %75, !dbg !28
  %80 = fadd float %43, %76, !dbg !28
  %81 = fadd float %44, %77, !dbg !28
  %82 = and i32 %10, 511, !dbg !20
  %83 = and i32 %10, 31, !dbg !20
  %84 = fadd float %78, %79, !dbg !29
  %85 = fadd float %80, %84, !dbg !29
  %86 = fadd float %81, %85, !dbg !29
  %87 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %86) #5, !dbg !33
  %88 = icmp eq i32 %83, 0, !dbg !33
  br i1 %88, label %89, label %93, !dbg !33

89:                                               ; preds = %8
  %90 = lshr exact i32 %82, 5, !dbg !20
  %91 = zext nneg i32 %90 to i64, !dbg !33
  %92 = getelementptr float, ptr addrspace(3) %7, i64 %91, !dbg !33
  store float %87, ptr addrspace(3) %92, align 4, !dbg !33
  br label %93, !dbg !33

93:                                               ; preds = %89, %8
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !33
  %94 = icmp samesign ult i32 %82, 16, !dbg !33
  %95 = and i64 %9, 511, !dbg !33
  %96 = getelementptr float, ptr addrspace(3) %7, i64 %95, !dbg !33
  br i1 %94, label %97, label %99, !dbg !33

97:                                               ; preds = %93
  %98 = load float, ptr addrspace(3) %96, align 4, !dbg !33
  br label %99, !dbg !33

99:                                               ; preds = %97, %93
  %100 = phi float [ %98, %97 ], [ undef, %93 ], !dbg !32
  %101 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %100, i32 16) #5, !dbg !33
  %102 = and i32 %10, 15, !dbg !33
  %103 = icmp eq i32 %102, 0, !dbg !33
  %104 = and i1 %94, %103, !dbg !33
  br i1 %104, label %105, label %106, !dbg !33

105:                                              ; preds = %99
  store float %101, ptr addrspace(3) %96, align 4, !dbg !33
  br label %106, !dbg !33

106:                                              ; preds = %105, %99
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !33
  %107 = load float, ptr addrspace(3) %7, align 4, !dbg !33
  %108 = fmul float %107, 0x3F30000000000000, !dbg !34
  %109 = fptrunc double %3 to float, !dbg !35
  %110 = fadd float %108, %109, !dbg !36
  %111 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %110) #6, !dbg !37
  %112 = getelementptr bfloat, ptr addrspace(1) %2, i64 %12, !dbg !38
  %113 = load i16, ptr addrspace(1) %112, align 8, !dbg !39
  %114 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %113) #4
  %115 = getelementptr inbounds nuw i8, ptr addrspace(1) %112, i64 2, !dbg !39
  %116 = load i16, ptr addrspace(1) %115, align 2, !dbg !39
  %117 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %116) #4
  %118 = getelementptr inbounds nuw i8, ptr addrspace(1) %112, i64 4, !dbg !39
  %119 = load i16, ptr addrspace(1) %118, align 4, !dbg !39
  %120 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %119) #4
  %121 = getelementptr inbounds nuw i8, ptr addrspace(1) %112, i64 6, !dbg !39
  %122 = load i16, ptr addrspace(1) %121, align 2, !dbg !39
  %123 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %122) #4
  %124 = load i16, ptr addrspace(1) %13, align 8, !dbg !40
  %125 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %124) #4
  %126 = load i16, ptr addrspace(1) %16, align 2, !dbg !40
  %127 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %126) #4
  %128 = load i16, ptr addrspace(1) %19, align 4, !dbg !40
  %129 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %128) #4
  %130 = load i16, ptr addrspace(1) %22, align 2, !dbg !40
  %131 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %130) #4
  %132 = load i16, ptr addrspace(1) %25, align 8, !dbg !41
  %133 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %132) #4
  %134 = fadd float %125, %133, !dbg !42
  %135 = fmul float %111, %134, !dbg !43
  %136 = fmul float %114, %135, !dbg !44
  %137 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %136) #4
  %138 = insertelement <2 x i16> poison, i16 %137, i64 0, !dbg !45
  %139 = load i16, ptr addrspace(1) %28, align 2, !dbg !41
  %140 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %139) #4
  %141 = fadd float %127, %140, !dbg !42
  %142 = fmul float %111, %141, !dbg !43
  %143 = fmul float %117, %142, !dbg !44
  %144 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %143) #4
  %145 = insertelement <2 x i16> %138, i16 %144, i64 1, !dbg !45
  %146 = bitcast <2 x i16> %145 to i32, !dbg !45
  %147 = insertelement <2 x i32> poison, i32 %146, i64 0, !dbg !45
  %148 = load i16, ptr addrspace(1) %31, align 4, !dbg !41
  %149 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %148) #4
  %150 = fadd float %129, %149, !dbg !42
  %151 = fmul float %111, %150, !dbg !43
  %152 = fmul float %120, %151, !dbg !44
  %153 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %152) #4
  %154 = insertelement <2 x i16> poison, i16 %153, i64 0, !dbg !45
  %155 = load i16, ptr addrspace(1) %34, align 2, !dbg !41
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = fadd float %131, %156, !dbg !42
  %158 = fmul float %111, %157, !dbg !43
  %159 = fmul float %123, %158, !dbg !44
  %160 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %159) #4
  %161 = insertelement <2 x i16> %154, i16 %160, i64 1, !dbg !45
  %162 = bitcast <2 x i16> %161 to i32, !dbg !45
  %163 = insertelement <2 x i32> %147, i32 %162, i64 1, !dbg !45
  %164 = getelementptr bfloat, ptr addrspace(1) %4, i64 %12, !dbg !46
  store <2 x i32> %163, ptr addrspace(1) %164, align 8, !dbg !45
  %165 = getelementptr bfloat, ptr addrspace(1) %2, i64 %45, !dbg !38
  %166 = load i16, ptr addrspace(1) %165, align 8, !dbg !39
  %167 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %166) #4
  %168 = getelementptr inbounds nuw i8, ptr addrspace(1) %165, i64 2, !dbg !39
  %169 = load i16, ptr addrspace(1) %168, align 2, !dbg !39
  %170 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %169) #4
  %171 = getelementptr inbounds nuw i8, ptr addrspace(1) %165, i64 4, !dbg !39
  %172 = load i16, ptr addrspace(1) %171, align 4, !dbg !39
  %173 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %172) #4
  %174 = getelementptr inbounds nuw i8, ptr addrspace(1) %165, i64 6, !dbg !39
  %175 = load i16, ptr addrspace(1) %174, align 2, !dbg !39
  %176 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %175) #4
  %177 = load i16, ptr addrspace(1) %46, align 8, !dbg !40
  %178 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %177) #4
  %179 = load i16, ptr addrspace(1) %49, align 2, !dbg !40
  %180 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %179) #4
  %181 = load i16, ptr addrspace(1) %52, align 4, !dbg !40
  %182 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %181) #4
  %183 = load i16, ptr addrspace(1) %55, align 2, !dbg !40
  %184 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %183) #4
  %185 = load i16, ptr addrspace(1) %58, align 8, !dbg !41
  %186 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %185) #4
  %187 = fadd float %178, %186, !dbg !42
  %188 = fmul float %111, %187, !dbg !43
  %189 = fmul float %167, %188, !dbg !44
  %190 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %189) #4
  %191 = insertelement <2 x i16> poison, i16 %190, i64 0, !dbg !45
  %192 = load i16, ptr addrspace(1) %61, align 2, !dbg !41
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #4
  %194 = fadd float %180, %193, !dbg !42
  %195 = fmul float %111, %194, !dbg !43
  %196 = fmul float %170, %195, !dbg !44
  %197 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %196) #4
  %198 = insertelement <2 x i16> %191, i16 %197, i64 1, !dbg !45
  %199 = bitcast <2 x i16> %198 to i32, !dbg !45
  %200 = insertelement <2 x i32> poison, i32 %199, i64 0, !dbg !45
  %201 = load i16, ptr addrspace(1) %64, align 4, !dbg !41
  %202 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %201) #4
  %203 = fadd float %182, %202, !dbg !42
  %204 = fmul float %111, %203, !dbg !43
  %205 = fmul float %173, %204, !dbg !44
  %206 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %205) #4
  %207 = insertelement <2 x i16> poison, i16 %206, i64 0, !dbg !45
  %208 = load i16, ptr addrspace(1) %67, align 2, !dbg !41
  %209 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %208) #4
  %210 = fadd float %184, %209, !dbg !42
  %211 = fmul float %111, %210, !dbg !43
  %212 = fmul float %176, %211, !dbg !44
  %213 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %212) #4
  %214 = insertelement <2 x i16> %207, i16 %213, i64 1, !dbg !45
  %215 = bitcast <2 x i16> %214 to i32, !dbg !45
  %216 = insertelement <2 x i32> %200, i32 %215, i64 1, !dbg !45
  %217 = getelementptr bfloat, ptr addrspace(1) %4, i64 %45, !dbg !46
  store <2 x i32> %216, ptr addrspace(1) %217, align 8, !dbg !45
  ret void, !dbg !47
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cmu2nxvea2p6urnitegqqmpfr7ti46256ysnjxmmozcpqcumvxr2.py", directory: "/tmp/torchinductor_jovyan/mu")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 512, i64 1, i64 1}
!20 = !DILocation(line: 26, column: 37, scope: !17)
!21 = !DILocation(line: 35, column: 34, scope: !17)
!22 = !DILocation(line: 35, column: 94, scope: !17)
!23 = !DILocation(line: 36, column: 34, scope: !17)
!24 = !DILocation(line: 36, column: 94, scope: !17)
!25 = !DILocation(line: 37, column: 22, scope: !17)
!26 = !DILocation(line: 39, column: 22, scope: !17)
!27 = !DILocation(line: 30, column: 31, scope: !17)
!28 = !DILocation(line: 41, column: 23, scope: !17)
!29 = !DILocation(line: 260, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !17, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!32 = !DILocation(line: 43, column: 25, scope: !17)
!33 = !DILocation(line: 290, column: 36, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 57, column: 24, scope: !17)
!35 = !DILocation(line: 58, column: 25, scope: !17)
!36 = !DILocation(line: 59, column: 24, scope: !17)
!37 = !DILocation(line: 60, column: 32, scope: !17)
!38 = !DILocation(line: 51, column: 34, scope: !17)
!39 = !DILocation(line: 51, column: 95, scope: !17)
!40 = !DILocation(line: 52, column: 95, scope: !17)
!41 = !DILocation(line: 53, column: 96, scope: !17)
!42 = !DILocation(line: 54, column: 23, scope: !17)
!43 = !DILocation(line: 61, column: 24, scope: !17)
!44 = !DILocation(line: 63, column: 23, scope: !17)
!45 = !DILocation(line: 64, column: 80, scope: !17)
!46 = !DILocation(line: 64, column: 29, scope: !17)
!47 = !DILocation(line: 45, column: 4, scope: !17)
