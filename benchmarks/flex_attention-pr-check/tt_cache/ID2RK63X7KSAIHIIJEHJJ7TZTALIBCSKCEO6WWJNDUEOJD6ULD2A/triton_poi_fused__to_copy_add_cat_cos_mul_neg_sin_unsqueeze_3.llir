; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %8 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %9 = trunc i64 %8 to i32, !dbg !20
  %10 = shl i32 %9, 10, !dbg !21
  %11 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %12 = trunc i64 %11 to i32, !dbg !22
  %13 = shl i32 %12, 3, !dbg !22
  %14 = and i32 %13, 1016, !dbg !22
  %15 = or disjoint i32 %14, %10, !dbg !23
  %16 = or disjoint i32 %15, 1, !dbg !23
  %17 = or disjoint i32 %15, 2, !dbg !23
  %18 = or disjoint i32 %15, 3, !dbg !23
  %19 = or disjoint i32 %15, 4, !dbg !23
  %20 = or disjoint i32 %15, 5, !dbg !23
  %21 = or disjoint i32 %15, 6, !dbg !23
  %22 = or disjoint i32 %15, 7, !dbg !23
  %.frozen = freeze i32 %15, !dbg !24
  %23 = sdiv i32 %.frozen, 128, !dbg !24
  %24 = mul i32 %23, 128, !dbg !25
  %.decomposed = sub i32 %.frozen, %24, !dbg !25
  %25 = srem i32 %16, 128, !dbg !25
  %26 = srem i32 %17, 128, !dbg !25
  %27 = srem i32 %18, 128, !dbg !25
  %28 = srem i32 %19, 128, !dbg !25
  %29 = srem i32 %20, 128, !dbg !25
  %30 = srem i32 %21, 128, !dbg !25
  %31 = srem i32 %22, 128, !dbg !25
  %32 = sdiv i32 %15, 4096, !dbg !26
  %33 = sext i32 %15 to i64, !dbg !27
  %34 = getelementptr bfloat, ptr addrspace(1) %0, i64 %33, !dbg !27
  %35 = load <8 x i16>, ptr addrspace(1) %34, align 16, !dbg !28
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !29
  %36 = srem i8 %.lhs.trunc, 64, !dbg !29
  %.lhs.trunc38 = trunc nsw i32 %25 to i8, !dbg !29
  %37 = srem i8 %.lhs.trunc38, 64, !dbg !29
  %.lhs.trunc40 = trunc nsw i32 %26 to i8, !dbg !29
  %38 = srem i8 %.lhs.trunc40, 64, !dbg !29
  %.lhs.trunc42 = trunc nsw i32 %27 to i8, !dbg !29
  %39 = srem i8 %.lhs.trunc42, 64, !dbg !29
  %.lhs.trunc44 = trunc nsw i32 %28 to i8, !dbg !29
  %40 = srem i8 %.lhs.trunc44, 64, !dbg !29
  %.lhs.trunc46 = trunc nsw i32 %29 to i8, !dbg !29
  %41 = srem i8 %.lhs.trunc46, 64, !dbg !29
  %.lhs.trunc48 = trunc nsw i32 %30 to i8, !dbg !29
  %42 = srem i8 %.lhs.trunc48, 64, !dbg !29
  %.lhs.trunc50 = trunc nsw i32 %31 to i8, !dbg !29
  %43 = srem i8 %.lhs.trunc50, 64, !dbg !29
  %44 = sext i8 %36 to i64, !dbg !30
  %45 = sext i8 %37 to i64, !dbg !30
  %46 = sext i8 %38 to i64, !dbg !30
  %47 = sext i8 %39 to i64, !dbg !30
  %48 = sext i8 %40 to i64, !dbg !30
  %49 = sext i8 %41 to i64, !dbg !30
  %50 = sext i8 %42 to i64, !dbg !30
  %51 = sext i8 %43 to i64, !dbg !30
  %52 = mul i64 %4, %44, !dbg !30
  %53 = mul i64 %4, %45, !dbg !30
  %54 = mul i64 %4, %46, !dbg !30
  %55 = mul i64 %4, %47, !dbg !30
  %56 = mul i64 %4, %48, !dbg !30
  %57 = mul i64 %4, %49, !dbg !30
  %58 = mul i64 %4, %50, !dbg !30
  %59 = mul i64 %4, %51, !dbg !30
  %60 = sext i32 %32 to i64, !dbg !31
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !32
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %60, !dbg !32
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !32
  %64 = getelementptr float, ptr addrspace(1) %63, i64 %60, !dbg !32
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !32
  %66 = getelementptr float, ptr addrspace(1) %65, i64 %60, !dbg !32
  %67 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !32
  %68 = getelementptr float, ptr addrspace(1) %67, i64 %60, !dbg !32
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !32
  %70 = getelementptr float, ptr addrspace(1) %69, i64 %60, !dbg !32
  %71 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !32
  %72 = getelementptr float, ptr addrspace(1) %71, i64 %60, !dbg !32
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !32
  %74 = getelementptr float, ptr addrspace(1) %73, i64 %60, !dbg !32
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !32
  %76 = getelementptr float, ptr addrspace(1) %75, i64 %60, !dbg !32
  %77 = load float, ptr addrspace(1) %62, align 4, !dbg !33
  %78 = load float, ptr addrspace(1) %64, align 4, !dbg !33
  %79 = load float, ptr addrspace(1) %66, align 4, !dbg !33
  %80 = load float, ptr addrspace(1) %68, align 4, !dbg !33
  %81 = load float, ptr addrspace(1) %70, align 4, !dbg !33
  %82 = load float, ptr addrspace(1) %72, align 4, !dbg !33
  %83 = load float, ptr addrspace(1) %74, align 4, !dbg !33
  %84 = load float, ptr addrspace(1) %76, align 4, !dbg !33
  %85 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %77), !dbg !34
  %86 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %78), !dbg !34
  %87 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %79), !dbg !34
  %88 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %80), !dbg !34
  %89 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %81), !dbg !34
  %90 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %82), !dbg !34
  %91 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %83), !dbg !34
  %92 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %84), !dbg !34
  %93 = icmp slt i32 %.decomposed, 64, !dbg !35
  %94 = shl nsw i32 %23, 7, !dbg !36
  br i1 %93, label %95, label %101, !dbg !37

95:                                               ; preds = %7
  %96 = add nsw i32 %.decomposed, 64, !dbg !38
  %97 = add i32 %96, %94, !dbg !39
  %98 = sext i32 %97 to i64, !dbg !40
  %99 = getelementptr bfloat, ptr addrspace(1) %0, i64 %98, !dbg !40
  %100 = load <8 x i16>, ptr addrspace(1) %99, align 16, !dbg !37
  br label %107, !dbg !41

101:                                              ; preds = %7
  %102 = add nsw i32 %.decomposed, -64, !dbg !42
  %103 = add nsw i32 %102, %94, !dbg !43
  %104 = sext i32 %103 to i64, !dbg !44
  %105 = getelementptr bfloat, ptr addrspace(1) %0, i64 %104, !dbg !44
  %106 = load <8 x i16>, ptr addrspace(1) %105, align 16, !dbg !41
  br label %107, !dbg !41

107:                                              ; preds = %95, %101
  %bc2236 = phi <8 x i16> [ zeroinitializer, %101 ], [ %100, %95 ]
  %bc34 = phi <8 x i16> [ %106, %101 ], [ zeroinitializer, %95 ], !dbg !41
  %108 = extractelement <8 x i16> %bc2236, i64 7, !dbg !45
  %109 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %108) #1
  %110 = fsub float 0.000000e+00, %109, !dbg !46
  %111 = extractelement <8 x i16> %bc2236, i64 6, !dbg !45
  %112 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %111) #1
  %113 = fsub float 0.000000e+00, %112, !dbg !46
  %114 = extractelement <8 x i16> %bc2236, i64 5, !dbg !45
  %115 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %114) #1
  %116 = fsub float 0.000000e+00, %115, !dbg !46
  %117 = extractelement <8 x i16> %bc2236, i64 4, !dbg !45
  %118 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %117) #1
  %119 = fsub float 0.000000e+00, %118, !dbg !46
  %120 = extractelement <8 x i16> %bc2236, i64 3, !dbg !45
  %121 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %120) #1
  %122 = fsub float 0.000000e+00, %121, !dbg !46
  %123 = extractelement <8 x i16> %bc2236, i64 2, !dbg !45
  %124 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %123) #1
  %125 = fsub float 0.000000e+00, %124, !dbg !46
  %126 = extractelement <8 x i16> %bc2236, i64 1, !dbg !45
  %127 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %126) #1
  %128 = fsub float 0.000000e+00, %127, !dbg !46
  %129 = extractelement <8 x i16> %bc2236, i64 0, !dbg !45
  %130 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %129) #1
  %131 = fsub float 0.000000e+00, %130, !dbg !46
  %132 = extractelement <8 x i16> %35, i64 7, !dbg !47
  %133 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %132) #1
  %134 = fptrunc double %2 to float, !dbg !48
  %135 = fmul float %92, %134, !dbg !49
  %136 = fmul float %135, %133, !dbg !50
  %137 = extractelement <8 x i16> %35, i64 6, !dbg !47
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #1
  %139 = fmul float %91, %134, !dbg !49
  %140 = fmul float %139, %138, !dbg !50
  %141 = extractelement <8 x i16> %35, i64 5, !dbg !47
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #1
  %143 = fmul float %90, %134, !dbg !49
  %144 = fmul float %143, %142, !dbg !50
  %145 = extractelement <8 x i16> %35, i64 4, !dbg !47
  %146 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %145) #1
  %147 = fmul float %89, %134, !dbg !49
  %148 = fmul float %147, %146, !dbg !50
  %149 = extractelement <8 x i16> %35, i64 3, !dbg !47
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #1
  %151 = fmul float %88, %134, !dbg !49
  %152 = fmul float %151, %150, !dbg !50
  %153 = extractelement <8 x i16> %35, i64 2, !dbg !47
  %154 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %153) #1
  %155 = fmul float %87, %134, !dbg !49
  %156 = fmul float %155, %154, !dbg !50
  %157 = extractelement <8 x i16> %35, i64 1, !dbg !47
  %158 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %157) #1
  %159 = fmul float %86, %134, !dbg !49
  %160 = fmul float %159, %158, !dbg !50
  %161 = extractelement <8 x i16> %35, i64 0, !dbg !47
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #1
  %163 = fmul float %85, %134, !dbg !49
  %164 = fmul float %163, %162, !dbg !50
  %165 = extractelement <8 x i16> %bc34, i64 0, !dbg !51
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #1
  %167 = extractelement <8 x i16> %bc34, i64 1, !dbg !51
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #1
  %169 = extractelement <8 x i16> %bc34, i64 2, !dbg !51
  %170 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %169) #1
  %171 = extractelement <8 x i16> %bc34, i64 3, !dbg !51
  %172 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %171) #1
  %173 = extractelement <8 x i16> %bc34, i64 4, !dbg !51
  %174 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %173) #1
  %175 = extractelement <8 x i16> %bc34, i64 5, !dbg !51
  %176 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %175) #1
  %177 = extractelement <8 x i16> %bc34, i64 6, !dbg !51
  %178 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %177) #1
  %179 = extractelement <8 x i16> %bc34, i64 7, !dbg !51
  %180 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %179) #1
  %181 = select i1 %93, float %131, float %166, !dbg !52
  %182 = select i1 %93, float %128, float %168, !dbg !52
  %183 = select i1 %93, float %125, float %170, !dbg !52
  %184 = select i1 %93, float %122, float %172, !dbg !52
  %185 = select i1 %93, float %119, float %174, !dbg !52
  %186 = select i1 %93, float %116, float %176, !dbg !52
  %187 = select i1 %93, float %113, float %178, !dbg !52
  %188 = select i1 %93, float %110, float %180, !dbg !52
  %189 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %77), !dbg !53
  %190 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %78), !dbg !53
  %191 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %79), !dbg !53
  %192 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %80), !dbg !53
  %193 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %81), !dbg !53
  %194 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %82), !dbg !53
  %195 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %83), !dbg !53
  %196 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %84), !dbg !53
  %197 = fmul float %189, %134, !dbg !54
  %198 = fmul float %190, %134, !dbg !54
  %199 = fmul float %191, %134, !dbg !54
  %200 = fmul float %192, %134, !dbg !54
  %201 = fmul float %193, %134, !dbg !54
  %202 = fmul float %194, %134, !dbg !54
  %203 = fmul float %195, %134, !dbg !54
  %204 = fmul float %196, %134, !dbg !54
  %205 = fmul float %181, %197, !dbg !55
  %206 = fmul float %182, %198, !dbg !55
  %207 = fmul float %183, %199, !dbg !55
  %208 = fmul float %184, %200, !dbg !55
  %209 = fmul float %185, %201, !dbg !55
  %210 = fmul float %186, %202, !dbg !55
  %211 = fmul float %187, %203, !dbg !55
  %212 = fmul float %188, %204, !dbg !55
  %213 = fadd float %164, %205, !dbg !56
  %214 = fadd float %160, %206, !dbg !56
  %215 = fadd float %156, %207, !dbg !56
  %216 = fadd float %152, %208, !dbg !56
  %217 = fadd float %148, %209, !dbg !56
  %218 = fadd float %144, %210, !dbg !56
  %219 = fadd float %140, %211, !dbg !56
  %220 = fadd float %136, %212, !dbg !56
  %221 = getelementptr bfloat, ptr addrspace(1) %3, i64 %33, !dbg !57
  %222 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %213) #1
  %223 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %214) #1
  %224 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %215) #1
  %225 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %216) #1
  %226 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %217) #1
  %227 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %218) #1
  %228 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %219) #1
  %229 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %220) #1
  %230 = insertelement <2 x i16> poison, i16 %222, i64 0, !dbg !58
  %231 = insertelement <2 x i16> %230, i16 %223, i64 1, !dbg !58
  %232 = bitcast <2 x i16> %231 to i32, !dbg !58
  %233 = insertelement <2 x i16> poison, i16 %224, i64 0, !dbg !58
  %234 = insertelement <2 x i16> %233, i16 %225, i64 1, !dbg !58
  %235 = bitcast <2 x i16> %234 to i32, !dbg !58
  %236 = insertelement <2 x i16> poison, i16 %226, i64 0, !dbg !58
  %237 = insertelement <2 x i16> %236, i16 %227, i64 1, !dbg !58
  %238 = bitcast <2 x i16> %237 to i32, !dbg !58
  %239 = insertelement <2 x i16> poison, i16 %228, i64 0, !dbg !58
  %240 = insertelement <2 x i16> %239, i16 %229, i64 1, !dbg !58
  %241 = bitcast <2 x i16> %240 to i32, !dbg !58
  %242 = insertelement <4 x i32> poison, i32 %232, i64 0, !dbg !58
  %243 = insertelement <4 x i32> %242, i32 %235, i64 1, !dbg !58
  %244 = insertelement <4 x i32> %243, i32 %238, i64 2, !dbg !58
  %245 = insertelement <4 x i32> %244, i32 %241, i64 3, !dbg !58
  store <4 x i32> %245, ptr addrspace(1) %221, align 16, !dbg !58
  ret void, !dbg !59
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chgxbmwrmcysje7ty6wwg7kxh3fsonfgiq7x2qvpvgl333zet6c3.py", directory: "/tmp/torchinductor_jovyan/hg")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 25, column: 19, scope: !17)
!25 = !DILocation(line: 23, column: 19, scope: !17)
!26 = !DILocation(line: 24, column: 19, scope: !17)
!27 = !DILocation(line: 26, column: 30, scope: !17)
!28 = !DILocation(line: 26, column: 35, scope: !17)
!29 = !DILocation(line: 27, column: 46, scope: !17)
!30 = !DILocation(line: 27, column: 41, scope: !17)
!31 = !DILocation(line: 27, column: 35, scope: !17)
!32 = !DILocation(line: 27, column: 30, scope: !17)
!33 = !DILocation(line: 27, column: 53, scope: !17)
!34 = !DILocation(line: 29, column: 23, scope: !17)
!35 = !DILocation(line: 38, column: 19, scope: !17)
!36 = !DILocation(line: 39, column: 40, scope: !17)
!37 = !DILocation(line: 39, column: 52, scope: !17)
!38 = !DILocation(line: 39, column: 36, scope: !17)
!39 = !DILocation(line: 39, column: 46, scope: !17)
!40 = !DILocation(line: 39, column: 31, scope: !17)
!41 = !DILocation(line: 46, column: 55, scope: !17)
!42 = !DILocation(line: 46, column: 49, scope: !17)
!43 = !DILocation(line: 46, column: 41, scope: !17)
!44 = !DILocation(line: 46, column: 31, scope: !17)
!45 = !DILocation(line: 39, column: 103, scope: !17)
!46 = !DILocation(line: 40, column: 13, scope: !17)
!47 = !DILocation(line: 26, column: 44, scope: !17)
!48 = !DILocation(line: 30, column: 19, scope: !17)
!49 = !DILocation(line: 31, column: 18, scope: !17)
!50 = !DILocation(line: 33, column: 18, scope: !17)
!51 = !DILocation(line: 46, column: 106, scope: !17)
!52 = !DILocation(line: 0, scope: !17)
!53 = !DILocation(line: 48, column: 24, scope: !17)
!54 = !DILocation(line: 49, column: 20, scope: !17)
!55 = !DILocation(line: 51, column: 20, scope: !17)
!56 = !DILocation(line: 52, column: 19, scope: !17)
!57 = !DILocation(line: 53, column: 25, scope: !17)
!58 = !DILocation(line: 53, column: 37, scope: !17)
!59 = !DILocation(line: 53, column: 4, scope: !17)
