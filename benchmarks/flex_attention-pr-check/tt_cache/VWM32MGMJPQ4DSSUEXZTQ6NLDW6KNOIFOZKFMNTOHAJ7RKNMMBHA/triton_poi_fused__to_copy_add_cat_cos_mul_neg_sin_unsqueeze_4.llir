; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_4(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %7 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %8 = trunc i64 %7 to i32, !dbg !20
  %9 = shl i32 %8, 8, !dbg !21
  %10 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %11 = trunc i64 %10 to i32, !dbg !22
  %12 = shl i32 %11, 1, !dbg !22
  %13 = and i32 %12, 254, !dbg !22
  %14 = or disjoint i32 %13, %9, !dbg !23
  %.frozen = freeze i32 %14, !dbg !24
  %15 = sdiv i32 %.frozen, 128, !dbg !24
  %16 = mul i32 %15, 128, !dbg !25
  %.decomposed = sub i32 %.frozen, %16, !dbg !25
  %17 = sext i32 %14 to i64, !dbg !26
  %18 = getelementptr bfloat, ptr addrspace(1) %0, i64 %17, !dbg !26
  %19 = load <2 x i16>, ptr addrspace(1) %18, align 4, !dbg !27
  %20 = srem i32 %14, 64, !dbg !28
  %21 = sext i32 %20 to i64, !dbg !29
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !29
  %23 = load float, ptr addrspace(1) %22, align 8, !dbg !30
  %24 = getelementptr inbounds nuw i8, ptr addrspace(1) %22, i64 4, !dbg !30
  %25 = load float, ptr addrspace(1) %24, align 4, !dbg !30
  %26 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %23), !dbg !31
  %27 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %25), !dbg !31
  %28 = icmp slt i32 %.decomposed, 64, !dbg !32
  %29 = shl nsw i32 %15, 7, !dbg !33
  br i1 %28, label %30, label %36, !dbg !34

30:                                               ; preds = %6
  %31 = add nsw i32 %.decomposed, 64, !dbg !35
  %32 = add i32 %31, %29, !dbg !36
  %33 = sext i32 %32 to i64, !dbg !37
  %34 = getelementptr bfloat, ptr addrspace(1) %0, i64 %33, !dbg !37
  %35 = load <2 x i16>, ptr addrspace(1) %34, align 4, !dbg !34
  br label %42, !dbg !38

36:                                               ; preds = %6
  %37 = add nsw i32 %.decomposed, -64, !dbg !39
  %38 = add nsw i32 %37, %29, !dbg !40
  %39 = sext i32 %38 to i64, !dbg !41
  %40 = getelementptr bfloat, ptr addrspace(1) %0, i64 %39, !dbg !41
  %41 = load <2 x i16>, ptr addrspace(1) %40, align 4, !dbg !38
  br label %42, !dbg !38

42:                                               ; preds = %30, %36
  %bc59 = phi <2 x i16> [ zeroinitializer, %36 ], [ %35, %30 ]
  %bc7 = phi <2 x i16> [ %41, %36 ], [ zeroinitializer, %30 ], !dbg !38
  %43 = extractelement <2 x i16> %bc59, i64 1, !dbg !42
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #1
  %45 = fsub float 0.000000e+00, %44, !dbg !43
  %46 = extractelement <2 x i16> %bc59, i64 0, !dbg !42
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #1
  %48 = fsub float 0.000000e+00, %47, !dbg !43
  %49 = extractelement <2 x i16> %19, i64 1, !dbg !44
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #1
  %51 = fptrunc double %2 to float, !dbg !45
  %52 = fmul float %27, %51, !dbg !46
  %53 = fmul float %52, %50, !dbg !47
  %54 = extractelement <2 x i16> %19, i64 0, !dbg !44
  %55 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %54) #1
  %56 = fmul float %26, %51, !dbg !46
  %57 = fmul float %56, %55, !dbg !47
  %58 = extractelement <2 x i16> %bc7, i64 0, !dbg !48
  %59 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %58) #1
  %60 = extractelement <2 x i16> %bc7, i64 1, !dbg !48
  %61 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %60) #1
  %62 = select i1 %28, float %48, float %59, !dbg !49
  %63 = select i1 %28, float %45, float %61, !dbg !49
  %64 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %23), !dbg !50
  %65 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %25), !dbg !50
  %66 = fmul float %64, %51, !dbg !51
  %67 = fmul float %65, %51, !dbg !51
  %68 = fmul float %62, %66, !dbg !52
  %69 = fmul float %63, %67, !dbg !52
  %70 = fadd float %57, %68, !dbg !53
  %71 = fadd float %53, %69, !dbg !53
  %72 = getelementptr bfloat, ptr addrspace(1) %3, i64 %17, !dbg !54
  %73 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %70) #1
  %74 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %71) #1
  %75 = insertelement <2 x i16> poison, i16 %73, i64 0, !dbg !55
  %76 = insertelement <2 x i16> %75, i16 %74, i64 1, !dbg !55
  %77 = bitcast <2 x i16> %76 to i32, !dbg !55
  %78 = insertelement <1 x i32> poison, i32 %77, i64 0, !dbg !55
  store <1 x i32> %78, ptr addrspace(1) %72, align 4, !dbg !55
  ret void, !dbg !56
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cf72dsfjn55zvxrqbk2nb4e4ulqb5dbul426jjkovc522piffojx.py", directory: "/tmp/torchinductor_jovyan/f7")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_4", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_4", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 20, column: 28, scope: !17)
!21 = !DILocation(line: 20, column: 33, scope: !17)
!22 = !DILocation(line: 21, column: 36, scope: !17)
!23 = !DILocation(line: 21, column: 23, scope: !17)
!24 = !DILocation(line: 25, column: 19, scope: !17)
!25 = !DILocation(line: 24, column: 19, scope: !17)
!26 = !DILocation(line: 26, column: 30, scope: !17)
!27 = !DILocation(line: 26, column: 35, scope: !17)
!28 = !DILocation(line: 27, column: 36, scope: !17)
!29 = !DILocation(line: 27, column: 31, scope: !17)
!30 = !DILocation(line: 27, column: 42, scope: !17)
!31 = !DILocation(line: 29, column: 23, scope: !17)
!32 = !DILocation(line: 38, column: 19, scope: !17)
!33 = !DILocation(line: 39, column: 40, scope: !17)
!34 = !DILocation(line: 39, column: 52, scope: !17)
!35 = !DILocation(line: 39, column: 36, scope: !17)
!36 = !DILocation(line: 39, column: 46, scope: !17)
!37 = !DILocation(line: 39, column: 31, scope: !17)
!38 = !DILocation(line: 46, column: 55, scope: !17)
!39 = !DILocation(line: 46, column: 49, scope: !17)
!40 = !DILocation(line: 46, column: 41, scope: !17)
!41 = !DILocation(line: 46, column: 31, scope: !17)
!42 = !DILocation(line: 39, column: 103, scope: !17)
!43 = !DILocation(line: 40, column: 13, scope: !17)
!44 = !DILocation(line: 26, column: 44, scope: !17)
!45 = !DILocation(line: 30, column: 19, scope: !17)
!46 = !DILocation(line: 31, column: 18, scope: !17)
!47 = !DILocation(line: 33, column: 18, scope: !17)
!48 = !DILocation(line: 46, column: 106, scope: !17)
!49 = !DILocation(line: 0, scope: !17)
!50 = !DILocation(line: 48, column: 24, scope: !17)
!51 = !DILocation(line: 49, column: 20, scope: !17)
!52 = !DILocation(line: 51, column: 20, scope: !17)
!53 = !DILocation(line: 52, column: 19, scope: !17)
!54 = !DILocation(line: 53, column: 25, scope: !17)
!55 = !DILocation(line: 53, column: 37, scope: !17)
!56 = !DILocation(line: 53, column: 4, scope: !17)
