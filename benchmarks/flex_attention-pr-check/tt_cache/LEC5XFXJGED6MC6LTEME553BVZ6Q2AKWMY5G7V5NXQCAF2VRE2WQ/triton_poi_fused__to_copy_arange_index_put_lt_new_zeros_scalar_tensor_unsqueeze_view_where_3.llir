; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@assertFunc_ = internal addrspace(1) constant [8 x i8] c"unknown\00"
@assertFile_ = internal addrspace(1) constant [85 x i8] c"/tmp/torchinductor_jovyan/3e/c3ezwpq34mx3ukqmtx6uwjhelksicdlw6jt4agef5alkggdzofwb.py\00"
@assertMessage_ = internal addrspace(1) constant [97 x i8] c"index out of bounds: 0 <= tmp10 < 1 + (triton_helpers.div_floor_integer((-1) + ks1 + ks2,  ks2))\00"
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define spir_kernel void @triton_poi_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_unsqueeze_view_where_3(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i64 %5, i64 %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #2 !dbg !14 !intel_reqd_sub_group_size !15 !max_work_group_size !16 {
  %10 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !17
  %11 = trunc i64 %10 to i32, !dbg !17
  %12 = shl i32 %11, 6, !dbg !18
  %13 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !19
  %14 = trunc i64 %13 to i32, !dbg !19
  %15 = and i32 %14, 31, !dbg !19
  %16 = or disjoint i32 %15, %12, !dbg !20
  %17 = or disjoint i32 %16, 32, !dbg !20
  %18 = icmp slt i32 %16, %7, !dbg !21
  %19 = icmp slt i32 %17, %7, !dbg !21
  %20 = sext i32 %16 to i64, !dbg !22
  %21 = sext i32 %17 to i64, !dbg !22
  %.frozen = freeze i64 %20, !dbg !23
  %.frozen13 = freeze i64 %4, !dbg !23
  %22 = sdiv i64 %.frozen, %.frozen13, !dbg !23
  %23 = mul i64 %22, %.frozen13, !dbg !22
  %.decomposed = sub i64 %.frozen, %23, !dbg !22
  %.frozen14 = freeze i64 %21, !dbg !23
  %.frozen15 = freeze i64 %4, !dbg !23
  %24 = sdiv i64 %.frozen14, %.frozen15, !dbg !23
  %25 = mul i64 %24, %.frozen15, !dbg !22
  %.decomposed16 = sub i64 %.frozen14, %25, !dbg !22
  %26 = icmp slt i64 %4, 2, !dbg !24
  %27 = icmp sgt i64 %4, 1, !dbg !25
  %28 = select i1 %27, i64 %4, i64 0, !dbg !26
  %29 = zext i1 %26 to i64, !dbg !27
  %30 = add i64 %28, %29, !dbg !28
  %31 = mul i64 %22, %30, !dbg !29
  %32 = mul i64 %24, %30, !dbg !29
  %33 = add i64 %31, %.decomposed, !dbg !30
  %34 = add i64 %32, %.decomposed16, !dbg !30
  %35 = getelementptr i64, ptr addrspace(1) %0, i64 %34, !dbg !31
  br i1 %18, label %36, label %40, !dbg !32

36:                                               ; preds = %9
  %37 = getelementptr i64, ptr addrspace(1) %0, i64 %33, !dbg !31
  %38 = load i64, ptr addrspace(1) %37, align 8, !dbg !32
  %39 = trunc i64 %38 to i32, !dbg !33
  br label %40, !dbg !32

40:                                               ; preds = %36, %9
  %41 = phi i32 [ %39, %36 ], [ 0, %9 ], !dbg !32
  br i1 %19, label %42, label %45, !dbg !32

42:                                               ; preds = %40
  %43 = load i64, ptr addrspace(1) %35, align 8, !dbg !32
  %44 = trunc i64 %43 to i32, !dbg !33
  br label %45, !dbg !32

45:                                               ; preds = %42, %40
  %46 = phi i32 [ %44, %42 ], [ 0, %40 ], !dbg !32
  %47 = getelementptr i32, ptr addrspace(1) %1, i64 %24, !dbg !34
  br i1 %18, label %48, label %52, !dbg !35

48:                                               ; preds = %45
  %49 = getelementptr i32, ptr addrspace(1) %1, i64 %22, !dbg !34
  %50 = load i32, ptr addrspace(1) %49, align 4, !dbg !35
  %51 = sext i32 %50 to i64, !dbg !36
  br label %52, !dbg !35

52:                                               ; preds = %48, %45
  %53 = phi i64 [ %51, %48 ], [ 0, %45 ], !dbg !35
  br i1 %19, label %54, label %57, !dbg !35

54:                                               ; preds = %52
  %55 = load i32, ptr addrspace(1) %47, align 4, !dbg !35
  %56 = sext i32 %55 to i64, !dbg !36
  br label %57, !dbg !35

57:                                               ; preds = %54, %52
  %58 = phi i64 [ %56, %54 ], [ 0, %52 ], !dbg !35
  %59 = icmp slt i64 %.decomposed, %53, !dbg !36
  %60 = icmp slt i64 %.decomposed16, %58, !dbg !36
  %61 = sext i32 %41 to i64, !dbg !37
  %62 = sext i32 %46 to i64, !dbg !37
  %63 = select i1 %59, i64 %61, i64 %4, !dbg !37
  %64 = select i1 %60, i64 %62, i64 %4, !dbg !37
  %65 = add i64 %4, 1, !dbg !38
  %66 = icmp slt i64 %63, 0, !dbg !39
  %67 = icmp slt i64 %64, 0, !dbg !39
  %68 = select i1 %66, i64 %65, i64 0, !dbg !40
  %69 = add i64 %68, %63, !dbg !40
  %70 = select i1 %67, i64 %65, i64 0, !dbg !40
  %71 = add i64 %70, %64, !dbg !40
  %72 = icmp slt i64 %69, 0, !dbg !41
  %73 = icmp slt i64 %71, 0, !dbg !41
  %74 = add i64 %5, -1, !dbg !42
  %75 = add i64 %74, %6, !dbg !43
  %.frozen17 = freeze i64 %75, !dbg !44
  %.frozen18 = freeze i64 %6, !dbg !44
  %76 = sdiv i64 %.frozen17, %.frozen18, !dbg !44
  %77 = mul i64 %76, %.frozen18, !dbg !48
  %.decomposed19 = sub i64 %.frozen17, %77, !dbg !48
  %.not = icmp ne i64 %.decomposed19, 0, !dbg !49
  %78 = xor i64 %75, %6, !dbg !50
  %79 = icmp slt i64 %78, 0, !dbg !50
  %narrow = and i1 %79, %.not, !dbg !51
  %80 = sext i1 %narrow to i64, !dbg !51
  %81 = add i64 %76, 1, !dbg !51
  %82 = add i64 %81, %80, !dbg !52
  %83 = icmp sge i64 %69, %82, !dbg !53
  %84 = icmp sge i64 %71, %82, !dbg !53
  %.not6 = or i1 %72, %83, !dbg !54
  %.not12 = or i1 %73, %84, !dbg !55
  %.not3 = and i1 %18, %.not6, !dbg !55
  %.not9 = and i1 %19, %.not12, !dbg !56
  %85 = or i1 %.not3, %.not9, !dbg !56
  br i1 %85, label %86, label %93, !dbg !56

86:                                               ; preds = %57
  %87 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32, !dbg !56
  %88 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 8), align 8, !dbg !56
  %89 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 16), align 16, !dbg !56
  %90 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !dbg !56
  %91 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 8), align 8, !dbg !56
  %92 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 16), align 16, !dbg !56
  tail call spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertMessage_ to ptr addrspace(4)), ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFile_ to ptr addrspace(4)), i32 noundef 35, ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFunc_ to ptr addrspace(4)), i64 noundef %87, i64 noundef %88, i64 noundef %89, i64 noundef %90, i64 noundef %91, i64 noundef %92) #5, !dbg !56
  br label %93, !dbg !56

93:                                               ; preds = %86, %57
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !56
  %94 = getelementptr i32, ptr addrspace(1) %2, i64 %34, !dbg !57
  br i1 %18, label %95, label %98, !dbg !58

95:                                               ; preds = %93
  %96 = insertelement <1 x i32> poison, i32 %41, i64 0, !dbg !58
  %97 = getelementptr i32, ptr addrspace(1) %2, i64 %33, !dbg !57
  store <1 x i32> %96, ptr addrspace(1) %97, align 4, !dbg !58
  br label %98, !dbg !58

98:                                               ; preds = %95, %93
  br i1 %19, label %99, label %101, !dbg !58

99:                                               ; preds = %98
  %100 = insertelement <1 x i32> poison, i32 %46, i64 0, !dbg !58
  store <1 x i32> %100, ptr addrspace(1) %94, align 4, !dbg !58
  br label %101, !dbg !58

101:                                              ; preds = %99, %98
  %102 = mul i64 %24, %4, !dbg !59
  %103 = getelementptr i32, ptr addrspace(1) %3, i64 %71, !dbg !60
  %104 = getelementptr i32, ptr addrspace(1) %103, i64 %24, !dbg !60
  %105 = getelementptr i32, ptr addrspace(1) %104, i64 %102, !dbg !60
  br i1 %18, label %106, label %111, !dbg !61

106:                                              ; preds = %101
  %107 = mul i64 %22, %4, !dbg !59
  %108 = getelementptr i32, ptr addrspace(1) %3, i64 %69, !dbg !60
  %109 = getelementptr i32, ptr addrspace(1) %108, i64 %22, !dbg !60
  %110 = getelementptr i32, ptr addrspace(1) %109, i64 %107, !dbg !60
  store <1 x i32> splat (i32 1), ptr addrspace(1) %110, align 4, !dbg !61
  br label %111, !dbg !61

111:                                              ; preds = %106, %101
  br i1 %19, label %112, label %113, !dbg !61

112:                                              ; preds = %111
  store <1 x i32> splat (i32 1), ptr addrspace(1) %105, align 4, !dbg !61
  br label %113, !dbg !61

113:                                              ; preds = %112, %111
  ret void, !dbg !62
}

; Function Attrs: convergent mustprogress norecurse nounwind
declare extern_weak dso_local spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef, ptr addrspace(4) noundef, i32 noundef, ptr addrspace(4) noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/netbatch/donb74095_00/dir/workspace/NIT/xmain-rel/LX/xmainefi2linux_release/ws/icsws/llvm/libdevice/fallback-cassert.cpp" "sycl-optlevel"="2" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind }
attributes #6 = { convergent nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c3ezwpq34mx3ukqmtx6uwjhelksicdlw6jt4agef5alkggdzofwb.py", directory: "/tmp/torchinductor_jovyan/3e")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_unsqueeze_view_where_3", linkageName: "triton_poi_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_unsqueeze_view_where_3", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!15 = !{i32 32}
!16 = !{i64 32, i64 1, i64 1}
!17 = !DILocation(line: 19, column: 28, scope: !14)
!18 = !DILocation(line: 19, column: 33, scope: !14)
!19 = !DILocation(line: 20, column: 36, scope: !14)
!20 = !DILocation(line: 20, column: 23, scope: !14)
!21 = !DILocation(line: 21, column: 21, scope: !14)
!22 = !DILocation(line: 22, column: 19, scope: !14)
!23 = !DILocation(line: 23, column: 19, scope: !14)
!24 = !DILocation(line: 24, column: 54, scope: !14)
!25 = !DILocation(line: 24, column: 80, scope: !14)
!26 = !DILocation(line: 24, column: 71, scope: !14)
!27 = !DILocation(line: 24, scope: !14)
!28 = !DILocation(line: 24, column: 62, scope: !14)
!29 = !DILocation(line: 24, column: 39, scope: !14)
!30 = !DILocation(line: 24, column: 35, scope: !14)
!31 = !DILocation(line: 24, column: 30, scope: !14)
!32 = !DILocation(line: 24, column: 87, scope: !14)
!33 = !DILocation(line: 26, column: 19, scope: !14)
!34 = !DILocation(line: 25, column: 30, scope: !14)
!35 = !DILocation(line: 25, column: 35, scope: !14)
!36 = !DILocation(line: 28, column: 18, scope: !14)
!37 = !DILocation(line: 30, column: 32, scope: !14)
!38 = !DILocation(line: 31, column: 15, scope: !14)
!39 = !DILocation(line: 33, column: 18, scope: !14)
!40 = !DILocation(line: 34, column: 33, scope: !14)
!41 = !DILocation(line: 35, column: 28, scope: !14)
!42 = !DILocation(line: 35, column: 91, scope: !14)
!43 = !DILocation(line: 35, column: 97, scope: !14)
!44 = !DILocation(line: 73, column: 16, scope: !45, inlinedAt: !47)
!45 = distinct !DILexicalBlockFile(scope: !14, file: !46, discriminator: 0)
!46 = !DIFile(filename: "triton_helpers.py", directory: "/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime")
!47 = !DILocation(line: 35, column: 103, scope: !14)
!48 = !DILocation(line: 74, column: 20, scope: !45, inlinedAt: !47)
!49 = !DILocation(line: 75, column: 34, scope: !45, inlinedAt: !47)
!50 = !DILocation(line: 76, column: 32, scope: !45, inlinedAt: !47)
!51 = !DILocation(line: 76, column: 47, scope: !45, inlinedAt: !47)
!52 = !DILocation(line: 35, column: 51, scope: !14)
!53 = !DILocation(line: 35, column: 46, scope: !14)
!54 = !DILocation(line: 35, column: 38, scope: !14)
!55 = !DILocation(line: 35, column: 113, scope: !14)
!56 = !DILocation(line: 35, column: 123, scope: !14)
!57 = !DILocation(line: 37, column: 25, scope: !14)
!58 = !DILocation(line: 37, column: 88, scope: !14)
!59 = !DILocation(line: 38, column: 42, scope: !14)
!60 = !DILocation(line: 38, column: 25, scope: !14)
!61 = !DILocation(line: 38, column: 54, scope: !14)
!62 = !DILocation(line: 38, column: 4, scope: !14)
