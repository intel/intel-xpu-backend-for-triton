; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) writeonly captures(none) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr #1 !dbg !14 !intel_reqd_sub_group_size !15 !max_work_group_size !16 {
  %9 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !17
  %10 = trunc i64 %9 to i32, !dbg !17
  %11 = sdiv i32 %10, 128, !dbg !18
  %sext = shl i64 %9, 32, !dbg !19
  %12 = ashr exact i64 %sext, 30, !dbg !19
  %13 = getelementptr i8, ptr addrspace(1) %0, i64 %12, !dbg !19
  %sext1 = add i64 %sext, 17592186044416, !dbg !19
  %14 = ashr exact i64 %sext1, 30, !dbg !19
  %15 = getelementptr i8, ptr addrspace(1) %0, i64 %14, !dbg !19
  %sext2 = add i64 %sext, 35184372088832, !dbg !19
  %16 = ashr exact i64 %sext2, 30, !dbg !19
  %17 = getelementptr i8, ptr addrspace(1) %0, i64 %16, !dbg !19
  %sext3 = add i64 %sext, 52776558133248, !dbg !19
  %18 = ashr exact i64 %sext3, 30, !dbg !19
  %19 = getelementptr i8, ptr addrspace(1) %0, i64 %18, !dbg !19
  %sext4 = add i64 %sext, 70368744177664, !dbg !19
  %20 = ashr exact i64 %sext4, 30, !dbg !19
  %21 = getelementptr i8, ptr addrspace(1) %0, i64 %20, !dbg !19
  %sext5 = add i64 %sext, 87960930222080, !dbg !19
  %22 = ashr exact i64 %sext5, 30, !dbg !19
  %23 = getelementptr i8, ptr addrspace(1) %0, i64 %22, !dbg !19
  %sext6 = add i64 %sext, 105553116266496, !dbg !19
  %24 = ashr exact i64 %sext6, 30, !dbg !19
  %25 = getelementptr i8, ptr addrspace(1) %0, i64 %24, !dbg !19
  %sext7 = add i64 %sext, 123145302310912, !dbg !19
  %26 = ashr exact i64 %sext7, 30, !dbg !19
  %27 = getelementptr i8, ptr addrspace(1) %0, i64 %26, !dbg !19
  %sext8 = add i64 %sext, 140737488355328, !dbg !19
  %28 = ashr exact i64 %sext8, 30, !dbg !19
  %29 = getelementptr i8, ptr addrspace(1) %0, i64 %28, !dbg !19
  %sext9 = add i64 %sext, 158329674399744, !dbg !19
  %30 = ashr exact i64 %sext9, 30, !dbg !19
  %31 = getelementptr i8, ptr addrspace(1) %0, i64 %30, !dbg !19
  %sext10 = add i64 %sext, 175921860444160, !dbg !19
  %32 = ashr exact i64 %sext10, 30, !dbg !19
  %33 = getelementptr i8, ptr addrspace(1) %0, i64 %32, !dbg !19
  %sext11 = add i64 %sext, 193514046488576, !dbg !19
  %34 = ashr exact i64 %sext11, 30, !dbg !19
  %35 = getelementptr i8, ptr addrspace(1) %0, i64 %34, !dbg !19
  %sext12 = add i64 %sext, 211106232532992, !dbg !19
  %36 = ashr exact i64 %sext12, 30, !dbg !19
  %37 = getelementptr i8, ptr addrspace(1) %0, i64 %36, !dbg !19
  %sext13 = add i64 %sext, 228698418577408, !dbg !19
  %38 = ashr exact i64 %sext13, 30, !dbg !19
  %39 = getelementptr i8, ptr addrspace(1) %0, i64 %38, !dbg !19
  %40 = load <1 x float>, ptr addrspace(1) %13, align 4, !dbg !20
  %41 = load <1 x float>, ptr addrspace(1) %15, align 4, !dbg !20
  %42 = load <1 x float>, ptr addrspace(1) %17, align 4, !dbg !20
  %43 = load <1 x float>, ptr addrspace(1) %19, align 4, !dbg !20
  %44 = load <1 x float>, ptr addrspace(1) %21, align 4, !dbg !20
  %45 = load <1 x float>, ptr addrspace(1) %23, align 4, !dbg !20
  %46 = load <1 x float>, ptr addrspace(1) %25, align 4, !dbg !20
  %47 = load <1 x float>, ptr addrspace(1) %27, align 4, !dbg !20
  %48 = load <1 x float>, ptr addrspace(1) %29, align 4, !dbg !20
  %49 = load <1 x float>, ptr addrspace(1) %31, align 4, !dbg !20
  %50 = load <1 x float>, ptr addrspace(1) %33, align 4, !dbg !20
  %51 = load <1 x float>, ptr addrspace(1) %35, align 4, !dbg !20
  %52 = load <1 x float>, ptr addrspace(1) %37, align 4, !dbg !20
  %53 = load <1 x float>, ptr addrspace(1) %39, align 4, !dbg !20
  %54 = sext i32 %11 to i64, !dbg !21
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !21
  %56 = load float, ptr addrspace(1) %55, align 4, !dbg !22
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !23
  %58 = getelementptr i8, ptr addrspace(1) %57, i64 128, !dbg !23
  %59 = getelementptr i8, ptr addrspace(1) %57, i64 256, !dbg !23
  %60 = getelementptr i8, ptr addrspace(1) %57, i64 384, !dbg !23
  %61 = getelementptr i8, ptr addrspace(1) %57, i64 512, !dbg !23
  %62 = getelementptr i8, ptr addrspace(1) %57, i64 640, !dbg !23
  %63 = getelementptr i8, ptr addrspace(1) %57, i64 768, !dbg !23
  %64 = getelementptr i8, ptr addrspace(1) %57, i64 896, !dbg !23
  %65 = getelementptr i8, ptr addrspace(1) %57, i64 1024, !dbg !23
  %66 = getelementptr i8, ptr addrspace(1) %57, i64 1152, !dbg !23
  %67 = getelementptr i8, ptr addrspace(1) %57, i64 1280, !dbg !23
  %68 = getelementptr i8, ptr addrspace(1) %57, i64 1408, !dbg !23
  %69 = getelementptr i8, ptr addrspace(1) %57, i64 1536, !dbg !23
  %70 = getelementptr i8, ptr addrspace(1) %57, i64 1664, !dbg !23
  %71 = load float, ptr addrspace(1) %57, align 4, !dbg !24
  %72 = load float, ptr addrspace(1) %58, align 4, !dbg !24
  %73 = load float, ptr addrspace(1) %59, align 4, !dbg !24
  %74 = load float, ptr addrspace(1) %60, align 4, !dbg !24
  %75 = load float, ptr addrspace(1) %61, align 4, !dbg !24
  %76 = load float, ptr addrspace(1) %62, align 4, !dbg !24
  %77 = load float, ptr addrspace(1) %63, align 4, !dbg !24
  %78 = load float, ptr addrspace(1) %64, align 4, !dbg !24
  %79 = load float, ptr addrspace(1) %65, align 4, !dbg !24
  %80 = load float, ptr addrspace(1) %66, align 4, !dbg !24
  %81 = load float, ptr addrspace(1) %67, align 4, !dbg !24
  %82 = load float, ptr addrspace(1) %68, align 4, !dbg !24
  %83 = load float, ptr addrspace(1) %69, align 4, !dbg !24
  %84 = load float, ptr addrspace(1) %70, align 4, !dbg !24
  %85 = getelementptr float, ptr addrspace(1) %3, i64 %54, !dbg !25
  %86 = load <1 x float>, ptr addrspace(1) %85, align 4, !dbg !26
  %87 = fcmp oeq float %56, 0xFFF0000000000000, !dbg !27
  %88 = fsub float %71, %56, !dbg !28
  %89 = fsub float %72, %56, !dbg !28
  %90 = fsub float %73, %56, !dbg !28
  %91 = fsub float %74, %56, !dbg !28
  %92 = fsub float %75, %56, !dbg !28
  %93 = fsub float %76, %56, !dbg !28
  %94 = fsub float %77, %56, !dbg !28
  %95 = fsub float %78, %56, !dbg !28
  %96 = fsub float %79, %56, !dbg !28
  %97 = fsub float %80, %56, !dbg !28
  %98 = fsub float %81, %56, !dbg !28
  %99 = fsub float %82, %56, !dbg !28
  %100 = fsub float %83, %56, !dbg !28
  %101 = fsub float %84, %56, !dbg !28
  %102 = select i1 %87, float 0.000000e+00, float %88, !dbg !29
  %103 = select i1 %87, float 0.000000e+00, float %89, !dbg !29
  %104 = select i1 %87, float 0.000000e+00, float %90, !dbg !29
  %105 = select i1 %87, float 0.000000e+00, float %91, !dbg !29
  %106 = select i1 %87, float 0.000000e+00, float %92, !dbg !29
  %107 = select i1 %87, float 0.000000e+00, float %93, !dbg !29
  %108 = select i1 %87, float 0.000000e+00, float %94, !dbg !29
  %109 = select i1 %87, float 0.000000e+00, float %95, !dbg !29
  %110 = select i1 %87, float 0.000000e+00, float %96, !dbg !29
  %111 = select i1 %87, float 0.000000e+00, float %97, !dbg !29
  %112 = select i1 %87, float 0.000000e+00, float %98, !dbg !29
  %113 = select i1 %87, float 0.000000e+00, float %99, !dbg !29
  %114 = select i1 %87, float 0.000000e+00, float %100, !dbg !29
  %115 = select i1 %87, float 0.000000e+00, float %101, !dbg !29
  %116 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %102) #5, !dbg !30
  %117 = fsub float %102, %116, !dbg !30
  %118 = fptosi float %116 to i32, !dbg !30
  %119 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %117, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %120 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %117, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %121 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %119, float noundef %117, float noundef 0x3F83B29960000000) #5, !dbg !30
  %122 = fadd float %120, -1.000000e+00, !dbg !30
  %123 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %121, float noundef %117, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %124 = fneg float %122, !dbg !30
  %125 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %117, float noundef 5.000000e-01, float noundef %124) #5, !dbg !30
  %126 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %123, float noundef %117, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %127 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %126, float noundef %117, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %128 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %127, float noundef %117, float noundef %125) #5, !dbg !30
  %129 = fadd float %120, %128, !dbg !30
  %130 = add i32 %118, -127, !dbg !30
  %131 = icmp ult i32 %130, -252, !dbg !30
  br i1 %131, label %137, label %132, !dbg !30

132:                                              ; preds = %8
  %133 = bitcast float %129 to i32, !dbg !30
  %134 = shl nsw i32 %118, 23, !dbg !30
  %135 = add i32 %134, %133, !dbg !30
  %136 = bitcast i32 %135 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit29, !dbg !30

137:                                              ; preds = %8
  %138 = tail call float @llvm.fabs.f32(float %102), !dbg !30
  %139 = bitcast float %138 to i32, !dbg !30
  %140 = icmp samesign ugt i32 %139, 2139095039, !dbg !30
  br i1 %140, label %141, label %145, !dbg !30

141:                                              ; preds = %137
  %142 = fcmp oeq float %102, 0xFFF0000000000000, !dbg !30
  %143 = fadd float %102, %102, !dbg !30
  %144 = select i1 %142, float 0.000000e+00, float %143, !dbg !30
  br label %__devicelib_imf_exp2f.exit29, !dbg !30

145:                                              ; preds = %137
  %146 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %102, float noundef 1.920000e+02) #5, !dbg !30
  %147 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %146, float noundef -1.920000e+02) #5, !dbg !30
  %148 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %147) #5, !dbg !30
  %149 = fptosi float %148 to i32, !dbg !30
  %150 = ashr i32 %149, 1, !dbg !30
  %151 = sub nsw i32 %149, %150, !dbg !30
  %152 = shl i32 %151, 23, !dbg !30
  %153 = add i32 %152, 1065353216, !dbg !30
  %154 = shl i32 %150, 23, !dbg !30
  %155 = add i32 %154, 1065353216, !dbg !30
  %156 = bitcast i32 %153 to float, !dbg !30
  %157 = fmul float %129, %156, !dbg !30
  %158 = bitcast i32 %155 to float, !dbg !30
  %159 = fmul float %157, %158, !dbg !30
  br label %__devicelib_imf_exp2f.exit29, !dbg !30

__devicelib_imf_exp2f.exit29:                     ; preds = %132, %141, %145
  %160 = phi float [ %159, %145 ], [ %136, %132 ], [ %144, %141 ], !dbg !30
  %161 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %103) #5, !dbg !30
  %162 = fsub float %103, %161, !dbg !30
  %163 = fptosi float %161 to i32, !dbg !30
  %164 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %162, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %165 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %162, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %166 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %164, float noundef %162, float noundef 0x3F83B29960000000) #5, !dbg !30
  %167 = fadd float %165, -1.000000e+00, !dbg !30
  %168 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %166, float noundef %162, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %169 = fneg float %167, !dbg !30
  %170 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %162, float noundef 5.000000e-01, float noundef %169) #5, !dbg !30
  %171 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %168, float noundef %162, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %172 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %171, float noundef %162, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %173 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %172, float noundef %162, float noundef %170) #5, !dbg !30
  %174 = fadd float %165, %173, !dbg !30
  %175 = add i32 %163, -127, !dbg !30
  %176 = icmp ult i32 %175, -252, !dbg !30
  br i1 %176, label %182, label %177, !dbg !30

177:                                              ; preds = %__devicelib_imf_exp2f.exit29
  %178 = bitcast float %174 to i32, !dbg !30
  %179 = shl nsw i32 %163, 23, !dbg !30
  %180 = add i32 %179, %178, !dbg !30
  %181 = bitcast i32 %180 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit28, !dbg !30

182:                                              ; preds = %__devicelib_imf_exp2f.exit29
  %183 = tail call float @llvm.fabs.f32(float %103), !dbg !30
  %184 = bitcast float %183 to i32, !dbg !30
  %185 = icmp samesign ugt i32 %184, 2139095039, !dbg !30
  br i1 %185, label %186, label %190, !dbg !30

186:                                              ; preds = %182
  %187 = fcmp oeq float %103, 0xFFF0000000000000, !dbg !30
  %188 = fadd float %103, %103, !dbg !30
  %189 = select i1 %187, float 0.000000e+00, float %188, !dbg !30
  br label %__devicelib_imf_exp2f.exit28, !dbg !30

190:                                              ; preds = %182
  %191 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %103, float noundef 1.920000e+02) #5, !dbg !30
  %192 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %191, float noundef -1.920000e+02) #5, !dbg !30
  %193 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %192) #5, !dbg !30
  %194 = fptosi float %193 to i32, !dbg !30
  %195 = ashr i32 %194, 1, !dbg !30
  %196 = sub nsw i32 %194, %195, !dbg !30
  %197 = shl i32 %196, 23, !dbg !30
  %198 = add i32 %197, 1065353216, !dbg !30
  %199 = shl i32 %195, 23, !dbg !30
  %200 = add i32 %199, 1065353216, !dbg !30
  %201 = bitcast i32 %198 to float, !dbg !30
  %202 = fmul float %174, %201, !dbg !30
  %203 = bitcast i32 %200 to float, !dbg !30
  %204 = fmul float %202, %203, !dbg !30
  br label %__devicelib_imf_exp2f.exit28, !dbg !30

__devicelib_imf_exp2f.exit28:                     ; preds = %177, %186, %190
  %205 = phi float [ %204, %190 ], [ %181, %177 ], [ %189, %186 ], !dbg !30
  %206 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %104) #5, !dbg !30
  %207 = fsub float %104, %206, !dbg !30
  %208 = fptosi float %206 to i32, !dbg !30
  %209 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %207, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %210 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %207, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %211 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %209, float noundef %207, float noundef 0x3F83B29960000000) #5, !dbg !30
  %212 = fadd float %210, -1.000000e+00, !dbg !30
  %213 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %211, float noundef %207, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %214 = fneg float %212, !dbg !30
  %215 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %207, float noundef 5.000000e-01, float noundef %214) #5, !dbg !30
  %216 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %213, float noundef %207, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %217 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %216, float noundef %207, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %218 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %217, float noundef %207, float noundef %215) #5, !dbg !30
  %219 = fadd float %210, %218, !dbg !30
  %220 = add i32 %208, -127, !dbg !30
  %221 = icmp ult i32 %220, -252, !dbg !30
  br i1 %221, label %227, label %222, !dbg !30

222:                                              ; preds = %__devicelib_imf_exp2f.exit28
  %223 = bitcast float %219 to i32, !dbg !30
  %224 = shl nsw i32 %208, 23, !dbg !30
  %225 = add i32 %224, %223, !dbg !30
  %226 = bitcast i32 %225 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit27, !dbg !30

227:                                              ; preds = %__devicelib_imf_exp2f.exit28
  %228 = tail call float @llvm.fabs.f32(float %104), !dbg !30
  %229 = bitcast float %228 to i32, !dbg !30
  %230 = icmp samesign ugt i32 %229, 2139095039, !dbg !30
  br i1 %230, label %231, label %235, !dbg !30

231:                                              ; preds = %227
  %232 = fcmp oeq float %104, 0xFFF0000000000000, !dbg !30
  %233 = fadd float %104, %104, !dbg !30
  %234 = select i1 %232, float 0.000000e+00, float %233, !dbg !30
  br label %__devicelib_imf_exp2f.exit27, !dbg !30

235:                                              ; preds = %227
  %236 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %104, float noundef 1.920000e+02) #5, !dbg !30
  %237 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %236, float noundef -1.920000e+02) #5, !dbg !30
  %238 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %237) #5, !dbg !30
  %239 = fptosi float %238 to i32, !dbg !30
  %240 = ashr i32 %239, 1, !dbg !30
  %241 = sub nsw i32 %239, %240, !dbg !30
  %242 = shl i32 %241, 23, !dbg !30
  %243 = add i32 %242, 1065353216, !dbg !30
  %244 = shl i32 %240, 23, !dbg !30
  %245 = add i32 %244, 1065353216, !dbg !30
  %246 = bitcast i32 %243 to float, !dbg !30
  %247 = fmul float %219, %246, !dbg !30
  %248 = bitcast i32 %245 to float, !dbg !30
  %249 = fmul float %247, %248, !dbg !30
  br label %__devicelib_imf_exp2f.exit27, !dbg !30

__devicelib_imf_exp2f.exit27:                     ; preds = %222, %231, %235
  %250 = phi float [ %249, %235 ], [ %226, %222 ], [ %234, %231 ], !dbg !30
  %251 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %105) #5, !dbg !30
  %252 = fsub float %105, %251, !dbg !30
  %253 = fptosi float %251 to i32, !dbg !30
  %254 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %252, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %255 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %252, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %256 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %254, float noundef %252, float noundef 0x3F83B29960000000) #5, !dbg !30
  %257 = fadd float %255, -1.000000e+00, !dbg !30
  %258 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %256, float noundef %252, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %259 = fneg float %257, !dbg !30
  %260 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %252, float noundef 5.000000e-01, float noundef %259) #5, !dbg !30
  %261 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %258, float noundef %252, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %262 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %261, float noundef %252, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %263 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %262, float noundef %252, float noundef %260) #5, !dbg !30
  %264 = fadd float %255, %263, !dbg !30
  %265 = add i32 %253, -127, !dbg !30
  %266 = icmp ult i32 %265, -252, !dbg !30
  br i1 %266, label %272, label %267, !dbg !30

267:                                              ; preds = %__devicelib_imf_exp2f.exit27
  %268 = bitcast float %264 to i32, !dbg !30
  %269 = shl nsw i32 %253, 23, !dbg !30
  %270 = add i32 %269, %268, !dbg !30
  %271 = bitcast i32 %270 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit26, !dbg !30

272:                                              ; preds = %__devicelib_imf_exp2f.exit27
  %273 = tail call float @llvm.fabs.f32(float %105), !dbg !30
  %274 = bitcast float %273 to i32, !dbg !30
  %275 = icmp samesign ugt i32 %274, 2139095039, !dbg !30
  br i1 %275, label %276, label %280, !dbg !30

276:                                              ; preds = %272
  %277 = fcmp oeq float %105, 0xFFF0000000000000, !dbg !30
  %278 = fadd float %105, %105, !dbg !30
  %279 = select i1 %277, float 0.000000e+00, float %278, !dbg !30
  br label %__devicelib_imf_exp2f.exit26, !dbg !30

280:                                              ; preds = %272
  %281 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %105, float noundef 1.920000e+02) #5, !dbg !30
  %282 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %281, float noundef -1.920000e+02) #5, !dbg !30
  %283 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %282) #5, !dbg !30
  %284 = fptosi float %283 to i32, !dbg !30
  %285 = ashr i32 %284, 1, !dbg !30
  %286 = sub nsw i32 %284, %285, !dbg !30
  %287 = shl i32 %286, 23, !dbg !30
  %288 = add i32 %287, 1065353216, !dbg !30
  %289 = shl i32 %285, 23, !dbg !30
  %290 = add i32 %289, 1065353216, !dbg !30
  %291 = bitcast i32 %288 to float, !dbg !30
  %292 = fmul float %264, %291, !dbg !30
  %293 = bitcast i32 %290 to float, !dbg !30
  %294 = fmul float %292, %293, !dbg !30
  br label %__devicelib_imf_exp2f.exit26, !dbg !30

__devicelib_imf_exp2f.exit26:                     ; preds = %267, %276, %280
  %295 = phi float [ %294, %280 ], [ %271, %267 ], [ %279, %276 ], !dbg !30
  %296 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %106) #5, !dbg !30
  %297 = fsub float %106, %296, !dbg !30
  %298 = fptosi float %296 to i32, !dbg !30
  %299 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %297, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %300 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %297, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %301 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %299, float noundef %297, float noundef 0x3F83B29960000000) #5, !dbg !30
  %302 = fadd float %300, -1.000000e+00, !dbg !30
  %303 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %301, float noundef %297, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %304 = fneg float %302, !dbg !30
  %305 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %297, float noundef 5.000000e-01, float noundef %304) #5, !dbg !30
  %306 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %303, float noundef %297, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %307 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %306, float noundef %297, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %308 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %307, float noundef %297, float noundef %305) #5, !dbg !30
  %309 = fadd float %300, %308, !dbg !30
  %310 = add i32 %298, -127, !dbg !30
  %311 = icmp ult i32 %310, -252, !dbg !30
  br i1 %311, label %317, label %312, !dbg !30

312:                                              ; preds = %__devicelib_imf_exp2f.exit26
  %313 = bitcast float %309 to i32, !dbg !30
  %314 = shl nsw i32 %298, 23, !dbg !30
  %315 = add i32 %314, %313, !dbg !30
  %316 = bitcast i32 %315 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit25, !dbg !30

317:                                              ; preds = %__devicelib_imf_exp2f.exit26
  %318 = tail call float @llvm.fabs.f32(float %106), !dbg !30
  %319 = bitcast float %318 to i32, !dbg !30
  %320 = icmp samesign ugt i32 %319, 2139095039, !dbg !30
  br i1 %320, label %321, label %325, !dbg !30

321:                                              ; preds = %317
  %322 = fcmp oeq float %106, 0xFFF0000000000000, !dbg !30
  %323 = fadd float %106, %106, !dbg !30
  %324 = select i1 %322, float 0.000000e+00, float %323, !dbg !30
  br label %__devicelib_imf_exp2f.exit25, !dbg !30

325:                                              ; preds = %317
  %326 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %106, float noundef 1.920000e+02) #5, !dbg !30
  %327 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %326, float noundef -1.920000e+02) #5, !dbg !30
  %328 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %327) #5, !dbg !30
  %329 = fptosi float %328 to i32, !dbg !30
  %330 = ashr i32 %329, 1, !dbg !30
  %331 = sub nsw i32 %329, %330, !dbg !30
  %332 = shl i32 %331, 23, !dbg !30
  %333 = add i32 %332, 1065353216, !dbg !30
  %334 = shl i32 %330, 23, !dbg !30
  %335 = add i32 %334, 1065353216, !dbg !30
  %336 = bitcast i32 %333 to float, !dbg !30
  %337 = fmul float %309, %336, !dbg !30
  %338 = bitcast i32 %335 to float, !dbg !30
  %339 = fmul float %337, %338, !dbg !30
  br label %__devicelib_imf_exp2f.exit25, !dbg !30

__devicelib_imf_exp2f.exit25:                     ; preds = %312, %321, %325
  %340 = phi float [ %339, %325 ], [ %316, %312 ], [ %324, %321 ], !dbg !30
  %341 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %107) #5, !dbg !30
  %342 = fsub float %107, %341, !dbg !30
  %343 = fptosi float %341 to i32, !dbg !30
  %344 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %342, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %345 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %342, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %346 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %344, float noundef %342, float noundef 0x3F83B29960000000) #5, !dbg !30
  %347 = fadd float %345, -1.000000e+00, !dbg !30
  %348 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %346, float noundef %342, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %349 = fneg float %347, !dbg !30
  %350 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %342, float noundef 5.000000e-01, float noundef %349) #5, !dbg !30
  %351 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %348, float noundef %342, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %352 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %351, float noundef %342, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %353 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %352, float noundef %342, float noundef %350) #5, !dbg !30
  %354 = fadd float %345, %353, !dbg !30
  %355 = add i32 %343, -127, !dbg !30
  %356 = icmp ult i32 %355, -252, !dbg !30
  br i1 %356, label %362, label %357, !dbg !30

357:                                              ; preds = %__devicelib_imf_exp2f.exit25
  %358 = bitcast float %354 to i32, !dbg !30
  %359 = shl nsw i32 %343, 23, !dbg !30
  %360 = add i32 %359, %358, !dbg !30
  %361 = bitcast i32 %360 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit24, !dbg !30

362:                                              ; preds = %__devicelib_imf_exp2f.exit25
  %363 = tail call float @llvm.fabs.f32(float %107), !dbg !30
  %364 = bitcast float %363 to i32, !dbg !30
  %365 = icmp samesign ugt i32 %364, 2139095039, !dbg !30
  br i1 %365, label %366, label %370, !dbg !30

366:                                              ; preds = %362
  %367 = fcmp oeq float %107, 0xFFF0000000000000, !dbg !30
  %368 = fadd float %107, %107, !dbg !30
  %369 = select i1 %367, float 0.000000e+00, float %368, !dbg !30
  br label %__devicelib_imf_exp2f.exit24, !dbg !30

370:                                              ; preds = %362
  %371 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %107, float noundef 1.920000e+02) #5, !dbg !30
  %372 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %371, float noundef -1.920000e+02) #5, !dbg !30
  %373 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %372) #5, !dbg !30
  %374 = fptosi float %373 to i32, !dbg !30
  %375 = ashr i32 %374, 1, !dbg !30
  %376 = sub nsw i32 %374, %375, !dbg !30
  %377 = shl i32 %376, 23, !dbg !30
  %378 = add i32 %377, 1065353216, !dbg !30
  %379 = shl i32 %375, 23, !dbg !30
  %380 = add i32 %379, 1065353216, !dbg !30
  %381 = bitcast i32 %378 to float, !dbg !30
  %382 = fmul float %354, %381, !dbg !30
  %383 = bitcast i32 %380 to float, !dbg !30
  %384 = fmul float %382, %383, !dbg !30
  br label %__devicelib_imf_exp2f.exit24, !dbg !30

__devicelib_imf_exp2f.exit24:                     ; preds = %357, %366, %370
  %385 = phi float [ %384, %370 ], [ %361, %357 ], [ %369, %366 ], !dbg !30
  %386 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %108) #5, !dbg !30
  %387 = fsub float %108, %386, !dbg !30
  %388 = fptosi float %386 to i32, !dbg !30
  %389 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %387, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %390 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %387, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %391 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %389, float noundef %387, float noundef 0x3F83B29960000000) #5, !dbg !30
  %392 = fadd float %390, -1.000000e+00, !dbg !30
  %393 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %391, float noundef %387, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %394 = fneg float %392, !dbg !30
  %395 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %387, float noundef 5.000000e-01, float noundef %394) #5, !dbg !30
  %396 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %393, float noundef %387, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %397 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %396, float noundef %387, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %398 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %397, float noundef %387, float noundef %395) #5, !dbg !30
  %399 = fadd float %390, %398, !dbg !30
  %400 = add i32 %388, -127, !dbg !30
  %401 = icmp ult i32 %400, -252, !dbg !30
  br i1 %401, label %407, label %402, !dbg !30

402:                                              ; preds = %__devicelib_imf_exp2f.exit24
  %403 = bitcast float %399 to i32, !dbg !30
  %404 = shl nsw i32 %388, 23, !dbg !30
  %405 = add i32 %404, %403, !dbg !30
  %406 = bitcast i32 %405 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit23, !dbg !30

407:                                              ; preds = %__devicelib_imf_exp2f.exit24
  %408 = tail call float @llvm.fabs.f32(float %108), !dbg !30
  %409 = bitcast float %408 to i32, !dbg !30
  %410 = icmp samesign ugt i32 %409, 2139095039, !dbg !30
  br i1 %410, label %411, label %415, !dbg !30

411:                                              ; preds = %407
  %412 = fcmp oeq float %108, 0xFFF0000000000000, !dbg !30
  %413 = fadd float %108, %108, !dbg !30
  %414 = select i1 %412, float 0.000000e+00, float %413, !dbg !30
  br label %__devicelib_imf_exp2f.exit23, !dbg !30

415:                                              ; preds = %407
  %416 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %108, float noundef 1.920000e+02) #5, !dbg !30
  %417 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %416, float noundef -1.920000e+02) #5, !dbg !30
  %418 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %417) #5, !dbg !30
  %419 = fptosi float %418 to i32, !dbg !30
  %420 = ashr i32 %419, 1, !dbg !30
  %421 = sub nsw i32 %419, %420, !dbg !30
  %422 = shl i32 %421, 23, !dbg !30
  %423 = add i32 %422, 1065353216, !dbg !30
  %424 = shl i32 %420, 23, !dbg !30
  %425 = add i32 %424, 1065353216, !dbg !30
  %426 = bitcast i32 %423 to float, !dbg !30
  %427 = fmul float %399, %426, !dbg !30
  %428 = bitcast i32 %425 to float, !dbg !30
  %429 = fmul float %427, %428, !dbg !30
  br label %__devicelib_imf_exp2f.exit23, !dbg !30

__devicelib_imf_exp2f.exit23:                     ; preds = %402, %411, %415
  %430 = phi float [ %429, %415 ], [ %406, %402 ], [ %414, %411 ], !dbg !30
  %431 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %109) #5, !dbg !30
  %432 = fsub float %109, %431, !dbg !30
  %433 = fptosi float %431 to i32, !dbg !30
  %434 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %432, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %435 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %432, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %436 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %434, float noundef %432, float noundef 0x3F83B29960000000) #5, !dbg !30
  %437 = fadd float %435, -1.000000e+00, !dbg !30
  %438 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %436, float noundef %432, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %439 = fneg float %437, !dbg !30
  %440 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %432, float noundef 5.000000e-01, float noundef %439) #5, !dbg !30
  %441 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %438, float noundef %432, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %442 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %441, float noundef %432, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %443 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %442, float noundef %432, float noundef %440) #5, !dbg !30
  %444 = fadd float %435, %443, !dbg !30
  %445 = add i32 %433, -127, !dbg !30
  %446 = icmp ult i32 %445, -252, !dbg !30
  br i1 %446, label %452, label %447, !dbg !30

447:                                              ; preds = %__devicelib_imf_exp2f.exit23
  %448 = bitcast float %444 to i32, !dbg !30
  %449 = shl nsw i32 %433, 23, !dbg !30
  %450 = add i32 %449, %448, !dbg !30
  %451 = bitcast i32 %450 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit22, !dbg !30

452:                                              ; preds = %__devicelib_imf_exp2f.exit23
  %453 = tail call float @llvm.fabs.f32(float %109), !dbg !30
  %454 = bitcast float %453 to i32, !dbg !30
  %455 = icmp samesign ugt i32 %454, 2139095039, !dbg !30
  br i1 %455, label %456, label %460, !dbg !30

456:                                              ; preds = %452
  %457 = fcmp oeq float %109, 0xFFF0000000000000, !dbg !30
  %458 = fadd float %109, %109, !dbg !30
  %459 = select i1 %457, float 0.000000e+00, float %458, !dbg !30
  br label %__devicelib_imf_exp2f.exit22, !dbg !30

460:                                              ; preds = %452
  %461 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %109, float noundef 1.920000e+02) #5, !dbg !30
  %462 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %461, float noundef -1.920000e+02) #5, !dbg !30
  %463 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %462) #5, !dbg !30
  %464 = fptosi float %463 to i32, !dbg !30
  %465 = ashr i32 %464, 1, !dbg !30
  %466 = sub nsw i32 %464, %465, !dbg !30
  %467 = shl i32 %466, 23, !dbg !30
  %468 = add i32 %467, 1065353216, !dbg !30
  %469 = shl i32 %465, 23, !dbg !30
  %470 = add i32 %469, 1065353216, !dbg !30
  %471 = bitcast i32 %468 to float, !dbg !30
  %472 = fmul float %444, %471, !dbg !30
  %473 = bitcast i32 %470 to float, !dbg !30
  %474 = fmul float %472, %473, !dbg !30
  br label %__devicelib_imf_exp2f.exit22, !dbg !30

__devicelib_imf_exp2f.exit22:                     ; preds = %447, %456, %460
  %475 = phi float [ %474, %460 ], [ %451, %447 ], [ %459, %456 ], !dbg !30
  %476 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %110) #5, !dbg !30
  %477 = fsub float %110, %476, !dbg !30
  %478 = fptosi float %476 to i32, !dbg !30
  %479 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %477, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %480 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %477, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %481 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %479, float noundef %477, float noundef 0x3F83B29960000000) #5, !dbg !30
  %482 = fadd float %480, -1.000000e+00, !dbg !30
  %483 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %481, float noundef %477, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %484 = fneg float %482, !dbg !30
  %485 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %477, float noundef 5.000000e-01, float noundef %484) #5, !dbg !30
  %486 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %483, float noundef %477, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %487 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %486, float noundef %477, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %488 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %487, float noundef %477, float noundef %485) #5, !dbg !30
  %489 = fadd float %480, %488, !dbg !30
  %490 = add i32 %478, -127, !dbg !30
  %491 = icmp ult i32 %490, -252, !dbg !30
  br i1 %491, label %497, label %492, !dbg !30

492:                                              ; preds = %__devicelib_imf_exp2f.exit22
  %493 = bitcast float %489 to i32, !dbg !30
  %494 = shl nsw i32 %478, 23, !dbg !30
  %495 = add i32 %494, %493, !dbg !30
  %496 = bitcast i32 %495 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit21, !dbg !30

497:                                              ; preds = %__devicelib_imf_exp2f.exit22
  %498 = tail call float @llvm.fabs.f32(float %110), !dbg !30
  %499 = bitcast float %498 to i32, !dbg !30
  %500 = icmp samesign ugt i32 %499, 2139095039, !dbg !30
  br i1 %500, label %501, label %505, !dbg !30

501:                                              ; preds = %497
  %502 = fcmp oeq float %110, 0xFFF0000000000000, !dbg !30
  %503 = fadd float %110, %110, !dbg !30
  %504 = select i1 %502, float 0.000000e+00, float %503, !dbg !30
  br label %__devicelib_imf_exp2f.exit21, !dbg !30

505:                                              ; preds = %497
  %506 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %110, float noundef 1.920000e+02) #5, !dbg !30
  %507 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %506, float noundef -1.920000e+02) #5, !dbg !30
  %508 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %507) #5, !dbg !30
  %509 = fptosi float %508 to i32, !dbg !30
  %510 = ashr i32 %509, 1, !dbg !30
  %511 = sub nsw i32 %509, %510, !dbg !30
  %512 = shl i32 %511, 23, !dbg !30
  %513 = add i32 %512, 1065353216, !dbg !30
  %514 = shl i32 %510, 23, !dbg !30
  %515 = add i32 %514, 1065353216, !dbg !30
  %516 = bitcast i32 %513 to float, !dbg !30
  %517 = fmul float %489, %516, !dbg !30
  %518 = bitcast i32 %515 to float, !dbg !30
  %519 = fmul float %517, %518, !dbg !30
  br label %__devicelib_imf_exp2f.exit21, !dbg !30

__devicelib_imf_exp2f.exit21:                     ; preds = %492, %501, %505
  %520 = phi float [ %519, %505 ], [ %496, %492 ], [ %504, %501 ], !dbg !30
  %521 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %111) #5, !dbg !30
  %522 = fsub float %111, %521, !dbg !30
  %523 = fptosi float %521 to i32, !dbg !30
  %524 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %522, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %525 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %522, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %526 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %524, float noundef %522, float noundef 0x3F83B29960000000) #5, !dbg !30
  %527 = fadd float %525, -1.000000e+00, !dbg !30
  %528 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %526, float noundef %522, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %529 = fneg float %527, !dbg !30
  %530 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %522, float noundef 5.000000e-01, float noundef %529) #5, !dbg !30
  %531 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %528, float noundef %522, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %532 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %531, float noundef %522, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %533 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %532, float noundef %522, float noundef %530) #5, !dbg !30
  %534 = fadd float %525, %533, !dbg !30
  %535 = add i32 %523, -127, !dbg !30
  %536 = icmp ult i32 %535, -252, !dbg !30
  br i1 %536, label %542, label %537, !dbg !30

537:                                              ; preds = %__devicelib_imf_exp2f.exit21
  %538 = bitcast float %534 to i32, !dbg !30
  %539 = shl nsw i32 %523, 23, !dbg !30
  %540 = add i32 %539, %538, !dbg !30
  %541 = bitcast i32 %540 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit20, !dbg !30

542:                                              ; preds = %__devicelib_imf_exp2f.exit21
  %543 = tail call float @llvm.fabs.f32(float %111), !dbg !30
  %544 = bitcast float %543 to i32, !dbg !30
  %545 = icmp samesign ugt i32 %544, 2139095039, !dbg !30
  br i1 %545, label %546, label %550, !dbg !30

546:                                              ; preds = %542
  %547 = fcmp oeq float %111, 0xFFF0000000000000, !dbg !30
  %548 = fadd float %111, %111, !dbg !30
  %549 = select i1 %547, float 0.000000e+00, float %548, !dbg !30
  br label %__devicelib_imf_exp2f.exit20, !dbg !30

550:                                              ; preds = %542
  %551 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %111, float noundef 1.920000e+02) #5, !dbg !30
  %552 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %551, float noundef -1.920000e+02) #5, !dbg !30
  %553 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %552) #5, !dbg !30
  %554 = fptosi float %553 to i32, !dbg !30
  %555 = ashr i32 %554, 1, !dbg !30
  %556 = sub nsw i32 %554, %555, !dbg !30
  %557 = shl i32 %556, 23, !dbg !30
  %558 = add i32 %557, 1065353216, !dbg !30
  %559 = shl i32 %555, 23, !dbg !30
  %560 = add i32 %559, 1065353216, !dbg !30
  %561 = bitcast i32 %558 to float, !dbg !30
  %562 = fmul float %534, %561, !dbg !30
  %563 = bitcast i32 %560 to float, !dbg !30
  %564 = fmul float %562, %563, !dbg !30
  br label %__devicelib_imf_exp2f.exit20, !dbg !30

__devicelib_imf_exp2f.exit20:                     ; preds = %537, %546, %550
  %565 = phi float [ %564, %550 ], [ %541, %537 ], [ %549, %546 ], !dbg !30
  %566 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %112) #5, !dbg !30
  %567 = fsub float %112, %566, !dbg !30
  %568 = fptosi float %566 to i32, !dbg !30
  %569 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %567, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %570 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %567, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %571 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %569, float noundef %567, float noundef 0x3F83B29960000000) #5, !dbg !30
  %572 = fadd float %570, -1.000000e+00, !dbg !30
  %573 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %571, float noundef %567, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %574 = fneg float %572, !dbg !30
  %575 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %567, float noundef 5.000000e-01, float noundef %574) #5, !dbg !30
  %576 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %573, float noundef %567, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %577 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %576, float noundef %567, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %578 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %577, float noundef %567, float noundef %575) #5, !dbg !30
  %579 = fadd float %570, %578, !dbg !30
  %580 = add i32 %568, -127, !dbg !30
  %581 = icmp ult i32 %580, -252, !dbg !30
  br i1 %581, label %587, label %582, !dbg !30

582:                                              ; preds = %__devicelib_imf_exp2f.exit20
  %583 = bitcast float %579 to i32, !dbg !30
  %584 = shl nsw i32 %568, 23, !dbg !30
  %585 = add i32 %584, %583, !dbg !30
  %586 = bitcast i32 %585 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit19, !dbg !30

587:                                              ; preds = %__devicelib_imf_exp2f.exit20
  %588 = tail call float @llvm.fabs.f32(float %112), !dbg !30
  %589 = bitcast float %588 to i32, !dbg !30
  %590 = icmp samesign ugt i32 %589, 2139095039, !dbg !30
  br i1 %590, label %591, label %595, !dbg !30

591:                                              ; preds = %587
  %592 = fcmp oeq float %112, 0xFFF0000000000000, !dbg !30
  %593 = fadd float %112, %112, !dbg !30
  %594 = select i1 %592, float 0.000000e+00, float %593, !dbg !30
  br label %__devicelib_imf_exp2f.exit19, !dbg !30

595:                                              ; preds = %587
  %596 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %112, float noundef 1.920000e+02) #5, !dbg !30
  %597 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %596, float noundef -1.920000e+02) #5, !dbg !30
  %598 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %597) #5, !dbg !30
  %599 = fptosi float %598 to i32, !dbg !30
  %600 = ashr i32 %599, 1, !dbg !30
  %601 = sub nsw i32 %599, %600, !dbg !30
  %602 = shl i32 %601, 23, !dbg !30
  %603 = add i32 %602, 1065353216, !dbg !30
  %604 = shl i32 %600, 23, !dbg !30
  %605 = add i32 %604, 1065353216, !dbg !30
  %606 = bitcast i32 %603 to float, !dbg !30
  %607 = fmul float %579, %606, !dbg !30
  %608 = bitcast i32 %605 to float, !dbg !30
  %609 = fmul float %607, %608, !dbg !30
  br label %__devicelib_imf_exp2f.exit19, !dbg !30

__devicelib_imf_exp2f.exit19:                     ; preds = %582, %591, %595
  %610 = phi float [ %609, %595 ], [ %586, %582 ], [ %594, %591 ], !dbg !30
  %611 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %113) #5, !dbg !30
  %612 = fsub float %113, %611, !dbg !30
  %613 = fptosi float %611 to i32, !dbg !30
  %614 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %612, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %615 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %612, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %616 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %614, float noundef %612, float noundef 0x3F83B29960000000) #5, !dbg !30
  %617 = fadd float %615, -1.000000e+00, !dbg !30
  %618 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %616, float noundef %612, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %619 = fneg float %617, !dbg !30
  %620 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %612, float noundef 5.000000e-01, float noundef %619) #5, !dbg !30
  %621 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %618, float noundef %612, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %622 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %621, float noundef %612, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %623 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %622, float noundef %612, float noundef %620) #5, !dbg !30
  %624 = fadd float %615, %623, !dbg !30
  %625 = add i32 %613, -127, !dbg !30
  %626 = icmp ult i32 %625, -252, !dbg !30
  br i1 %626, label %632, label %627, !dbg !30

627:                                              ; preds = %__devicelib_imf_exp2f.exit19
  %628 = bitcast float %624 to i32, !dbg !30
  %629 = shl nsw i32 %613, 23, !dbg !30
  %630 = add i32 %629, %628, !dbg !30
  %631 = bitcast i32 %630 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit18, !dbg !30

632:                                              ; preds = %__devicelib_imf_exp2f.exit19
  %633 = tail call float @llvm.fabs.f32(float %113), !dbg !30
  %634 = bitcast float %633 to i32, !dbg !30
  %635 = icmp samesign ugt i32 %634, 2139095039, !dbg !30
  br i1 %635, label %636, label %640, !dbg !30

636:                                              ; preds = %632
  %637 = fcmp oeq float %113, 0xFFF0000000000000, !dbg !30
  %638 = fadd float %113, %113, !dbg !30
  %639 = select i1 %637, float 0.000000e+00, float %638, !dbg !30
  br label %__devicelib_imf_exp2f.exit18, !dbg !30

640:                                              ; preds = %632
  %641 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %113, float noundef 1.920000e+02) #5, !dbg !30
  %642 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %641, float noundef -1.920000e+02) #5, !dbg !30
  %643 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %642) #5, !dbg !30
  %644 = fptosi float %643 to i32, !dbg !30
  %645 = ashr i32 %644, 1, !dbg !30
  %646 = sub nsw i32 %644, %645, !dbg !30
  %647 = shl i32 %646, 23, !dbg !30
  %648 = add i32 %647, 1065353216, !dbg !30
  %649 = shl i32 %645, 23, !dbg !30
  %650 = add i32 %649, 1065353216, !dbg !30
  %651 = bitcast i32 %648 to float, !dbg !30
  %652 = fmul float %624, %651, !dbg !30
  %653 = bitcast i32 %650 to float, !dbg !30
  %654 = fmul float %652, %653, !dbg !30
  br label %__devicelib_imf_exp2f.exit18, !dbg !30

__devicelib_imf_exp2f.exit18:                     ; preds = %627, %636, %640
  %655 = phi float [ %654, %640 ], [ %631, %627 ], [ %639, %636 ], !dbg !30
  %656 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %114) #5, !dbg !30
  %657 = fsub float %114, %656, !dbg !30
  %658 = fptosi float %656 to i32, !dbg !30
  %659 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %657, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %660 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %657, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %661 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %659, float noundef %657, float noundef 0x3F83B29960000000) #5, !dbg !30
  %662 = fadd float %660, -1.000000e+00, !dbg !30
  %663 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %661, float noundef %657, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %664 = fneg float %662, !dbg !30
  %665 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %657, float noundef 5.000000e-01, float noundef %664) #5, !dbg !30
  %666 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %663, float noundef %657, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %667 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %666, float noundef %657, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %668 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %667, float noundef %657, float noundef %665) #5, !dbg !30
  %669 = fadd float %660, %668, !dbg !30
  %670 = add i32 %658, -127, !dbg !30
  %671 = icmp ult i32 %670, -252, !dbg !30
  br i1 %671, label %677, label %672, !dbg !30

672:                                              ; preds = %__devicelib_imf_exp2f.exit18
  %673 = bitcast float %669 to i32, !dbg !30
  %674 = shl nsw i32 %658, 23, !dbg !30
  %675 = add i32 %674, %673, !dbg !30
  %676 = bitcast i32 %675 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit17, !dbg !30

677:                                              ; preds = %__devicelib_imf_exp2f.exit18
  %678 = tail call float @llvm.fabs.f32(float %114), !dbg !30
  %679 = bitcast float %678 to i32, !dbg !30
  %680 = icmp samesign ugt i32 %679, 2139095039, !dbg !30
  br i1 %680, label %681, label %685, !dbg !30

681:                                              ; preds = %677
  %682 = fcmp oeq float %114, 0xFFF0000000000000, !dbg !30
  %683 = fadd float %114, %114, !dbg !30
  %684 = select i1 %682, float 0.000000e+00, float %683, !dbg !30
  br label %__devicelib_imf_exp2f.exit17, !dbg !30

685:                                              ; preds = %677
  %686 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %114, float noundef 1.920000e+02) #5, !dbg !30
  %687 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %686, float noundef -1.920000e+02) #5, !dbg !30
  %688 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %687) #5, !dbg !30
  %689 = fptosi float %688 to i32, !dbg !30
  %690 = ashr i32 %689, 1, !dbg !30
  %691 = sub nsw i32 %689, %690, !dbg !30
  %692 = shl i32 %691, 23, !dbg !30
  %693 = add i32 %692, 1065353216, !dbg !30
  %694 = shl i32 %690, 23, !dbg !30
  %695 = add i32 %694, 1065353216, !dbg !30
  %696 = bitcast i32 %693 to float, !dbg !30
  %697 = fmul float %669, %696, !dbg !30
  %698 = bitcast i32 %695 to float, !dbg !30
  %699 = fmul float %697, %698, !dbg !30
  br label %__devicelib_imf_exp2f.exit17, !dbg !30

__devicelib_imf_exp2f.exit17:                     ; preds = %672, %681, %685
  %700 = phi float [ %699, %685 ], [ %676, %672 ], [ %684, %681 ], !dbg !30
  %701 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %115) #5, !dbg !30
  %702 = fsub float %115, %701, !dbg !30
  %703 = fptosi float %701 to i32, !dbg !30
  %704 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %702, float noundef 0x3F55F48C60000000) #5, !dbg !30
  %705 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %702, float noundef 5.000000e-01, float noundef 1.000000e+00) #5, !dbg !30
  %706 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %704, float noundef %702, float noundef 0x3F83B29960000000) #5, !dbg !30
  %707 = fadd float %705, -1.000000e+00, !dbg !30
  %708 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %706, float noundef %702, float noundef 0x3FAC6AECC0000000) #5, !dbg !30
  %709 = fneg float %707, !dbg !30
  %710 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %702, float noundef 5.000000e-01, float noundef %709) #5, !dbg !30
  %711 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %708, float noundef %702, float noundef 0x3FCEBFBE20000000) #5, !dbg !30
  %712 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %711, float noundef %702, float noundef 0x3FC8B90C40000000) #5, !dbg !30
  %713 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %712, float noundef %702, float noundef %710) #5, !dbg !30
  %714 = fadd float %705, %713, !dbg !30
  %715 = add i32 %703, -127, !dbg !30
  %716 = icmp ult i32 %715, -252, !dbg !30
  br i1 %716, label %722, label %717, !dbg !30

717:                                              ; preds = %__devicelib_imf_exp2f.exit17
  %718 = bitcast float %714 to i32, !dbg !30
  %719 = shl nsw i32 %703, 23, !dbg !30
  %720 = add i32 %719, %718, !dbg !30
  %721 = bitcast i32 %720 to float, !dbg !30
  br label %__devicelib_imf_exp2f.exit16, !dbg !30

722:                                              ; preds = %__devicelib_imf_exp2f.exit17
  %723 = tail call float @llvm.fabs.f32(float %115), !dbg !30
  %724 = bitcast float %723 to i32, !dbg !30
  %725 = icmp samesign ugt i32 %724, 2139095039, !dbg !30
  br i1 %725, label %726, label %730, !dbg !30

726:                                              ; preds = %722
  %727 = fcmp oeq float %115, 0xFFF0000000000000, !dbg !30
  %728 = fadd float %115, %115, !dbg !30
  %729 = select i1 %727, float 0.000000e+00, float %728, !dbg !30
  br label %__devicelib_imf_exp2f.exit16, !dbg !30

730:                                              ; preds = %722
  %731 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %115, float noundef 1.920000e+02) #5, !dbg !30
  %732 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %731, float noundef -1.920000e+02) #5, !dbg !30
  %733 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %732) #5, !dbg !30
  %734 = fptosi float %733 to i32, !dbg !30
  %735 = ashr i32 %734, 1, !dbg !30
  %736 = sub nsw i32 %734, %735, !dbg !30
  %737 = shl i32 %736, 23, !dbg !30
  %738 = add i32 %737, 1065353216, !dbg !30
  %739 = shl i32 %735, 23, !dbg !30
  %740 = add i32 %739, 1065353216, !dbg !30
  %741 = bitcast i32 %738 to float, !dbg !30
  %742 = fmul float %714, %741, !dbg !30
  %743 = bitcast i32 %740 to float, !dbg !30
  %744 = fmul float %742, %743, !dbg !30
  br label %__devicelib_imf_exp2f.exit16, !dbg !30

__devicelib_imf_exp2f.exit16:                     ; preds = %717, %726, %730
  %745 = phi float [ %744, %730 ], [ %721, %717 ], [ %729, %726 ], !dbg !30
  %746 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !31
  %747 = and i64 %746, 63, !dbg !31
  %748 = icmp eq i64 %747, 0, !dbg !31
  br i1 %748, label %749, label %799, !dbg !31

749:                                              ; preds = %__devicelib_imf_exp2f.exit16
  %750 = extractelement <1 x float> %40, i64 0, !dbg !20
  %751 = fmul float %750, %160, !dbg !32
  %752 = extractelement <1 x float> %41, i64 0, !dbg !20
  %753 = fmul float %752, %205, !dbg !32
  %754 = fadd float %751, %753, !dbg !33
  %755 = extractelement <1 x float> %42, i64 0, !dbg !20
  %756 = fmul float %755, %250, !dbg !32
  %757 = fadd float %754, %756, !dbg !33
  %758 = extractelement <1 x float> %43, i64 0, !dbg !20
  %759 = fmul float %758, %295, !dbg !32
  %760 = fadd float %757, %759, !dbg !33
  %761 = extractelement <1 x float> %44, i64 0, !dbg !20
  %762 = fmul float %761, %340, !dbg !32
  %763 = fadd float %760, %762, !dbg !33
  %764 = extractelement <1 x float> %45, i64 0, !dbg !20
  %765 = fmul float %764, %385, !dbg !32
  %766 = fadd float %763, %765, !dbg !33
  %767 = extractelement <1 x float> %46, i64 0, !dbg !20
  %768 = fmul float %767, %430, !dbg !32
  %769 = fadd float %766, %768, !dbg !33
  %770 = extractelement <1 x float> %47, i64 0, !dbg !20
  %771 = fmul float %770, %475, !dbg !32
  %772 = fadd float %769, %771, !dbg !33
  %773 = extractelement <1 x float> %48, i64 0, !dbg !20
  %774 = fmul float %773, %520, !dbg !32
  %775 = fadd float %772, %774, !dbg !33
  %776 = extractelement <1 x float> %49, i64 0, !dbg !20
  %777 = fmul float %776, %565, !dbg !32
  %778 = fadd float %775, %777, !dbg !33
  %779 = extractelement <1 x float> %50, i64 0, !dbg !20
  %780 = fmul float %779, %610, !dbg !32
  %781 = fadd float %778, %780, !dbg !33
  %782 = extractelement <1 x float> %51, i64 0, !dbg !20
  %783 = fmul float %782, %655, !dbg !32
  %784 = fadd float %781, %783, !dbg !33
  %785 = extractelement <1 x float> %52, i64 0, !dbg !20
  %786 = fmul float %785, %700, !dbg !32
  %787 = fadd float %784, %786, !dbg !33
  %788 = extractelement <1 x float> %53, i64 0, !dbg !20
  %789 = fmul float %788, %745, !dbg !32
  %790 = fadd float %787, %789, !dbg !33
  %791 = fadd float %790, 0.000000e+00, !dbg !33
  %792 = extractelement <1 x float> %86, i64 0, !dbg !26
  %793 = select i1 %87, float 1.000000e+00, float %792, !dbg !37
  %794 = fdiv float %791, %793, !dbg !38
  %795 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %794) #4
  %796 = insertelement <1 x i16> poison, i16 %795, i64 0, !dbg !31
  %797 = ashr exact i64 %sext, 31, !dbg !39
  %798 = getelementptr i8, ptr addrspace(1) %4, i64 %797, !dbg !39
  store <1 x i16> %796, ptr addrspace(1) %798, align 2, !dbg !31
  br label %799, !dbg !31

799:                                              ; preds = %749, %__devicelib_imf_exp2f.exit16
  ret void, !dbg !40
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef) local_unnamed_addr #2

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef, float noundef, float noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #3

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef, float noundef) local_unnamed_addr #2

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef, float noundef) local_unnamed_addr #2

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cjcxabxt5vbzvoukznvtn74s7574miu7aolwxzg2dwdrymcmrbir.py", directory: "/tmp/torchinductor_jovyan/jc")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7", linkageName: "triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!15 = !{i32 32}
!16 = !{i64 64, i64 1, i64 1}
!17 = !DILocation(line: 24, column: 28, scope: !14)
!18 = !DILocation(line: 34, column: 19, scope: !14)
!19 = !DILocation(line: 35, column: 30, scope: !14)
!20 = !DILocation(line: 35, column: 47, scope: !14)
!21 = !DILocation(line: 36, column: 30, scope: !14)
!22 = !DILocation(line: 36, column: 35, scope: !14)
!23 = !DILocation(line: 37, column: 30, scope: !14)
!24 = !DILocation(line: 37, column: 45, scope: !14)
!25 = !DILocation(line: 38, column: 31, scope: !14)
!26 = !DILocation(line: 38, column: 36, scope: !14)
!27 = !DILocation(line: 40, column: 19, scope: !14)
!28 = !DILocation(line: 41, column: 18, scope: !14)
!29 = !DILocation(line: 43, column: 32, scope: !14)
!30 = !DILocation(line: 44, column: 26, scope: !14)
!31 = !DILocation(line: 53, column: 37, scope: !14)
!32 = !DILocation(line: 45, column: 18, scope: !14)
!33 = !DILocation(line: 260, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !14, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!36 = !DILocation(line: 48, column: 26, scope: !14)
!37 = !DILocation(line: 50, column: 34, scope: !14)
!38 = !DILocation(line: 51, column: 21, scope: !14)
!39 = !DILocation(line: 53, column: 25, scope: !14)
!40 = !DILocation(line: 53, column: 4, scope: !14)
