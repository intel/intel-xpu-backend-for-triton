#blocked = #ttg.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_poi_fused_embedding_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<128256> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<512xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst : tensor<512xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<512x!tt.ptr<i64>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %5 : tensor<512x!tt.ptr<i64>, #blocked>, tensor<512xi32, #blocked> loc(#loc8)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<512x!tt.ptr<i64>, #blocked> loc(#loc9)
    %10 = arith.addi %9, %cst_1 : tensor<512xi64, #blocked> loc(#loc10)
    %11 = arith.cmpi slt, %9, %cst_0 : tensor<512xi64, #blocked> loc(#loc11)
    %12 = arith.select %11, %10, %9 : tensor<512xi1, #blocked>, tensor<512xi64, #blocked> loc(#loc12)
    %13 = arith.cmpi sge, %12, %cst_0 : tensor<512xi64, #blocked> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_1 : tensor<512xi64, #blocked> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<512xi1, #blocked> loc(#loc15)
    tt.assert %15, "index out of bounds: 0 <= tmp4 < 128256" : tensor<512xi1, #blocked> loc(#loc16)
    %16 = arith.muli %12, %cst_2 : tensor<512xi64, #blocked> loc(#loc17)
    %17 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc18)
    %18 = arith.addi %17, %16 : tensor<512xi64, #blocked> loc(#loc18)
    %19 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc19)
    %20 = tt.addptr %19, %18 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi64, #blocked> loc(#loc19)
    %21 = tt.load %20 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc20)
    %22 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc21)
    %23 = tt.addptr %22, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc21)
    tt.store %23, %21 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc22)
    tt.return loc(#loc23)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":19:28)
#loc3 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":19:33)
#loc4 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":20:36)
#loc5 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":20:23)
#loc6 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":22:19)
#loc7 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":23:19)
#loc8 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":25:30)
#loc9 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":25:35)
#loc10 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":27:18)
#loc11 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":28:18)
#loc12 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":29:32)
#loc13 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":30:27)
#loc14 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":30:43)
#loc15 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":30:36)
#loc16 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":30:52)
#loc17 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":31:40)
#loc18 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":31:35)
#loc19 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":31:30)
#loc20 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":31:47)
#loc21 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":32:25)
#loc22 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":32:36)
#loc23 = loc("/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py":32:4)
