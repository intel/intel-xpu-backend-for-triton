#loc = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0)
#loc1 = loc(unknown)
#loc38 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":50:27)
#loc63 = loc(callsite(#loc1 at #loc38))
module {
  tt.func public @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg6: f64 loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg9: i32 loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %arg9 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %4 = arith.muli %0, %c4096_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<1x2048xi32> loc(#loc60)
    %6 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc8)
    %7 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc61)
    %8 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc10)
    %9 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc11)
    %10 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc12)
    %11 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc13)
    %12 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc14)
    %13 = scf.for %arg11 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg12 = %cst_2) -> (tensor<1x2048xf32>)  : i32 {
      %24 = tt.splat %arg11 : i32 -> tensor<1x2048xi32> loc(#loc16)
      %25 = arith.addi %24, %3 : tensor<1x2048xi32> loc(#loc16)
      %26 = arith.cmpi slt, %25, %cst_1 : tensor<1x2048xi32> loc(#loc17)
      %27 = arith.addi %25, %5 : tensor<1x2048xi32> loc(#loc7)
      %28 = tt.addptr %6, %27 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc8)
      %29 = arith.andi %26, %7 : tensor<1x2048xi1> loc(#loc9)
      %30 = tt.load %28, %29, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc18)
      %31 = arith.extf %30 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc19)
      %32 = tt.addptr %8, %27 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc10)
      %33 = tt.load %32, %29, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc20)
      %34 = arith.extf %33 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc21)
      %35 = tt.addptr %9, %27 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc11)
      %36 = tt.load %35, %29, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc22)
      %37 = arith.extf %36 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc23)
      %38 = tt.addptr %10, %27 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc12)
      %39 = tt.load %38, %29, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc24)
      %40 = arith.extf %39 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc25)
      %41 = tt.addptr %11, %27 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc13)
      %42 = tt.load %41, %29, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc26)
      %43 = arith.extf %42 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc27)
      %44 = arith.addf %31, %34 : tensor<1x2048xf32> loc(#loc28)
      %45 = arith.addf %44, %37 : tensor<1x2048xf32> loc(#loc29)
      %46 = arith.addf %45, %40 : tensor<1x2048xf32> loc(#loc30)
      %47 = arith.addf %46, %43 : tensor<1x2048xf32> loc(#loc31)
      %48 = arith.mulf %47, %47 : tensor<1x2048xf32> loc(#loc32)
      %49 = arith.addf %arg12, %48 : tensor<1x2048xf32> loc(#loc33)
      %50 = arith.select %29, %49, %arg12 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc34)
      %51 = tt.addptr %12, %27 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc14)
      tt.store %51, %47, %29 : tensor<1x2048x!tt.ptr<f32>> loc(#loc35)
      scf.yield %50 : tensor<1x2048xf32> loc(#loc36)
    } loc(#loc15)
    %14 = "tt.reduce"(%13) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc38)), %arg12: f32 loc(callsite(#loc1 at #loc38))):
      %24 = arith.addf %arg11, %arg12 : f32 loc(#loc64)
      tt.reduce.return %24 : f32 loc(#loc62)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc62)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc40)
    %16 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc41)
    %17 = arith.divf %15, %cst_0 : tensor<1x1xf32> loc(#loc42)
    %18 = arith.truncf %arg6 : f64 to f32 loc(#loc43)
    %19 = tt.splat %18 : f32 -> tensor<1x1xf32> loc(#loc44)
    %20 = arith.addf %17, %19 : tensor<1x1xf32> loc(#loc44)
    %21 = tt.extern_elementwise %20 {libname = "", libpath = "", pure = true, symbol = "__imf_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc45)
    %22 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc46)
    %23 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc47)
    scf.for %arg11 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %24 = tt.splat %arg11 : i32 -> tensor<1x2048xi32> loc(#loc49)
      %25 = arith.addi %24, %3 : tensor<1x2048xi32> loc(#loc49)
      %26 = arith.cmpi slt, %25, %cst_1 : tensor<1x2048xi32> loc(#loc50)
      %27 = tt.addptr %16, %25 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc41)
      %28 = tt.load %27, %26, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc51)
      %29 = arith.extf %28 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc52)
      %30 = arith.addi %25, %5 : tensor<1x2048xi32> loc(#loc53)
      %31 = tt.addptr %12, %30 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc54)
      %32 = arith.andi %26, %7 : tensor<1x2048xi1> loc(#loc55)
      %33 = tt.load %31, %32, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc56)
      %34 = arith.mulf %33, %22 : tensor<1x2048xf32> loc(#loc46)
      %35 = arith.mulf %29, %34 : tensor<1x2048xf32> loc(#loc57)
      %36 = tt.addptr %23, %30 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc47)
      %37 = arith.truncf %35 : tensor<1x2048xf32> to tensor<1x2048xbf16> loc(#loc58)
      tt.store %36, %37, %32 : tensor<1x2048x!tt.ptr<bf16>> loc(#loc58)
    } loc(#loc48)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":22:28)
#loc3 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":24:21)
#loc4 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":25:27)
#loc5 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":25:37)
#loc6 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:46)
#loc7 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:41)
#loc8 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:34)
#loc9 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:61)
#loc10 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":36:34)
#loc11 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":37:34)
#loc12 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":38:34)
#loc13 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":39:34)
#loc14 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":49:29)
#loc15 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":29:40)
#loc16 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":30:31)
#loc17 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":31:29)
#loc18 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:51)
#loc19 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":35:113)
#loc20 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":36:51)
#loc21 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":36:113)
#loc22 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":37:51)
#loc23 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":37:113)
#loc24 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":38:51)
#loc25 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":38:113)
#loc26 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":39:51)
#loc27 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":39:113)
#loc28 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":40:22)
#loc29 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":41:22)
#loc30 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":42:22)
#loc31 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":43:22)
#loc32 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":45:23)
#loc33 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":47:25)
#loc34 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":48:50)
#loc35 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":49:52)
#loc36 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":49:8)
#loc37 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc39 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc40 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":50:30)
#loc41 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":58:35)
#loc42 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":61:25)
#loc43 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":62:25)
#loc44 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":63:24)
#loc45 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":64:32)
#loc46 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":65:24)
#loc47 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":68:29)
#loc48 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":52:40)
#loc49 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":53:31)
#loc50 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":54:29)
#loc51 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":58:42)
#loc52 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":58:95)
#loc53 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":59:43)
#loc54 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":59:36)
#loc55 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":59:63)
#loc56 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":59:53)
#loc57 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":67:24)
#loc58 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":68:53)
#loc59 = loc("/tmp/torchinductor_jovyan/l5/cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py":52:4)
#loc60 = loc(fused[#loc7, #loc6])
#loc61 = loc(fused[#loc9, #loc3])
#loc62 = loc(callsite(#loc37 at #loc38))
#loc64 = loc(callsite(#loc39 at #loc62))
