; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, ptr addrspace(1) readonly captures(none) %5, double %6, ptr addrspace(1) captures(none) %7, ptr addrspace(1) writeonly captures(none) %8, i32 %9, i32 %10, ptr addrspace(1) readnone captures(none) %11, ptr addrspace(3) captures(none) %12) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %14 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %15 = trunc i64 %14 to i32, !dbg !21
  %16 = icmp sgt i32 %9, %15, !dbg !22
  %17 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %18 = trunc i64 %17 to i32, !dbg !23
  %19 = shl i32 %18, 2, !dbg !23
  %20 = and i32 %19, 2044, !dbg !23
  %21 = shl i32 %15, 12, !dbg !24
  %22 = or disjoint i32 %20, %21
  %23 = sext i32 %22 to i64, !dbg !25
  br i1 %16, label %24, label %27, !dbg !26

24:                                               ; preds = %13
  %25 = getelementptr bfloat, ptr addrspace(1) %0, i64 %23, !dbg !27
  %26 = load <4 x i16>, ptr addrspace(1) %25, align 8, !dbg !26
  br label %27, !dbg !26

27:                                               ; preds = %24, %13
  %bc12 = phi <4 x i16> [ %26, %24 ], [ zeroinitializer, %13 ], !dbg !26
  %28 = extractelement <4 x i16> %bc12, i64 0, !dbg !28
  %29 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %28) #4
  %30 = extractelement <4 x i16> %bc12, i64 1, !dbg !28
  %31 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %30) #4
  %32 = extractelement <4 x i16> %bc12, i64 2, !dbg !28
  %33 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %32) #4
  %34 = extractelement <4 x i16> %bc12, i64 3, !dbg !28
  %35 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %34) #4
  br i1 %16, label %36, label %39, !dbg !29

36:                                               ; preds = %27
  %37 = getelementptr bfloat, ptr addrspace(1) %1, i64 %23, !dbg !30
  %38 = load <4 x i16>, ptr addrspace(1) %37, align 8, !dbg !29
  br label %39, !dbg !29

39:                                               ; preds = %36, %27
  %bc16 = phi <4 x i16> [ %38, %36 ], [ zeroinitializer, %27 ], !dbg !29
  %40 = extractelement <4 x i16> %bc16, i64 0, !dbg !31
  %41 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %40) #4
  %42 = extractelement <4 x i16> %bc16, i64 1, !dbg !31
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #4
  %44 = extractelement <4 x i16> %bc16, i64 2, !dbg !31
  %45 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %44) #4
  %46 = extractelement <4 x i16> %bc16, i64 3, !dbg !31
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #4
  br i1 %16, label %48, label %51, !dbg !32

48:                                               ; preds = %39
  %49 = getelementptr bfloat, ptr addrspace(1) %2, i64 %23, !dbg !33
  %50 = load <4 x i16>, ptr addrspace(1) %49, align 8, !dbg !32
  br label %51, !dbg !32

51:                                               ; preds = %48, %39
  %bc20 = phi <4 x i16> [ %50, %48 ], [ zeroinitializer, %39 ], !dbg !32
  %52 = extractelement <4 x i16> %bc20, i64 0, !dbg !34
  %53 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %52) #4
  %54 = extractelement <4 x i16> %bc20, i64 1, !dbg !34
  %55 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %54) #4
  %56 = extractelement <4 x i16> %bc20, i64 2, !dbg !34
  %57 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %56) #4
  %58 = extractelement <4 x i16> %bc20, i64 3, !dbg !34
  %59 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %58) #4
  br i1 %16, label %60, label %63, !dbg !35

60:                                               ; preds = %51
  %61 = getelementptr bfloat, ptr addrspace(1) %3, i64 %23, !dbg !36
  %62 = load <4 x i16>, ptr addrspace(1) %61, align 8, !dbg !35
  br label %63, !dbg !35

63:                                               ; preds = %60, %51
  %bc24 = phi <4 x i16> [ %62, %60 ], [ zeroinitializer, %51 ], !dbg !35
  %64 = extractelement <4 x i16> %bc24, i64 0, !dbg !37
  %65 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %64) #4
  %66 = extractelement <4 x i16> %bc24, i64 1, !dbg !37
  %67 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %66) #4
  %68 = extractelement <4 x i16> %bc24, i64 2, !dbg !37
  %69 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %68) #4
  %70 = extractelement <4 x i16> %bc24, i64 3, !dbg !37
  %71 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %70) #4
  br i1 %16, label %72, label %75, !dbg !38

72:                                               ; preds = %63
  %73 = getelementptr bfloat, ptr addrspace(1) %4, i64 %23, !dbg !39
  %74 = load <4 x i16>, ptr addrspace(1) %73, align 8, !dbg !38
  br label %75, !dbg !38

75:                                               ; preds = %72, %63
  %bc28 = phi <4 x i16> [ %74, %72 ], [ zeroinitializer, %63 ], !dbg !38
  %76 = extractelement <4 x i16> %bc28, i64 0, !dbg !40
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #4
  %78 = extractelement <4 x i16> %bc28, i64 1, !dbg !40
  %79 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %78) #4
  %80 = extractelement <4 x i16> %bc28, i64 2, !dbg !40
  %81 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %80) #4
  %82 = extractelement <4 x i16> %bc28, i64 3, !dbg !40
  %83 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %82) #4
  %84 = fadd float %29, %41, !dbg !41
  %85 = fadd float %31, %43, !dbg !41
  %86 = fadd float %33, %45, !dbg !41
  %87 = fadd float %35, %47, !dbg !41
  %88 = fadd float %84, %53, !dbg !42
  %89 = fadd float %85, %55, !dbg !42
  %90 = fadd float %86, %57, !dbg !42
  %91 = fadd float %87, %59, !dbg !42
  %92 = fadd float %88, %65, !dbg !43
  %93 = fadd float %89, %67, !dbg !43
  %94 = fadd float %90, %69, !dbg !43
  %95 = fadd float %91, %71, !dbg !43
  %96 = fadd float %92, %77, !dbg !44
  %97 = fadd float %93, %79, !dbg !44
  %98 = fadd float %94, %81, !dbg !44
  %99 = fadd float %95, %83, !dbg !44
  %100 = fmul float %96, %96, !dbg !45
  %101 = fmul float %97, %97, !dbg !45
  %102 = fmul float %98, %98, !dbg !45
  %103 = fmul float %99, %99, !dbg !45
  br i1 %16, label %106, label %104, !dbg !46

104:                                              ; preds = %75
  %105 = or disjoint i64 %23, 2048, !dbg !47
  br label %115, !dbg !26

106:                                              ; preds = %75
  %107 = insertelement <4 x float> poison, float %96, i64 0, !dbg !46
  %108 = insertelement <4 x float> %107, float %97, i64 1, !dbg !46
  %109 = insertelement <4 x float> %108, float %98, i64 2, !dbg !46
  %110 = insertelement <4 x float> %109, float %99, i64 3, !dbg !46
  %111 = getelementptr float, ptr addrspace(1) %7, i64 %23, !dbg !48
  store <4 x float> %110, ptr addrspace(1) %111, align 16, !dbg !46
  %112 = or disjoint i64 %23, 2048, !dbg !47
  %113 = getelementptr bfloat, ptr addrspace(1) %0, i64 %112, !dbg !27
  %114 = load <4 x i16>, ptr addrspace(1) %113, align 8, !dbg !26
  br label %115, !dbg !26

115:                                              ; preds = %104, %106
  %116 = phi i64 [ %112, %106 ], [ %105, %104 ]
  %bc12.1 = phi <4 x i16> [ %114, %106 ], [ zeroinitializer, %104 ], !dbg !26
  %117 = extractelement <4 x i16> %bc12.1, i64 0, !dbg !28
  %118 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %117) #4
  %119 = extractelement <4 x i16> %bc12.1, i64 1, !dbg !28
  %120 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %119) #4
  %121 = extractelement <4 x i16> %bc12.1, i64 2, !dbg !28
  %122 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %121) #4
  %123 = extractelement <4 x i16> %bc12.1, i64 3, !dbg !28
  %124 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %123) #4
  br i1 %16, label %125, label %128, !dbg !29

125:                                              ; preds = %115
  %126 = getelementptr bfloat, ptr addrspace(1) %1, i64 %116, !dbg !30
  %127 = load <4 x i16>, ptr addrspace(1) %126, align 8, !dbg !29
  br label %128, !dbg !29

128:                                              ; preds = %125, %115
  %bc16.1 = phi <4 x i16> [ %127, %125 ], [ zeroinitializer, %115 ], !dbg !29
  %129 = extractelement <4 x i16> %bc16.1, i64 0, !dbg !31
  %130 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %129) #4
  %131 = extractelement <4 x i16> %bc16.1, i64 1, !dbg !31
  %132 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %131) #4
  %133 = extractelement <4 x i16> %bc16.1, i64 2, !dbg !31
  %134 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %133) #4
  %135 = extractelement <4 x i16> %bc16.1, i64 3, !dbg !31
  %136 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %135) #4
  br i1 %16, label %137, label %140, !dbg !32

137:                                              ; preds = %128
  %138 = getelementptr bfloat, ptr addrspace(1) %2, i64 %116, !dbg !33
  %139 = load <4 x i16>, ptr addrspace(1) %138, align 8, !dbg !32
  br label %140, !dbg !32

140:                                              ; preds = %137, %128
  %bc20.1 = phi <4 x i16> [ %139, %137 ], [ zeroinitializer, %128 ], !dbg !32
  %141 = extractelement <4 x i16> %bc20.1, i64 0, !dbg !34
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #4
  %143 = extractelement <4 x i16> %bc20.1, i64 1, !dbg !34
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #4
  %145 = extractelement <4 x i16> %bc20.1, i64 2, !dbg !34
  %146 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %145) #4
  %147 = extractelement <4 x i16> %bc20.1, i64 3, !dbg !34
  %148 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %147) #4
  br i1 %16, label %149, label %152, !dbg !35

149:                                              ; preds = %140
  %150 = getelementptr bfloat, ptr addrspace(1) %3, i64 %116, !dbg !36
  %151 = load <4 x i16>, ptr addrspace(1) %150, align 8, !dbg !35
  br label %152, !dbg !35

152:                                              ; preds = %149, %140
  %bc24.1 = phi <4 x i16> [ %151, %149 ], [ zeroinitializer, %140 ], !dbg !35
  %153 = extractelement <4 x i16> %bc24.1, i64 0, !dbg !37
  %154 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %153) #4
  %155 = extractelement <4 x i16> %bc24.1, i64 1, !dbg !37
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = extractelement <4 x i16> %bc24.1, i64 2, !dbg !37
  %158 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %157) #4
  %159 = extractelement <4 x i16> %bc24.1, i64 3, !dbg !37
  %160 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %159) #4
  br i1 %16, label %161, label %164, !dbg !38

161:                                              ; preds = %152
  %162 = getelementptr bfloat, ptr addrspace(1) %4, i64 %116, !dbg !39
  %163 = load <4 x i16>, ptr addrspace(1) %162, align 8, !dbg !38
  br label %164, !dbg !38

164:                                              ; preds = %161, %152
  %bc28.1 = phi <4 x i16> [ %163, %161 ], [ zeroinitializer, %152 ], !dbg !38
  %165 = extractelement <4 x i16> %bc28.1, i64 0, !dbg !40
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #4
  %167 = extractelement <4 x i16> %bc28.1, i64 1, !dbg !40
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #4
  %169 = extractelement <4 x i16> %bc28.1, i64 2, !dbg !40
  %170 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %169) #4
  %171 = extractelement <4 x i16> %bc28.1, i64 3, !dbg !40
  %172 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %171) #4
  %173 = fadd float %118, %130, !dbg !41
  %174 = fadd float %120, %132, !dbg !41
  %175 = fadd float %122, %134, !dbg !41
  %176 = fadd float %124, %136, !dbg !41
  %177 = fadd float %173, %142, !dbg !42
  %178 = fadd float %174, %144, !dbg !42
  %179 = fadd float %175, %146, !dbg !42
  %180 = fadd float %176, %148, !dbg !42
  %181 = fadd float %177, %154, !dbg !43
  %182 = fadd float %178, %156, !dbg !43
  %183 = fadd float %179, %158, !dbg !43
  %184 = fadd float %180, %160, !dbg !43
  %185 = fadd float %181, %166, !dbg !44
  %186 = fadd float %182, %168, !dbg !44
  %187 = fadd float %183, %170, !dbg !44
  %188 = fadd float %184, %172, !dbg !44
  %189 = fmul float %185, %185, !dbg !45
  %190 = fmul float %186, %186, !dbg !45
  %191 = fmul float %187, %187, !dbg !45
  %192 = fmul float %188, %188, !dbg !45
  %193 = fadd float %100, %189, !dbg !49
  %194 = fadd float %101, %190, !dbg !49
  %195 = fadd float %102, %191, !dbg !49
  %196 = fadd float %103, %192, !dbg !49
  br i1 %16, label %197, label %203, !dbg !46

197:                                              ; preds = %164
  %198 = insertelement <4 x float> poison, float %185, i64 0, !dbg !46
  %199 = insertelement <4 x float> %198, float %186, i64 1, !dbg !46
  %200 = insertelement <4 x float> %199, float %187, i64 2, !dbg !46
  %201 = insertelement <4 x float> %200, float %188, i64 3, !dbg !46
  %202 = getelementptr float, ptr addrspace(1) %7, i64 %116, !dbg !48
  store <4 x float> %201, ptr addrspace(1) %202, align 16, !dbg !46
  br label %203, !dbg !46

203:                                              ; preds = %197, %164
  %204 = and i32 %18, 511, !dbg !23
  %205 = and i32 %18, 31, !dbg !23
  %206 = fadd float %193, %194, !dbg !50
  %207 = fadd float %195, %206, !dbg !50
  %208 = fadd float %196, %207, !dbg !50
  %209 = select i1 %16, float %208, float 0.000000e+00, !dbg !50
  %210 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %209) #5, !dbg !54
  %211 = icmp eq i32 %205, 0, !dbg !54
  br i1 %211, label %212, label %216, !dbg !54

212:                                              ; preds = %203
  %213 = lshr exact i32 %204, 5, !dbg !23
  %214 = zext nneg i32 %213 to i64, !dbg !54
  %215 = getelementptr float, ptr addrspace(3) %12, i64 %214, !dbg !54
  store float %210, ptr addrspace(3) %215, align 4, !dbg !54
  br label %216, !dbg !54

216:                                              ; preds = %212, %203
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !54
  %217 = icmp samesign ult i32 %204, 16, !dbg !54
  %218 = and i64 %17, 511, !dbg !54
  %219 = getelementptr float, ptr addrspace(3) %12, i64 %218, !dbg !54
  br i1 %217, label %220, label %222, !dbg !54

220:                                              ; preds = %216
  %221 = load float, ptr addrspace(3) %219, align 4, !dbg !54
  br label %222, !dbg !54

222:                                              ; preds = %220, %216
  %223 = phi float [ %221, %220 ], [ undef, %216 ], !dbg !53
  %224 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %223, i32 16) #5, !dbg !54
  %225 = and i32 %18, 15, !dbg !54
  %226 = icmp eq i32 %225, 0, !dbg !54
  %227 = and i1 %217, %226, !dbg !54
  br i1 %227, label %228, label %229, !dbg !54

228:                                              ; preds = %222
  store float %224, ptr addrspace(3) %219, align 4, !dbg !54
  br label %229, !dbg !54

229:                                              ; preds = %228, %222
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !54
  %230 = load float, ptr addrspace(3) %12, align 4, !dbg !54
  %231 = fmul float %230, 0x3F30000000000000, !dbg !55
  %232 = fptrunc double %6 to float, !dbg !56
  %233 = fadd float %231, %232, !dbg !57
  %234 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %233) #6, !dbg !58
  br i1 %16, label %.split.us.preheader, label %.split32.us

.split.us.preheader:                              ; preds = %229
  %235 = zext nneg i32 %20 to i64, !dbg !59
  %236 = getelementptr bfloat, ptr addrspace(1) %5, i64 %235, !dbg !60
  %237 = getelementptr inbounds nuw i8, ptr addrspace(1) %236, i64 6, !dbg !61
  %238 = load i16, ptr addrspace(1) %237, align 2, !dbg !61
  %239 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %238) #4
  %240 = getelementptr inbounds nuw i8, ptr addrspace(1) %236, i64 4, !dbg !61
  %241 = load i16, ptr addrspace(1) %240, align 4, !dbg !61
  %242 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %241) #4
  %243 = getelementptr inbounds nuw i8, ptr addrspace(1) %236, i64 2, !dbg !61
  %244 = load i16, ptr addrspace(1) %243, align 2, !dbg !61
  %245 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %244) #4
  %246 = load i16, ptr addrspace(1) %236, align 8, !dbg !61
  %247 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %246) #4
  %248 = getelementptr float, ptr addrspace(1) %7, i64 %23, !dbg !62
  %249 = load float, ptr addrspace(1) %248, align 16, !dbg !63
  %250 = fmul float %234, %249, !dbg !64
  %251 = fmul float %247, %250, !dbg !65
  %252 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %251) #4
  %253 = insertelement <2 x i16> poison, i16 %252, i64 0, !dbg !66
  %254 = getelementptr inbounds nuw i8, ptr addrspace(1) %248, i64 4, !dbg !63
  %255 = load float, ptr addrspace(1) %254, align 4, !dbg !63
  %256 = fmul float %234, %255, !dbg !64
  %257 = fmul float %245, %256, !dbg !65
  %258 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %257) #4
  %259 = insertelement <2 x i16> %253, i16 %258, i64 1, !dbg !66
  %260 = bitcast <2 x i16> %259 to i32, !dbg !66
  %261 = insertelement <2 x i32> poison, i32 %260, i64 0, !dbg !66
  %262 = getelementptr inbounds nuw i8, ptr addrspace(1) %248, i64 8, !dbg !63
  %263 = load float, ptr addrspace(1) %262, align 8, !dbg !63
  %264 = fmul float %234, %263, !dbg !64
  %265 = fmul float %242, %264, !dbg !65
  %266 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %265) #4
  %267 = insertelement <2 x i16> poison, i16 %266, i64 0, !dbg !66
  %268 = getelementptr inbounds nuw i8, ptr addrspace(1) %248, i64 12, !dbg !63
  %269 = load float, ptr addrspace(1) %268, align 4, !dbg !63
  %270 = fmul float %234, %269, !dbg !64
  %271 = fmul float %239, %270, !dbg !65
  %272 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %271) #4
  %273 = insertelement <2 x i16> %267, i16 %272, i64 1, !dbg !66
  %274 = bitcast <2 x i16> %273 to i32, !dbg !66
  %275 = insertelement <2 x i32> %261, i32 %274, i64 1, !dbg !66
  %276 = getelementptr bfloat, ptr addrspace(1) %8, i64 %23, !dbg !67
  store <2 x i32> %275, ptr addrspace(1) %276, align 8, !dbg !66
  %277 = getelementptr bfloat, ptr addrspace(1) %5, i64 %235, !dbg !60
  %278 = getelementptr i8, ptr addrspace(1) %277, i64 4096, !dbg !60
  %279 = getelementptr i8, ptr addrspace(1) %277, i64 4102, !dbg !61
  %280 = load i16, ptr addrspace(1) %279, align 2, !dbg !61
  %281 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %280) #4
  %282 = getelementptr i8, ptr addrspace(1) %277, i64 4100, !dbg !61
  %283 = load i16, ptr addrspace(1) %282, align 4, !dbg !61
  %284 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %283) #4
  %285 = getelementptr i8, ptr addrspace(1) %277, i64 4098, !dbg !61
  %286 = load i16, ptr addrspace(1) %285, align 2, !dbg !61
  %287 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %286) #4
  %288 = load i16, ptr addrspace(1) %278, align 8, !dbg !61
  %289 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %288) #4
  %290 = getelementptr float, ptr addrspace(1) %7, i64 %116, !dbg !62
  %291 = load float, ptr addrspace(1) %290, align 16, !dbg !63
  %292 = fmul float %234, %291, !dbg !64
  %293 = fmul float %289, %292, !dbg !65
  %294 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %293) #4
  %295 = insertelement <2 x i16> poison, i16 %294, i64 0, !dbg !66
  %296 = getelementptr inbounds nuw i8, ptr addrspace(1) %290, i64 4, !dbg !63
  %297 = load float, ptr addrspace(1) %296, align 4, !dbg !63
  %298 = fmul float %234, %297, !dbg !64
  %299 = fmul float %287, %298, !dbg !65
  %300 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %299) #4
  %301 = insertelement <2 x i16> %295, i16 %300, i64 1, !dbg !66
  %302 = bitcast <2 x i16> %301 to i32, !dbg !66
  %303 = insertelement <2 x i32> poison, i32 %302, i64 0, !dbg !66
  %304 = getelementptr inbounds nuw i8, ptr addrspace(1) %290, i64 8, !dbg !63
  %305 = load float, ptr addrspace(1) %304, align 8, !dbg !63
  %306 = fmul float %234, %305, !dbg !64
  %307 = fmul float %284, %306, !dbg !65
  %308 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %307) #4
  %309 = insertelement <2 x i16> poison, i16 %308, i64 0, !dbg !66
  %310 = getelementptr inbounds nuw i8, ptr addrspace(1) %290, i64 12, !dbg !63
  %311 = load float, ptr addrspace(1) %310, align 4, !dbg !63
  %312 = fmul float %234, %311, !dbg !64
  %313 = fmul float %281, %312, !dbg !65
  %314 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %313) #4
  %315 = insertelement <2 x i16> %309, i16 %314, i64 1, !dbg !66
  %316 = bitcast <2 x i16> %315 to i32, !dbg !66
  %317 = insertelement <2 x i32> %303, i32 %316, i64 1, !dbg !66
  %318 = getelementptr bfloat, ptr addrspace(1) %8, i64 %116, !dbg !67
  store <2 x i32> %317, ptr addrspace(1) %318, align 8, !dbg !66
  br label %.split32.us, !dbg !68

.split32.us:                                      ; preds = %229, %.split.us.preheader
  ret void, !dbg !68
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cl5ps4zfbnoxhtpc65wgw2em5ohz65jl3k5e457lbcpummn7awez.py", directory: "/tmp/torchinductor_jovyan/l5")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 46, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 51, scope: !18)
!27 = !DILocation(line: 35, column: 34, scope: !18)
!28 = !DILocation(line: 35, column: 113, scope: !18)
!29 = !DILocation(line: 36, column: 51, scope: !18)
!30 = !DILocation(line: 36, column: 34, scope: !18)
!31 = !DILocation(line: 36, column: 113, scope: !18)
!32 = !DILocation(line: 37, column: 51, scope: !18)
!33 = !DILocation(line: 37, column: 34, scope: !18)
!34 = !DILocation(line: 37, column: 113, scope: !18)
!35 = !DILocation(line: 38, column: 51, scope: !18)
!36 = !DILocation(line: 38, column: 34, scope: !18)
!37 = !DILocation(line: 38, column: 113, scope: !18)
!38 = !DILocation(line: 39, column: 51, scope: !18)
!39 = !DILocation(line: 39, column: 34, scope: !18)
!40 = !DILocation(line: 39, column: 113, scope: !18)
!41 = !DILocation(line: 40, column: 22, scope: !18)
!42 = !DILocation(line: 41, column: 22, scope: !18)
!43 = !DILocation(line: 42, column: 22, scope: !18)
!44 = !DILocation(line: 43, column: 22, scope: !18)
!45 = !DILocation(line: 45, column: 23, scope: !18)
!46 = !DILocation(line: 49, column: 52, scope: !18)
!47 = !DILocation(line: 35, column: 41, scope: !18)
!48 = !DILocation(line: 49, column: 29, scope: !18)
!49 = !DILocation(line: 47, column: 25, scope: !18)
!50 = !DILocation(line: 260, column: 15, scope: !51, inlinedAt: !53)
!51 = distinct !DILexicalBlockFile(scope: !18, file: !52, discriminator: 0)
!52 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!53 = !DILocation(line: 50, column: 27, scope: !18)
!54 = !DILocation(line: 290, column: 36, scope: !51, inlinedAt: !53)
!55 = !DILocation(line: 61, column: 25, scope: !18)
!56 = !DILocation(line: 62, column: 25, scope: !18)
!57 = !DILocation(line: 63, column: 24, scope: !18)
!58 = !DILocation(line: 64, column: 32, scope: !18)
!59 = !DILocation(line: 52, column: 40, scope: !18)
!60 = !DILocation(line: 58, column: 35, scope: !18)
!61 = !DILocation(line: 58, column: 95, scope: !18)
!62 = !DILocation(line: 59, column: 36, scope: !18)
!63 = !DILocation(line: 59, column: 53, scope: !18)
!64 = !DILocation(line: 65, column: 24, scope: !18)
!65 = !DILocation(line: 67, column: 24, scope: !18)
!66 = !DILocation(line: 68, column: 53, scope: !18)
!67 = !DILocation(line: 68, column: 29, scope: !18)
!68 = !DILocation(line: 52, column: 4, scope: !18)
