; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_poi_fused_cat_3(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, i64 %3, i64 %4, i64 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr #1 !dbg !15 !intel_reqd_sub_group_size !16 !max_work_group_size !17 {
  %9 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #2, !dbg !18
  %10 = trunc i64 %9 to i32, !dbg !18
  %11 = shl i32 %10, 9, !dbg !19
  %12 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #2, !dbg !20
  %13 = trunc i64 %12 to i32, !dbg !20
  %14 = shl i32 %13, 1, !dbg !20
  %15 = and i32 %14, 510, !dbg !20
  %16 = or disjoint i32 %15, %11, !dbg !21
  %17 = icmp slt i32 %16, %6, !dbg !22
  %.frozen = freeze i32 %16, !dbg !23
  %18 = sdiv i32 %.frozen, 128, !dbg !23
  %19 = sext i32 %18 to i64, !dbg !24
  %20 = srem i64 %19, %3, !dbg !24
  %21 = mul i32 %18, 128, !dbg !25
  %.decomposed = sub i32 %.frozen, %21, !dbg !25
  %22 = sext i32 %16 to i64, !dbg !26
  %23 = sdiv i64 %22, %5, !dbg !26
  %24 = icmp slt i64 %20, %4, !dbg !27
  %25 = shl nsw i64 %23, 7, !dbg !28
  %26 = sext i32 %.decomposed to i64, !dbg !29
  %27 = add nsw i64 %25, %26, !dbg !29
  %28 = and i1 %24, %17, !dbg !30
  br i1 %28, label %29, label %33, !dbg !31

29:                                               ; preds = %8
  %30 = getelementptr bfloat, ptr addrspace(1) %0, i64 %27, !dbg !32
  %.idx = shl nsw i64 %20, 11, !dbg !32
  %31 = getelementptr i8, ptr addrspace(1) %30, i64 %.idx, !dbg !32
  %32 = load <2 x i16>, ptr addrspace(1) %31, align 4, !dbg !31
  br label %33, !dbg !31

33:                                               ; preds = %29, %8
  %bc1 = phi <2 x i16> [ %32, %29 ], [ zeroinitializer, %8 ], !dbg !31
  %34 = extractelement <2 x i16> %bc1, i64 0, !dbg !33
  %35 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %34) #2
  %36 = extractelement <2 x i16> %bc1, i64 1, !dbg !33
  %37 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %36) #2
  %38 = icmp sge i64 %20, %4, !dbg !34
  %39 = and i1 %38, %17, !dbg !35
  br i1 %39, label %40, label %43, !dbg !36

40:                                               ; preds = %33
  %41 = getelementptr bfloat, ptr addrspace(1) %1, i64 %27, !dbg !37
  %42 = load <2 x i16>, ptr addrspace(1) %41, align 4, !dbg !36
  br label %43, !dbg !36

43:                                               ; preds = %40, %33
  %bc2 = phi <2 x i16> [ %42, %40 ], [ zeroinitializer, %33 ], !dbg !36
  br i1 %17, label %44, label %58, !dbg !38

44:                                               ; preds = %43
  %45 = extractelement <2 x i16> %bc2, i64 0, !dbg !39
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #2
  %47 = select i1 %24, float %35, float %46, !dbg !40
  %48 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %47) #2
  %49 = insertelement <2 x i16> poison, i16 %48, i64 0, !dbg !38
  %50 = extractelement <2 x i16> %bc2, i64 1, !dbg !39
  %51 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %50) #2
  %52 = select i1 %24, float %37, float %51, !dbg !40
  %53 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %52) #2
  %54 = insertelement <2 x i16> %49, i16 %53, i64 1, !dbg !38
  %55 = bitcast <2 x i16> %54 to i32, !dbg !38
  %56 = insertelement <1 x i32> poison, i32 %55, i64 0, !dbg !38
  %57 = getelementptr bfloat, ptr addrspace(1) %2, i64 %22, !dbg !41
  store <1 x i32> %56, ptr addrspace(1) %57, align 4, !dbg !38
  br label %58, !dbg !38

58:                                               ; preds = %44, %43
  ret void, !dbg !42
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cyc42ufw3xcohs6hc6h4li5dzopx2emnj7gn57xvgzbj44qmyu5e.py", directory: "/tmp/torchinductor_jovyan/yc")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!16 = !{i32 32}
!17 = !{i64 256, i64 1, i64 1}
!18 = !DILocation(line: 19, column: 28, scope: !15)
!19 = !DILocation(line: 19, column: 33, scope: !15)
!20 = !DILocation(line: 20, column: 36, scope: !15)
!21 = !DILocation(line: 20, column: 23, scope: !15)
!22 = !DILocation(line: 21, column: 21, scope: !15)
!23 = !DILocation(line: 22, column: 21, scope: !15)
!24 = !DILocation(line: 22, column: 28, scope: !15)
!25 = !DILocation(line: 23, column: 19, scope: !15)
!26 = !DILocation(line: 24, column: 19, scope: !15)
!27 = !DILocation(line: 30, column: 18, scope: !15)
!28 = !DILocation(line: 31, column: 39, scope: !15)
!29 = !DILocation(line: 31, column: 35, scope: !15)
!30 = !DILocation(line: 31, column: 63, scope: !15)
!31 = !DILocation(line: 31, column: 56, scope: !15)
!32 = !DILocation(line: 31, column: 30, scope: !15)
!33 = !DILocation(line: 31, column: 114, scope: !15)
!34 = !DILocation(line: 32, column: 19, scope: !15)
!35 = !DILocation(line: 35, column: 51, scope: !15)
!36 = !DILocation(line: 35, column: 44, scope: !15)
!37 = !DILocation(line: 35, column: 30, scope: !15)
!38 = !DILocation(line: 37, column: 37, scope: !15)
!39 = !DILocation(line: 35, column: 102, scope: !15)
!40 = !DILocation(line: 36, column: 33, scope: !15)
!41 = !DILocation(line: 37, column: 25, scope: !15)
!42 = !DILocation(line: 37, column: 4, scope: !15)
