; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10(ptr addrspace(1) captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, ptr addrspace(1) readonly captures(none) %5, double %6, ptr addrspace(1) writeonly captures(none) %7, i32 %8, i32 %9, ptr addrspace(1) readnone captures(none) %10, ptr addrspace(3) captures(none) %11) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %13 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %14 = trunc i64 %13 to i32, !dbg !21
  %15 = icmp sgt i32 %8, %14, !dbg !22
  %16 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %17 = trunc i64 %16 to i32, !dbg !23
  %18 = shl i32 %17, 2, !dbg !23
  %19 = and i32 %18, 2044, !dbg !23
  %20 = shl i32 %14, 12, !dbg !24
  %21 = or disjoint i32 %19, %20
  %22 = sext i32 %21 to i64, !dbg !25
  br i1 %15, label %23, label %26, !dbg !26

23:                                               ; preds = %12
  %24 = getelementptr bfloat, ptr addrspace(1) %1, i64 %22, !dbg !27
  %25 = load <4 x i16>, ptr addrspace(1) %24, align 8, !dbg !26
  br label %26, !dbg !26

26:                                               ; preds = %23, %12
  %bc13 = phi <4 x i16> [ %25, %23 ], [ zeroinitializer, %12 ], !dbg !26
  %27 = extractelement <4 x i16> %bc13, i64 0, !dbg !28
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #4
  %29 = extractelement <4 x i16> %bc13, i64 1, !dbg !28
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = extractelement <4 x i16> %bc13, i64 2, !dbg !28
  %32 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %31) #4
  %33 = extractelement <4 x i16> %bc13, i64 3, !dbg !28
  %34 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %33) #4
  %35 = getelementptr bfloat, ptr addrspace(1) %0, i64 %22, !dbg !29
  br i1 %15, label %36, label %38, !dbg !30

36:                                               ; preds = %26
  %37 = load <4 x i16>, ptr addrspace(1) %35, align 8, !dbg !30
  br label %38, !dbg !30

38:                                               ; preds = %36, %26
  %bc17 = phi <4 x i16> [ %37, %36 ], [ zeroinitializer, %26 ], !dbg !30
  %39 = extractelement <4 x i16> %bc17, i64 0, !dbg !31
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #4
  %41 = extractelement <4 x i16> %bc17, i64 1, !dbg !31
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #4
  %43 = extractelement <4 x i16> %bc17, i64 2, !dbg !31
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #4
  %45 = extractelement <4 x i16> %bc17, i64 3, !dbg !31
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #4
  br i1 %15, label %47, label %50, !dbg !32

47:                                               ; preds = %38
  %48 = getelementptr bfloat, ptr addrspace(1) %2, i64 %22, !dbg !33
  %49 = load <4 x i16>, ptr addrspace(1) %48, align 8, !dbg !32
  br label %50, !dbg !32

50:                                               ; preds = %47, %38
  %bc21 = phi <4 x i16> [ %49, %47 ], [ zeroinitializer, %38 ], !dbg !32
  %51 = extractelement <4 x i16> %bc21, i64 0, !dbg !34
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #4
  %53 = extractelement <4 x i16> %bc21, i64 1, !dbg !34
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #4
  %55 = extractelement <4 x i16> %bc21, i64 2, !dbg !34
  %56 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %55) #4
  %57 = extractelement <4 x i16> %bc21, i64 3, !dbg !34
  %58 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %57) #4
  br i1 %15, label %59, label %62, !dbg !35

59:                                               ; preds = %50
  %60 = getelementptr bfloat, ptr addrspace(1) %3, i64 %22, !dbg !36
  %61 = load <4 x i16>, ptr addrspace(1) %60, align 8, !dbg !35
  br label %62, !dbg !35

62:                                               ; preds = %59, %50
  %bc25 = phi <4 x i16> [ %61, %59 ], [ zeroinitializer, %50 ], !dbg !35
  %63 = extractelement <4 x i16> %bc25, i64 0, !dbg !37
  %64 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %63) #4
  %65 = extractelement <4 x i16> %bc25, i64 1, !dbg !37
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #4
  %67 = extractelement <4 x i16> %bc25, i64 2, !dbg !37
  %68 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %67) #4
  %69 = extractelement <4 x i16> %bc25, i64 3, !dbg !37
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #4
  br i1 %15, label %71, label %74, !dbg !38

71:                                               ; preds = %62
  %72 = getelementptr bfloat, ptr addrspace(1) %4, i64 %22, !dbg !39
  %73 = load <4 x i16>, ptr addrspace(1) %72, align 8, !dbg !38
  br label %74, !dbg !38

74:                                               ; preds = %71, %62
  %bc29 = phi <4 x i16> [ %73, %71 ], [ zeroinitializer, %62 ], !dbg !38
  %75 = extractelement <4 x i16> %bc29, i64 0, !dbg !40
  %76 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %75) #4
  %77 = extractelement <4 x i16> %bc29, i64 1, !dbg !40
  %78 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %77) #4
  %79 = extractelement <4 x i16> %bc29, i64 2, !dbg !40
  %80 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %79) #4
  %81 = extractelement <4 x i16> %bc29, i64 3, !dbg !40
  %82 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %81) #4
  %83 = fadd float %28, %40, !dbg !41
  %84 = fadd float %30, %42, !dbg !41
  %85 = fadd float %32, %44, !dbg !41
  %86 = fadd float %34, %46, !dbg !41
  %87 = fadd float %83, %52, !dbg !42
  %88 = fadd float %84, %54, !dbg !42
  %89 = fadd float %85, %56, !dbg !42
  %90 = fadd float %86, %58, !dbg !42
  %91 = fadd float %87, %64, !dbg !43
  %92 = fadd float %88, %66, !dbg !43
  %93 = fadd float %89, %68, !dbg !43
  %94 = fadd float %90, %70, !dbg !43
  %95 = fadd float %91, %76, !dbg !44
  %96 = fadd float %92, %78, !dbg !44
  %97 = fadd float %93, %80, !dbg !44
  %98 = fadd float %94, %82, !dbg !44
  %99 = fmul float %95, %95, !dbg !45
  %100 = fmul float %96, %96, !dbg !45
  %101 = fmul float %97, %97, !dbg !45
  %102 = fmul float %98, %98, !dbg !45
  br i1 %15, label %105, label %103, !dbg !46

103:                                              ; preds = %74
  %104 = or disjoint i64 %22, 2048, !dbg !47
  br label %121, !dbg !26

105:                                              ; preds = %74
  %106 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %95) #4
  %107 = insertelement <2 x i16> poison, i16 %106, i64 0, !dbg !46
  %108 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %96) #4
  %109 = insertelement <2 x i16> %107, i16 %108, i64 1, !dbg !46
  %110 = bitcast <2 x i16> %109 to i32, !dbg !46
  %111 = insertelement <2 x i32> poison, i32 %110, i64 0, !dbg !46
  %112 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %97) #4
  %113 = insertelement <2 x i16> poison, i16 %112, i64 0, !dbg !46
  %114 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %98) #4
  %115 = insertelement <2 x i16> %113, i16 %114, i64 1, !dbg !46
  %116 = bitcast <2 x i16> %115 to i32, !dbg !46
  %117 = insertelement <2 x i32> %111, i32 %116, i64 1, !dbg !46
  store <2 x i32> %117, ptr addrspace(1) %35, align 8, !dbg !46
  %118 = or disjoint i64 %22, 2048, !dbg !47
  %119 = getelementptr bfloat, ptr addrspace(1) %1, i64 %118, !dbg !27
  %120 = load <4 x i16>, ptr addrspace(1) %119, align 8, !dbg !26
  br label %121, !dbg !26

121:                                              ; preds = %103, %105
  %122 = phi i64 [ %118, %105 ], [ %104, %103 ]
  %bc13.1 = phi <4 x i16> [ %120, %105 ], [ zeroinitializer, %103 ], !dbg !26
  %123 = extractelement <4 x i16> %bc13.1, i64 0, !dbg !28
  %124 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %123) #4
  %125 = extractelement <4 x i16> %bc13.1, i64 1, !dbg !28
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = extractelement <4 x i16> %bc13.1, i64 2, !dbg !28
  %128 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %127) #4
  %129 = extractelement <4 x i16> %bc13.1, i64 3, !dbg !28
  %130 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %129) #4
  %131 = getelementptr bfloat, ptr addrspace(1) %0, i64 %122, !dbg !29
  br i1 %15, label %132, label %134, !dbg !30

132:                                              ; preds = %121
  %133 = load <4 x i16>, ptr addrspace(1) %131, align 8, !dbg !30
  br label %134, !dbg !30

134:                                              ; preds = %132, %121
  %bc17.1 = phi <4 x i16> [ %133, %132 ], [ zeroinitializer, %121 ], !dbg !30
  %135 = extractelement <4 x i16> %bc17.1, i64 0, !dbg !31
  %136 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %135) #4
  %137 = extractelement <4 x i16> %bc17.1, i64 1, !dbg !31
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #4
  %139 = extractelement <4 x i16> %bc17.1, i64 2, !dbg !31
  %140 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %139) #4
  %141 = extractelement <4 x i16> %bc17.1, i64 3, !dbg !31
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #4
  br i1 %15, label %143, label %146, !dbg !32

143:                                              ; preds = %134
  %144 = getelementptr bfloat, ptr addrspace(1) %2, i64 %122, !dbg !33
  %145 = load <4 x i16>, ptr addrspace(1) %144, align 8, !dbg !32
  br label %146, !dbg !32

146:                                              ; preds = %143, %134
  %bc21.1 = phi <4 x i16> [ %145, %143 ], [ zeroinitializer, %134 ], !dbg !32
  %147 = extractelement <4 x i16> %bc21.1, i64 0, !dbg !34
  %148 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %147) #4
  %149 = extractelement <4 x i16> %bc21.1, i64 1, !dbg !34
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = extractelement <4 x i16> %bc21.1, i64 2, !dbg !34
  %152 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %151) #4
  %153 = extractelement <4 x i16> %bc21.1, i64 3, !dbg !34
  %154 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %153) #4
  br i1 %15, label %155, label %158, !dbg !35

155:                                              ; preds = %146
  %156 = getelementptr bfloat, ptr addrspace(1) %3, i64 %122, !dbg !36
  %157 = load <4 x i16>, ptr addrspace(1) %156, align 8, !dbg !35
  br label %158, !dbg !35

158:                                              ; preds = %155, %146
  %bc25.1 = phi <4 x i16> [ %157, %155 ], [ zeroinitializer, %146 ], !dbg !35
  %159 = extractelement <4 x i16> %bc25.1, i64 0, !dbg !37
  %160 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %159) #4
  %161 = extractelement <4 x i16> %bc25.1, i64 1, !dbg !37
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = extractelement <4 x i16> %bc25.1, i64 2, !dbg !37
  %164 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %163) #4
  %165 = extractelement <4 x i16> %bc25.1, i64 3, !dbg !37
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #4
  br i1 %15, label %167, label %170, !dbg !38

167:                                              ; preds = %158
  %168 = getelementptr bfloat, ptr addrspace(1) %4, i64 %122, !dbg !39
  %169 = load <4 x i16>, ptr addrspace(1) %168, align 8, !dbg !38
  br label %170, !dbg !38

170:                                              ; preds = %167, %158
  %bc29.1 = phi <4 x i16> [ %169, %167 ], [ zeroinitializer, %158 ], !dbg !38
  %171 = extractelement <4 x i16> %bc29.1, i64 0, !dbg !40
  %172 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %171) #4
  %173 = extractelement <4 x i16> %bc29.1, i64 1, !dbg !40
  %174 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %173) #4
  %175 = extractelement <4 x i16> %bc29.1, i64 2, !dbg !40
  %176 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %175) #4
  %177 = extractelement <4 x i16> %bc29.1, i64 3, !dbg !40
  %178 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %177) #4
  %179 = fadd float %124, %136, !dbg !41
  %180 = fadd float %126, %138, !dbg !41
  %181 = fadd float %128, %140, !dbg !41
  %182 = fadd float %130, %142, !dbg !41
  %183 = fadd float %179, %148, !dbg !42
  %184 = fadd float %180, %150, !dbg !42
  %185 = fadd float %181, %152, !dbg !42
  %186 = fadd float %182, %154, !dbg !42
  %187 = fadd float %183, %160, !dbg !43
  %188 = fadd float %184, %162, !dbg !43
  %189 = fadd float %185, %164, !dbg !43
  %190 = fadd float %186, %166, !dbg !43
  %191 = fadd float %187, %172, !dbg !44
  %192 = fadd float %188, %174, !dbg !44
  %193 = fadd float %189, %176, !dbg !44
  %194 = fadd float %190, %178, !dbg !44
  %195 = fmul float %191, %191, !dbg !45
  %196 = fmul float %192, %192, !dbg !45
  %197 = fmul float %193, %193, !dbg !45
  %198 = fmul float %194, %194, !dbg !45
  %199 = fadd float %99, %195, !dbg !48
  %200 = fadd float %100, %196, !dbg !48
  %201 = fadd float %101, %197, !dbg !48
  %202 = fadd float %102, %198, !dbg !48
  br i1 %15, label %203, label %216, !dbg !46

203:                                              ; preds = %170
  %204 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %191) #4
  %205 = insertelement <2 x i16> poison, i16 %204, i64 0, !dbg !46
  %206 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %192) #4
  %207 = insertelement <2 x i16> %205, i16 %206, i64 1, !dbg !46
  %208 = bitcast <2 x i16> %207 to i32, !dbg !46
  %209 = insertelement <2 x i32> poison, i32 %208, i64 0, !dbg !46
  %210 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %193) #4
  %211 = insertelement <2 x i16> poison, i16 %210, i64 0, !dbg !46
  %212 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %194) #4
  %213 = insertelement <2 x i16> %211, i16 %212, i64 1, !dbg !46
  %214 = bitcast <2 x i16> %213 to i32, !dbg !46
  %215 = insertelement <2 x i32> %209, i32 %214, i64 1, !dbg !46
  store <2 x i32> %215, ptr addrspace(1) %131, align 8, !dbg !46
  br label %216, !dbg !46

216:                                              ; preds = %203, %170
  %217 = and i32 %17, 511, !dbg !23
  %218 = and i32 %17, 31, !dbg !23
  %219 = fadd float %199, %200, !dbg !49
  %220 = fadd float %201, %219, !dbg !49
  %221 = fadd float %202, %220, !dbg !49
  %222 = select i1 %15, float %221, float 0.000000e+00, !dbg !49
  %223 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %222) #5, !dbg !53
  %224 = icmp eq i32 %218, 0, !dbg !53
  br i1 %224, label %225, label %229, !dbg !53

225:                                              ; preds = %216
  %226 = lshr exact i32 %217, 5, !dbg !23
  %227 = zext nneg i32 %226 to i64, !dbg !53
  %228 = getelementptr float, ptr addrspace(3) %11, i64 %227, !dbg !53
  store float %223, ptr addrspace(3) %228, align 4, !dbg !53
  br label %229, !dbg !53

229:                                              ; preds = %225, %216
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !53
  %230 = icmp samesign ult i32 %217, 16, !dbg !53
  %231 = and i64 %16, 511, !dbg !53
  %232 = getelementptr float, ptr addrspace(3) %11, i64 %231, !dbg !53
  br i1 %230, label %233, label %235, !dbg !53

233:                                              ; preds = %229
  %234 = load float, ptr addrspace(3) %232, align 4, !dbg !53
  br label %235, !dbg !53

235:                                              ; preds = %233, %229
  %236 = phi float [ %234, %233 ], [ undef, %229 ], !dbg !52
  %237 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %236, i32 16) #5, !dbg !53
  %238 = and i32 %17, 15, !dbg !53
  %239 = icmp eq i32 %238, 0, !dbg !53
  %240 = and i1 %230, %239, !dbg !53
  br i1 %240, label %241, label %242, !dbg !53

241:                                              ; preds = %235
  store float %237, ptr addrspace(3) %232, align 4, !dbg !53
  br label %242, !dbg !53

242:                                              ; preds = %241, %235
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !53
  %243 = load float, ptr addrspace(3) %11, align 4, !dbg !53
  %244 = fmul float %243, 0x3F30000000000000, !dbg !54
  %245 = fptrunc double %6 to float, !dbg !55
  %246 = fadd float %244, %245, !dbg !56
  %247 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %246) #6, !dbg !57
  br i1 %15, label %.split.us.preheader, label %.split33.us

.split.us.preheader:                              ; preds = %242
  %248 = zext nneg i32 %19 to i64, !dbg !58
  %249 = getelementptr bfloat, ptr addrspace(1) %5, i64 %248, !dbg !59
  %250 = getelementptr inbounds nuw i8, ptr addrspace(1) %249, i64 6, !dbg !60
  %251 = load i16, ptr addrspace(1) %250, align 2, !dbg !60
  %252 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %251) #4
  %253 = getelementptr inbounds nuw i8, ptr addrspace(1) %249, i64 4, !dbg !60
  %254 = load i16, ptr addrspace(1) %253, align 4, !dbg !60
  %255 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %254) #4
  %256 = getelementptr inbounds nuw i8, ptr addrspace(1) %249, i64 2, !dbg !60
  %257 = load i16, ptr addrspace(1) %256, align 2, !dbg !60
  %258 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %257) #4
  %259 = load i16, ptr addrspace(1) %249, align 8, !dbg !60
  %260 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %259) #4
  %261 = load i16, ptr addrspace(1) %35, align 8, !dbg !61
  %262 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %261) #4
  %263 = fmul float %247, %262, !dbg !62
  %264 = fmul float %260, %263, !dbg !63
  %265 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %264) #4
  %266 = insertelement <2 x i16> poison, i16 %265, i64 0, !dbg !64
  %267 = getelementptr inbounds nuw i8, ptr addrspace(1) %35, i64 2, !dbg !61
  %268 = load i16, ptr addrspace(1) %267, align 2, !dbg !61
  %269 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %268) #4
  %270 = fmul float %247, %269, !dbg !62
  %271 = fmul float %258, %270, !dbg !63
  %272 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %271) #4
  %273 = insertelement <2 x i16> %266, i16 %272, i64 1, !dbg !64
  %274 = bitcast <2 x i16> %273 to i32, !dbg !64
  %275 = insertelement <2 x i32> poison, i32 %274, i64 0, !dbg !64
  %276 = getelementptr inbounds nuw i8, ptr addrspace(1) %35, i64 4, !dbg !61
  %277 = load i16, ptr addrspace(1) %276, align 4, !dbg !61
  %278 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %277) #4
  %279 = fmul float %247, %278, !dbg !62
  %280 = fmul float %255, %279, !dbg !63
  %281 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %280) #4
  %282 = insertelement <2 x i16> poison, i16 %281, i64 0, !dbg !64
  %283 = getelementptr inbounds nuw i8, ptr addrspace(1) %35, i64 6, !dbg !61
  %284 = load i16, ptr addrspace(1) %283, align 2, !dbg !61
  %285 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %284) #4
  %286 = fmul float %247, %285, !dbg !62
  %287 = fmul float %252, %286, !dbg !63
  %288 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %287) #4
  %289 = insertelement <2 x i16> %282, i16 %288, i64 1, !dbg !64
  %290 = bitcast <2 x i16> %289 to i32, !dbg !64
  %291 = insertelement <2 x i32> %275, i32 %290, i64 1, !dbg !64
  %292 = getelementptr bfloat, ptr addrspace(1) %7, i64 %22, !dbg !65
  store <2 x i32> %291, ptr addrspace(1) %292, align 8, !dbg !64
  %293 = getelementptr bfloat, ptr addrspace(1) %5, i64 %248, !dbg !59
  %294 = getelementptr i8, ptr addrspace(1) %293, i64 4096, !dbg !59
  %295 = getelementptr i8, ptr addrspace(1) %293, i64 4102, !dbg !60
  %296 = load i16, ptr addrspace(1) %295, align 2, !dbg !60
  %297 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %296) #4
  %298 = getelementptr i8, ptr addrspace(1) %293, i64 4100, !dbg !60
  %299 = load i16, ptr addrspace(1) %298, align 4, !dbg !60
  %300 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %299) #4
  %301 = getelementptr i8, ptr addrspace(1) %293, i64 4098, !dbg !60
  %302 = load i16, ptr addrspace(1) %301, align 2, !dbg !60
  %303 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %302) #4
  %304 = load i16, ptr addrspace(1) %294, align 8, !dbg !60
  %305 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %304) #4
  %306 = load i16, ptr addrspace(1) %131, align 8, !dbg !61
  %307 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %306) #4
  %308 = fmul float %247, %307, !dbg !62
  %309 = fmul float %305, %308, !dbg !63
  %310 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %309) #4
  %311 = insertelement <2 x i16> poison, i16 %310, i64 0, !dbg !64
  %312 = getelementptr inbounds nuw i8, ptr addrspace(1) %131, i64 2, !dbg !61
  %313 = load i16, ptr addrspace(1) %312, align 2, !dbg !61
  %314 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %313) #4
  %315 = fmul float %247, %314, !dbg !62
  %316 = fmul float %303, %315, !dbg !63
  %317 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %316) #4
  %318 = insertelement <2 x i16> %311, i16 %317, i64 1, !dbg !64
  %319 = bitcast <2 x i16> %318 to i32, !dbg !64
  %320 = insertelement <2 x i32> poison, i32 %319, i64 0, !dbg !64
  %321 = getelementptr inbounds nuw i8, ptr addrspace(1) %131, i64 4, !dbg !61
  %322 = load i16, ptr addrspace(1) %321, align 4, !dbg !61
  %323 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %322) #4
  %324 = fmul float %247, %323, !dbg !62
  %325 = fmul float %300, %324, !dbg !63
  %326 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %325) #4
  %327 = insertelement <2 x i16> poison, i16 %326, i64 0, !dbg !64
  %328 = getelementptr inbounds nuw i8, ptr addrspace(1) %131, i64 6, !dbg !61
  %329 = load i16, ptr addrspace(1) %328, align 2, !dbg !61
  %330 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %329) #4
  %331 = fmul float %247, %330, !dbg !62
  %332 = fmul float %297, %331, !dbg !63
  %333 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %332) #4
  %334 = insertelement <2 x i16> %327, i16 %333, i64 1, !dbg !64
  %335 = bitcast <2 x i16> %334 to i32, !dbg !64
  %336 = insertelement <2 x i32> %320, i32 %335, i64 1, !dbg !64
  %337 = getelementptr bfloat, ptr addrspace(1) %7, i64 %122, !dbg !65
  store <2 x i32> %336, ptr addrspace(1) %337, align 8, !dbg !64
  br label %.split33.us, !dbg !66

.split33.us:                                      ; preds = %242, %.split.us.preheader
  ret void, !dbg !66
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c3nbbmxhdbckzm7e5rm5k7nkahzchxepqqsqhvhz6ekr33rflurt.py", directory: "/tmp/torchinductor_jovyan/3n")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 46, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 51, scope: !18)
!27 = !DILocation(line: 35, column: 34, scope: !18)
!28 = !DILocation(line: 35, column: 113, scope: !18)
!29 = !DILocation(line: 36, column: 38, scope: !18)
!30 = !DILocation(line: 36, column: 55, scope: !18)
!31 = !DILocation(line: 36, column: 117, scope: !18)
!32 = !DILocation(line: 37, column: 51, scope: !18)
!33 = !DILocation(line: 37, column: 34, scope: !18)
!34 = !DILocation(line: 37, column: 113, scope: !18)
!35 = !DILocation(line: 38, column: 51, scope: !18)
!36 = !DILocation(line: 38, column: 34, scope: !18)
!37 = !DILocation(line: 38, column: 113, scope: !18)
!38 = !DILocation(line: 39, column: 51, scope: !18)
!39 = !DILocation(line: 39, column: 34, scope: !18)
!40 = !DILocation(line: 39, column: 113, scope: !18)
!41 = !DILocation(line: 40, column: 22, scope: !18)
!42 = !DILocation(line: 41, column: 22, scope: !18)
!43 = !DILocation(line: 42, column: 22, scope: !18)
!44 = !DILocation(line: 43, column: 22, scope: !18)
!45 = !DILocation(line: 45, column: 23, scope: !18)
!46 = !DILocation(line: 49, column: 55, scope: !18)
!47 = !DILocation(line: 35, column: 41, scope: !18)
!48 = !DILocation(line: 47, column: 25, scope: !18)
!49 = !DILocation(line: 260, column: 15, scope: !50, inlinedAt: !52)
!50 = distinct !DILexicalBlockFile(scope: !18, file: !51, discriminator: 0)
!51 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!52 = !DILocation(line: 50, column: 27, scope: !18)
!53 = !DILocation(line: 290, column: 36, scope: !50, inlinedAt: !52)
!54 = !DILocation(line: 62, column: 25, scope: !18)
!55 = !DILocation(line: 63, column: 25, scope: !18)
!56 = !DILocation(line: 64, column: 24, scope: !18)
!57 = !DILocation(line: 65, column: 32, scope: !18)
!58 = !DILocation(line: 52, column: 40, scope: !18)
!59 = !DILocation(line: 58, column: 35, scope: !18)
!60 = !DILocation(line: 58, column: 95, scope: !18)
!61 = !DILocation(line: 59, column: 118, scope: !18)
!62 = !DILocation(line: 66, column: 24, scope: !18)
!63 = !DILocation(line: 68, column: 24, scope: !18)
!64 = !DILocation(line: 69, column: 53, scope: !18)
!65 = !DILocation(line: 69, column: 29, scope: !18)
!66 = !DILocation(line: 52, column: 4, scope: !18)
