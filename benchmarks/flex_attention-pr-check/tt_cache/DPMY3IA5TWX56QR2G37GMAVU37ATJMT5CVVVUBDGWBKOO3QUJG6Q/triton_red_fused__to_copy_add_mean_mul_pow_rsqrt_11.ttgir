#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0)
#loc1 = loc(unknown)
#loc26 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":47:27)
#loc60 = loc(callsite(#loc1 at #loc26))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg5: f64 loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16, #blocked> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<4.096000e+03> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc2)
    %2 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc3)
    %3 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc5)
    %5 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc6)
    %6 = scf.for %arg8 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg9 = %cst_2) -> (tensor<1x2048xf32, #blocked>)  : i32 {
      %17 = tt.splat %arg8 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc8)
      %18 = arith.addi %17, %1 : tensor<1x2048xi32, #blocked> loc(#loc8)
      %19 = arith.cmpi slt, %18, %cst : tensor<1x2048xi32, #blocked> loc(#loc9)
      %20 = tt.addptr %2, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc3)
      %21 = tt.load %20, %19, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc10)
      %22 = arith.extf %21 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc11)
      %23 = tt.addptr %3, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc4)
      %24 = tt.load %23, %19, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc12)
      %25 = arith.extf %24 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc13)
      %26 = tt.addptr %4, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc5)
      %27 = tt.load %26, %19, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc14)
      %28 = arith.extf %27 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc15)
      %29 = tt.addptr %5, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc6)
      %30 = tt.load %29, %19, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc16)
      %31 = arith.extf %30 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc17)
      %32 = arith.addf %22, %25 : tensor<1x2048xf32, #blocked> loc(#loc18)
      %33 = arith.addf %32, %28 : tensor<1x2048xf32, #blocked> loc(#loc19)
      %34 = arith.addf %33, %31 : tensor<1x2048xf32, #blocked> loc(#loc20)
      %35 = arith.mulf %34, %34 : tensor<1x2048xf32, #blocked> loc(#loc21)
      %36 = arith.addf %arg9, %35 : tensor<1x2048xf32, #blocked> loc(#loc22)
      %37 = arith.select %19, %36, %arg9 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc23)
      scf.yield %37 : tensor<1x2048xf32, #blocked> loc(#loc24)
    } loc(#loc7)
    %7 = "tt.reduce"(%6) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc26)), %arg9: f32 loc(callsite(#loc1 at #loc26))):
      %17 = arith.addf %arg8, %arg9 : f32 loc(#loc61)
      tt.reduce.return %17 : f32 loc(#loc59)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc59)
    %8 = tt.expand_dims %7 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc28)
    %9 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc29)
    %10 = arith.divf %8, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc30)
    %11 = arith.truncf %arg5 : f64 to f32 loc(#loc31)
    %12 = tt.splat %11 : f32 -> tensor<1x1xf32, #blocked> loc(#loc32)
    %13 = arith.addf %10, %12 : tensor<1x1xf32, #blocked> loc(#loc32)
    %14 = tt.extern_elementwise %13 {libname = "", libpath = "", pure = true, symbol = "__imf_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc33)
    %15 = tt.broadcast %14 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc34)
    %16 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc35)
    scf.for %arg8 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %17 = tt.splat %arg8 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc37)
      %18 = arith.addi %17, %1 : tensor<1x2048xi32, #blocked> loc(#loc37)
      %19 = arith.cmpi slt, %18, %cst : tensor<1x2048xi32, #blocked> loc(#loc38)
      %20 = tt.addptr %9, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc29)
      %21 = tt.load %20, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc39)
      %22 = arith.extf %21 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc40)
      %23 = tt.addptr %2, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc41)
      %24 = tt.load %23, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc42)
      %25 = arith.extf %24 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc43)
      %26 = tt.addptr %3, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc44)
      %27 = tt.load %26, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc45)
      %28 = arith.extf %27 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc46)
      %29 = tt.addptr %4, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc47)
      %30 = tt.load %29, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc48)
      %31 = arith.extf %30 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc49)
      %32 = tt.addptr %5, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc50)
      %33 = tt.load %32, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc51)
      %34 = arith.extf %33 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc52)
      %35 = arith.addf %25, %28 : tensor<1x2048xf32, #blocked> loc(#loc53)
      %36 = arith.addf %35, %31 : tensor<1x2048xf32, #blocked> loc(#loc54)
      %37 = arith.addf %36, %34 : tensor<1x2048xf32, #blocked> loc(#loc55)
      %38 = arith.mulf %37, %15 : tensor<1x2048xf32, #blocked> loc(#loc34)
      %39 = arith.mulf %22, %38 : tensor<1x2048xf32, #blocked> loc(#loc56)
      %40 = tt.addptr %16, %18 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc35)
      %41 = arith.truncf %39 : tensor<1x2048xf32, #blocked> to tensor<1x2048xbf16, #blocked> loc(#loc57)
      tt.store %40, %41, %19 {ttig.block_io = "row_major"} : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc57)
    } loc(#loc36)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":26:37)
#loc3 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":35:34)
#loc4 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":36:34)
#loc5 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":37:34)
#loc6 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":38:34)
#loc7 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":29:40)
#loc8 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":30:31)
#loc9 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":31:29)
#loc10 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":35:41)
#loc11 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":35:94)
#loc12 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":36:41)
#loc13 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":36:94)
#loc14 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":37:41)
#loc15 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":37:94)
#loc16 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":38:41)
#loc17 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":38:94)
#loc18 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":39:22)
#loc19 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":40:22)
#loc20 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":41:22)
#loc21 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":43:22)
#loc22 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":45:25)
#loc23 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":46:42)
#loc24 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":46:8)
#loc25 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc27 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc28 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":47:30)
#loc29 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":55:35)
#loc30 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":65:25)
#loc31 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":66:25)
#loc32 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":67:24)
#loc33 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":68:32)
#loc34 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":69:24)
#loc35 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":72:29)
#loc36 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":49:40)
#loc37 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":50:31)
#loc38 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":51:29)
#loc39 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":55:42)
#loc40 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":55:96)
#loc41 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":56:35)
#loc42 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":56:42)
#loc43 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":56:96)
#loc44 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":57:35)
#loc45 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":57:42)
#loc46 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":57:96)
#loc47 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":58:35)
#loc48 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":58:42)
#loc49 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":58:96)
#loc50 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":59:35)
#loc51 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":59:42)
#loc52 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":59:96)
#loc53 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":60:24)
#loc54 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":61:24)
#loc55 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":62:24)
#loc56 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":71:24)
#loc57 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":72:80)
#loc58 = loc("/tmp/torchinductor_jovyan/vs/cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py":49:4)
#loc59 = loc(callsite(#loc25 at #loc26))
#loc61 = loc(callsite(#loc27 at #loc59))
