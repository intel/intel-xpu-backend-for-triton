; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, double %5, ptr addrspace(1) writeonly captures(none) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8, ptr addrspace(3) captures(none) %9) local_unnamed_addr #2 !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %11 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !20
  %12 = trunc i64 %11 to i32, !dbg !20
  %13 = shl i64 %11, 2, !dbg !20
  %14 = and i64 %13, 2044, !dbg !20
  %15 = getelementptr bfloat, ptr addrspace(1) %0, i64 %14, !dbg !21
  %16 = load i16, ptr addrspace(1) %15, align 8, !dbg !22
  %17 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %16) #4
  %18 = getelementptr inbounds nuw i8, ptr addrspace(1) %15, i64 2, !dbg !22
  %19 = load i16, ptr addrspace(1) %18, align 2, !dbg !22
  %20 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %19) #4
  %21 = getelementptr inbounds nuw i8, ptr addrspace(1) %15, i64 4, !dbg !22
  %22 = load i16, ptr addrspace(1) %21, align 4, !dbg !22
  %23 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %22) #4
  %24 = getelementptr inbounds nuw i8, ptr addrspace(1) %15, i64 6, !dbg !22
  %25 = load i16, ptr addrspace(1) %24, align 2, !dbg !22
  %26 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %25) #4
  %27 = getelementptr bfloat, ptr addrspace(1) %1, i64 %14, !dbg !23
  %28 = load i16, ptr addrspace(1) %27, align 8, !dbg !24
  %29 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %28) #4
  %30 = getelementptr inbounds nuw i8, ptr addrspace(1) %27, i64 2, !dbg !24
  %31 = load i16, ptr addrspace(1) %30, align 2, !dbg !24
  %32 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %31) #4
  %33 = getelementptr inbounds nuw i8, ptr addrspace(1) %27, i64 4, !dbg !24
  %34 = load i16, ptr addrspace(1) %33, align 4, !dbg !24
  %35 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %34) #4
  %36 = getelementptr inbounds nuw i8, ptr addrspace(1) %27, i64 6, !dbg !24
  %37 = load i16, ptr addrspace(1) %36, align 2, !dbg !24
  %38 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %37) #4
  %39 = getelementptr bfloat, ptr addrspace(1) %2, i64 %14, !dbg !25
  %40 = load i16, ptr addrspace(1) %39, align 8, !dbg !26
  %41 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %40) #4
  %42 = getelementptr inbounds nuw i8, ptr addrspace(1) %39, i64 2, !dbg !26
  %43 = load i16, ptr addrspace(1) %42, align 2, !dbg !26
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #4
  %45 = getelementptr inbounds nuw i8, ptr addrspace(1) %39, i64 4, !dbg !26
  %46 = load i16, ptr addrspace(1) %45, align 4, !dbg !26
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #4
  %48 = getelementptr inbounds nuw i8, ptr addrspace(1) %39, i64 6, !dbg !26
  %49 = load i16, ptr addrspace(1) %48, align 2, !dbg !26
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #4
  %51 = getelementptr bfloat, ptr addrspace(1) %3, i64 %14, !dbg !27
  %52 = load i16, ptr addrspace(1) %51, align 8, !dbg !28
  %53 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %52) #4
  %54 = getelementptr inbounds nuw i8, ptr addrspace(1) %51, i64 2, !dbg !28
  %55 = load i16, ptr addrspace(1) %54, align 2, !dbg !28
  %56 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %55) #4
  %57 = getelementptr inbounds nuw i8, ptr addrspace(1) %51, i64 4, !dbg !28
  %58 = load i16, ptr addrspace(1) %57, align 4, !dbg !28
  %59 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %58) #4
  %60 = getelementptr inbounds nuw i8, ptr addrspace(1) %51, i64 6, !dbg !28
  %61 = load i16, ptr addrspace(1) %60, align 2, !dbg !28
  %62 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %61) #4
  %63 = fadd float %17, %29, !dbg !29
  %64 = fadd float %20, %32, !dbg !29
  %65 = fadd float %23, %35, !dbg !29
  %66 = fadd float %26, %38, !dbg !29
  %67 = fadd float %63, %41, !dbg !30
  %68 = fadd float %64, %44, !dbg !30
  %69 = fadd float %65, %47, !dbg !30
  %70 = fadd float %66, %50, !dbg !30
  %71 = fadd float %67, %53, !dbg !31
  %72 = fadd float %68, %56, !dbg !31
  %73 = fadd float %69, %59, !dbg !31
  %74 = fadd float %70, %62, !dbg !31
  %75 = fmul float %71, %71, !dbg !32
  %76 = fmul float %72, %72, !dbg !32
  %77 = fmul float %73, %73, !dbg !32
  %78 = fmul float %74, %74, !dbg !32
  %79 = or disjoint i64 %14, 2048, !dbg !33
  %80 = getelementptr bfloat, ptr addrspace(1) %0, i64 %79, !dbg !21
  %81 = load i16, ptr addrspace(1) %80, align 8, !dbg !22
  %82 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %81) #4
  %83 = getelementptr inbounds nuw i8, ptr addrspace(1) %80, i64 2, !dbg !22
  %84 = load i16, ptr addrspace(1) %83, align 2, !dbg !22
  %85 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %84) #4
  %86 = getelementptr inbounds nuw i8, ptr addrspace(1) %80, i64 4, !dbg !22
  %87 = load i16, ptr addrspace(1) %86, align 4, !dbg !22
  %88 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %87) #4
  %89 = getelementptr inbounds nuw i8, ptr addrspace(1) %80, i64 6, !dbg !22
  %90 = load i16, ptr addrspace(1) %89, align 2, !dbg !22
  %91 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %90) #4
  %92 = getelementptr bfloat, ptr addrspace(1) %1, i64 %79, !dbg !23
  %93 = load i16, ptr addrspace(1) %92, align 8, !dbg !24
  %94 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %93) #4
  %95 = getelementptr inbounds nuw i8, ptr addrspace(1) %92, i64 2, !dbg !24
  %96 = load i16, ptr addrspace(1) %95, align 2, !dbg !24
  %97 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %96) #4
  %98 = getelementptr inbounds nuw i8, ptr addrspace(1) %92, i64 4, !dbg !24
  %99 = load i16, ptr addrspace(1) %98, align 4, !dbg !24
  %100 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %99) #4
  %101 = getelementptr inbounds nuw i8, ptr addrspace(1) %92, i64 6, !dbg !24
  %102 = load i16, ptr addrspace(1) %101, align 2, !dbg !24
  %103 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %102) #4
  %104 = getelementptr bfloat, ptr addrspace(1) %2, i64 %79, !dbg !25
  %105 = load i16, ptr addrspace(1) %104, align 8, !dbg !26
  %106 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %105) #4
  %107 = getelementptr inbounds nuw i8, ptr addrspace(1) %104, i64 2, !dbg !26
  %108 = load i16, ptr addrspace(1) %107, align 2, !dbg !26
  %109 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %108) #4
  %110 = getelementptr inbounds nuw i8, ptr addrspace(1) %104, i64 4, !dbg !26
  %111 = load i16, ptr addrspace(1) %110, align 4, !dbg !26
  %112 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %111) #4
  %113 = getelementptr inbounds nuw i8, ptr addrspace(1) %104, i64 6, !dbg !26
  %114 = load i16, ptr addrspace(1) %113, align 2, !dbg !26
  %115 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %114) #4
  %116 = getelementptr bfloat, ptr addrspace(1) %3, i64 %79, !dbg !27
  %117 = load i16, ptr addrspace(1) %116, align 8, !dbg !28
  %118 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %117) #4
  %119 = getelementptr inbounds nuw i8, ptr addrspace(1) %116, i64 2, !dbg !28
  %120 = load i16, ptr addrspace(1) %119, align 2, !dbg !28
  %121 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %120) #4
  %122 = getelementptr inbounds nuw i8, ptr addrspace(1) %116, i64 4, !dbg !28
  %123 = load i16, ptr addrspace(1) %122, align 4, !dbg !28
  %124 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %123) #4
  %125 = getelementptr inbounds nuw i8, ptr addrspace(1) %116, i64 6, !dbg !28
  %126 = load i16, ptr addrspace(1) %125, align 2, !dbg !28
  %127 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %126) #4
  %128 = fadd float %82, %94, !dbg !29
  %129 = fadd float %85, %97, !dbg !29
  %130 = fadd float %88, %100, !dbg !29
  %131 = fadd float %91, %103, !dbg !29
  %132 = fadd float %128, %106, !dbg !30
  %133 = fadd float %129, %109, !dbg !30
  %134 = fadd float %130, %112, !dbg !30
  %135 = fadd float %131, %115, !dbg !30
  %136 = fadd float %132, %118, !dbg !31
  %137 = fadd float %133, %121, !dbg !31
  %138 = fadd float %134, %124, !dbg !31
  %139 = fadd float %135, %127, !dbg !31
  %140 = fmul float %136, %136, !dbg !32
  %141 = fmul float %137, %137, !dbg !32
  %142 = fmul float %138, %138, !dbg !32
  %143 = fmul float %139, %139, !dbg !32
  %144 = fadd float %75, %140, !dbg !34
  %145 = fadd float %76, %141, !dbg !34
  %146 = fadd float %77, %142, !dbg !34
  %147 = fadd float %78, %143, !dbg !34
  %148 = and i32 %12, 511, !dbg !20
  %149 = and i32 %12, 31, !dbg !20
  %150 = fadd float %144, %145, !dbg !35
  %151 = fadd float %146, %150, !dbg !35
  %152 = fadd float %147, %151, !dbg !35
  %153 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %152) #5, !dbg !39
  %154 = icmp eq i32 %149, 0, !dbg !39
  br i1 %154, label %155, label %159, !dbg !39

155:                                              ; preds = %10
  %156 = lshr exact i32 %148, 5, !dbg !20
  %157 = zext nneg i32 %156 to i64, !dbg !39
  %158 = getelementptr float, ptr addrspace(3) %9, i64 %157, !dbg !39
  store float %153, ptr addrspace(3) %158, align 4, !dbg !39
  br label %159, !dbg !39

159:                                              ; preds = %155, %10
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !39
  %160 = icmp samesign ult i32 %148, 16, !dbg !39
  %161 = and i64 %11, 511, !dbg !39
  %162 = getelementptr float, ptr addrspace(3) %9, i64 %161, !dbg !39
  br i1 %160, label %163, label %165, !dbg !39

163:                                              ; preds = %159
  %164 = load float, ptr addrspace(3) %162, align 4, !dbg !39
  br label %165, !dbg !39

165:                                              ; preds = %163, %159
  %166 = phi float [ %164, %163 ], [ undef, %159 ], !dbg !38
  %167 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %166, i32 16) #5, !dbg !39
  %168 = and i32 %12, 15, !dbg !39
  %169 = icmp eq i32 %168, 0, !dbg !39
  %170 = and i1 %160, %169, !dbg !39
  br i1 %170, label %171, label %172, !dbg !39

171:                                              ; preds = %165
  store float %167, ptr addrspace(3) %162, align 4, !dbg !39
  br label %172, !dbg !39

172:                                              ; preds = %171, %165
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !39
  %173 = load float, ptr addrspace(3) %9, align 4, !dbg !39
  %174 = fmul float %173, 0x3F30000000000000, !dbg !40
  %175 = fptrunc double %5 to float, !dbg !41
  %176 = fadd float %174, %175, !dbg !42
  %177 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %176) #6, !dbg !43
  %178 = getelementptr bfloat, ptr addrspace(1) %4, i64 %14, !dbg !44
  %179 = load i16, ptr addrspace(1) %178, align 8, !dbg !45
  %180 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %179) #4
  %181 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 2, !dbg !45
  %182 = load i16, ptr addrspace(1) %181, align 2, !dbg !45
  %183 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %182) #4
  %184 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 4, !dbg !45
  %185 = load i16, ptr addrspace(1) %184, align 4, !dbg !45
  %186 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %185) #4
  %187 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 6, !dbg !45
  %188 = load i16, ptr addrspace(1) %187, align 2, !dbg !45
  %189 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %188) #4
  %190 = load i16, ptr addrspace(1) %15, align 8, !dbg !46
  %191 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %190) #4
  %192 = load i16, ptr addrspace(1) %18, align 2, !dbg !46
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #4
  %194 = load i16, ptr addrspace(1) %21, align 4, !dbg !46
  %195 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %194) #4
  %196 = load i16, ptr addrspace(1) %24, align 2, !dbg !46
  %197 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %196) #4
  %198 = load i16, ptr addrspace(1) %27, align 8, !dbg !47
  %199 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %198) #4
  %200 = load i16, ptr addrspace(1) %30, align 2, !dbg !47
  %201 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %200) #4
  %202 = load i16, ptr addrspace(1) %33, align 4, !dbg !47
  %203 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %202) #4
  %204 = load i16, ptr addrspace(1) %36, align 2, !dbg !47
  %205 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %204) #4
  %206 = load i16, ptr addrspace(1) %39, align 8, !dbg !48
  %207 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %206) #4
  %208 = load i16, ptr addrspace(1) %42, align 2, !dbg !48
  %209 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %208) #4
  %210 = load i16, ptr addrspace(1) %45, align 4, !dbg !48
  %211 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %210) #4
  %212 = load i16, ptr addrspace(1) %48, align 2, !dbg !48
  %213 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %212) #4
  %214 = load <4 x i16>, ptr addrspace(1) %51, align 8, !dbg !49
  %215 = fadd float %191, %199, !dbg !50
  %216 = fadd float %215, %207, !dbg !51
  %217 = extractelement <4 x i16> %214, i64 0, !dbg !52
  %218 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %217) #4
  %219 = fadd float %216, %218, !dbg !53
  %220 = fmul float %177, %219, !dbg !54
  %221 = fmul float %180, %220, !dbg !55
  %222 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %221) #4
  %223 = insertelement <2 x i16> poison, i16 %222, i64 0, !dbg !56
  %224 = fadd float %193, %201, !dbg !50
  %225 = fadd float %224, %209, !dbg !51
  %226 = extractelement <4 x i16> %214, i64 1, !dbg !52
  %227 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %226) #4
  %228 = fadd float %225, %227, !dbg !53
  %229 = fmul float %177, %228, !dbg !54
  %230 = fmul float %183, %229, !dbg !55
  %231 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %230) #4
  %232 = insertelement <2 x i16> %223, i16 %231, i64 1, !dbg !56
  %233 = bitcast <2 x i16> %232 to i32, !dbg !56
  %234 = insertelement <2 x i32> poison, i32 %233, i64 0, !dbg !56
  %235 = fadd float %195, %203, !dbg !50
  %236 = fadd float %235, %211, !dbg !51
  %237 = extractelement <4 x i16> %214, i64 2, !dbg !52
  %238 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %237) #4
  %239 = fadd float %236, %238, !dbg !53
  %240 = fmul float %177, %239, !dbg !54
  %241 = fmul float %186, %240, !dbg !55
  %242 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %241) #4
  %243 = insertelement <2 x i16> poison, i16 %242, i64 0, !dbg !56
  %244 = fadd float %197, %205, !dbg !50
  %245 = fadd float %244, %213, !dbg !51
  %246 = extractelement <4 x i16> %214, i64 3, !dbg !52
  %247 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %246) #4
  %248 = fadd float %245, %247, !dbg !53
  %249 = fmul float %177, %248, !dbg !54
  %250 = fmul float %189, %249, !dbg !55
  %251 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %250) #4
  %252 = insertelement <2 x i16> %243, i16 %251, i64 1, !dbg !56
  %253 = bitcast <2 x i16> %252 to i32, !dbg !56
  %254 = insertelement <2 x i32> %234, i32 %253, i64 1, !dbg !56
  %255 = getelementptr bfloat, ptr addrspace(1) %6, i64 %14, !dbg !57
  store <2 x i32> %254, ptr addrspace(1) %255, align 8, !dbg !56
  %256 = getelementptr bfloat, ptr addrspace(1) %4, i64 %79, !dbg !44
  %257 = load i16, ptr addrspace(1) %256, align 8, !dbg !45
  %258 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %257) #4
  %259 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 2, !dbg !45
  %260 = load i16, ptr addrspace(1) %259, align 2, !dbg !45
  %261 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %260) #4
  %262 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 4, !dbg !45
  %263 = load i16, ptr addrspace(1) %262, align 4, !dbg !45
  %264 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %263) #4
  %265 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 6, !dbg !45
  %266 = load i16, ptr addrspace(1) %265, align 2, !dbg !45
  %267 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %266) #4
  %268 = load i16, ptr addrspace(1) %80, align 8, !dbg !46
  %269 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %268) #4
  %270 = load i16, ptr addrspace(1) %83, align 2, !dbg !46
  %271 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %270) #4
  %272 = load i16, ptr addrspace(1) %86, align 4, !dbg !46
  %273 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %272) #4
  %274 = load i16, ptr addrspace(1) %89, align 2, !dbg !46
  %275 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %274) #4
  %276 = load i16, ptr addrspace(1) %92, align 8, !dbg !47
  %277 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %276) #4
  %278 = load i16, ptr addrspace(1) %95, align 2, !dbg !47
  %279 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %278) #4
  %280 = load i16, ptr addrspace(1) %98, align 4, !dbg !47
  %281 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %280) #4
  %282 = load i16, ptr addrspace(1) %101, align 2, !dbg !47
  %283 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %282) #4
  %284 = load i16, ptr addrspace(1) %104, align 8, !dbg !48
  %285 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %284) #4
  %286 = load i16, ptr addrspace(1) %107, align 2, !dbg !48
  %287 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %286) #4
  %288 = load i16, ptr addrspace(1) %110, align 4, !dbg !48
  %289 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %288) #4
  %290 = load i16, ptr addrspace(1) %113, align 2, !dbg !48
  %291 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %290) #4
  %292 = load <4 x i16>, ptr addrspace(1) %116, align 8, !dbg !49
  %293 = fadd float %269, %277, !dbg !50
  %294 = fadd float %293, %285, !dbg !51
  %295 = extractelement <4 x i16> %292, i64 0, !dbg !52
  %296 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %295) #4
  %297 = fadd float %294, %296, !dbg !53
  %298 = fmul float %177, %297, !dbg !54
  %299 = fmul float %258, %298, !dbg !55
  %300 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %299) #4
  %301 = insertelement <2 x i16> poison, i16 %300, i64 0, !dbg !56
  %302 = fadd float %271, %279, !dbg !50
  %303 = fadd float %302, %287, !dbg !51
  %304 = extractelement <4 x i16> %292, i64 1, !dbg !52
  %305 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %304) #4
  %306 = fadd float %303, %305, !dbg !53
  %307 = fmul float %177, %306, !dbg !54
  %308 = fmul float %261, %307, !dbg !55
  %309 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %308) #4
  %310 = insertelement <2 x i16> %301, i16 %309, i64 1, !dbg !56
  %311 = bitcast <2 x i16> %310 to i32, !dbg !56
  %312 = insertelement <2 x i32> poison, i32 %311, i64 0, !dbg !56
  %313 = fadd float %273, %281, !dbg !50
  %314 = fadd float %313, %289, !dbg !51
  %315 = extractelement <4 x i16> %292, i64 2, !dbg !52
  %316 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %315) #4
  %317 = fadd float %314, %316, !dbg !53
  %318 = fmul float %177, %317, !dbg !54
  %319 = fmul float %264, %318, !dbg !55
  %320 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %319) #4
  %321 = insertelement <2 x i16> poison, i16 %320, i64 0, !dbg !56
  %322 = fadd float %275, %283, !dbg !50
  %323 = fadd float %322, %291, !dbg !51
  %324 = extractelement <4 x i16> %292, i64 3, !dbg !52
  %325 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %324) #4
  %326 = fadd float %323, %325, !dbg !53
  %327 = fmul float %177, %326, !dbg !54
  %328 = fmul float %267, %327, !dbg !55
  %329 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %328) #4
  %330 = insertelement <2 x i16> %321, i16 %329, i64 1, !dbg !56
  %331 = bitcast <2 x i16> %330 to i32, !dbg !56
  %332 = insertelement <2 x i32> %312, i32 %331, i64 1, !dbg !56
  %333 = getelementptr bfloat, ptr addrspace(1) %6, i64 %79, !dbg !57
  store <2 x i32> %332, ptr addrspace(1) %333, align 8, !dbg !56
  ret void, !dbg !58
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cvs6mgqwuuih2f5k2tv53veifsfkj4ssavrem3pz4ynzabopb6l6.py", directory: "/tmp/torchinductor_jovyan/vs")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 512, i64 1, i64 1}
!20 = !DILocation(line: 26, column: 37, scope: !17)
!21 = !DILocation(line: 35, column: 34, scope: !17)
!22 = !DILocation(line: 35, column: 94, scope: !17)
!23 = !DILocation(line: 36, column: 34, scope: !17)
!24 = !DILocation(line: 36, column: 94, scope: !17)
!25 = !DILocation(line: 37, column: 34, scope: !17)
!26 = !DILocation(line: 37, column: 94, scope: !17)
!27 = !DILocation(line: 38, column: 34, scope: !17)
!28 = !DILocation(line: 38, column: 94, scope: !17)
!29 = !DILocation(line: 39, column: 22, scope: !17)
!30 = !DILocation(line: 40, column: 22, scope: !17)
!31 = !DILocation(line: 41, column: 22, scope: !17)
!32 = !DILocation(line: 43, column: 22, scope: !17)
!33 = !DILocation(line: 30, column: 31, scope: !17)
!34 = !DILocation(line: 45, column: 25, scope: !17)
!35 = !DILocation(line: 260, column: 15, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !17, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!38 = !DILocation(line: 47, column: 27, scope: !17)
!39 = !DILocation(line: 290, column: 36, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 65, column: 25, scope: !17)
!41 = !DILocation(line: 66, column: 25, scope: !17)
!42 = !DILocation(line: 67, column: 24, scope: !17)
!43 = !DILocation(line: 68, column: 32, scope: !17)
!44 = !DILocation(line: 55, column: 35, scope: !17)
!45 = !DILocation(line: 55, column: 96, scope: !17)
!46 = !DILocation(line: 56, column: 96, scope: !17)
!47 = !DILocation(line: 57, column: 96, scope: !17)
!48 = !DILocation(line: 58, column: 96, scope: !17)
!49 = !DILocation(line: 59, column: 42, scope: !17)
!50 = !DILocation(line: 60, column: 24, scope: !17)
!51 = !DILocation(line: 61, column: 24, scope: !17)
!52 = !DILocation(line: 59, column: 96, scope: !17)
!53 = !DILocation(line: 62, column: 24, scope: !17)
!54 = !DILocation(line: 69, column: 24, scope: !17)
!55 = !DILocation(line: 71, column: 24, scope: !17)
!56 = !DILocation(line: 72, column: 80, scope: !17)
!57 = !DILocation(line: 72, column: 29, scope: !17)
!58 = !DILocation(line: 49, column: 4, scope: !17)
