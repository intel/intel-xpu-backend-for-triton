; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i64 %5, i64 %6, i64 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %11 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %12 = trunc i64 %11 to i32, !dbg !20
  %13 = shl i32 %12, 9, !dbg !21
  %14 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %15 = trunc i64 %14 to i32, !dbg !22
  %16 = shl i32 %15, 1, !dbg !22
  %17 = and i32 %16, 510, !dbg !22
  %18 = or disjoint i32 %17, %13, !dbg !23
  %19 = icmp slt i32 %18, %8, !dbg !24
  %.frozen = freeze i32 %18, !dbg !25
  %20 = sdiv i32 %.frozen, 128, !dbg !25
  %21 = sext i32 %20 to i64, !dbg !26
  %22 = srem i64 %21, %5, !dbg !26
  %23 = mul i32 %20, 128, !dbg !27
  %.decomposed = sub i32 %.frozen, %23, !dbg !27
  %24 = sext i32 %18 to i64, !dbg !28
  %25 = sdiv i64 %24, %7, !dbg !28
  %26 = icmp slt i64 %22, %6, !dbg !29
  %27 = sext i32 %.decomposed to i64, !dbg !30
  %28 = and i1 %26, %19, !dbg !31
  br i1 %28, label %29, label %36, !dbg !32

29:                                               ; preds = %10
  %30 = shl i64 %6, 7, !dbg !33
  %31 = mul i64 %30, %25, !dbg !34
  %.idx = shl nsw i64 %22, 8, !dbg !35
  %32 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx, !dbg !35
  %33 = getelementptr bfloat, ptr addrspace(1) %32, i64 %27, !dbg !35
  %34 = getelementptr bfloat, ptr addrspace(1) %33, i64 %31, !dbg !35
  %35 = load <2 x i16>, ptr addrspace(1) %34, align 4, !dbg !32
  br label %36, !dbg !32

36:                                               ; preds = %29, %10
  %bc1 = phi <2 x i16> [ %35, %29 ], [ zeroinitializer, %10 ], !dbg !32
  %37 = extractelement <2 x i16> %bc1, i64 0, !dbg !36
  %38 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %37) #1
  %39 = extractelement <2 x i16> %bc1, i64 1, !dbg !36
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #1
  %41 = icmp sge i64 %22, %6, !dbg !37
  %42 = shl nsw i64 %25, 7, !dbg !38
  %43 = and i1 %41, %19, !dbg !39
  br i1 %43, label %44, label %48, !dbg !40

44:                                               ; preds = %36
  %45 = getelementptr bfloat, ptr addrspace(1) %1, i64 %42, !dbg !41
  %46 = getelementptr bfloat, ptr addrspace(1) %45, i64 %27, !dbg !41
  %47 = load <2 x i16>, ptr addrspace(1) %46, align 4, !dbg !40
  br label %48, !dbg !40

48:                                               ; preds = %44, %36
  %bc2 = phi <2 x i16> [ %47, %44 ], [ zeroinitializer, %36 ], !dbg !40
  %49 = extractelement <2 x i16> %bc2, i64 0, !dbg !42
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #1
  %51 = extractelement <2 x i16> %bc2, i64 1, !dbg !42
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #1
  br i1 %43, label %53, label %58, !dbg !43

53:                                               ; preds = %48
  %54 = srem i32 %18, 64, !dbg !44
  %55 = sext i32 %54 to i64, !dbg !45
  %56 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !45
  %57 = load <2 x float>, ptr addrspace(1) %56, align 8, !dbg !43
  br label %58, !dbg !43

58:                                               ; preds = %53, %48
  %bc3 = phi <2 x float> [ %57, %53 ], [ zeroinitializer, %48 ], !dbg !43
  %59 = extractelement <2 x float> %bc3, i64 0, !dbg !43
  %60 = extractelement <2 x float> %bc3, i64 1, !dbg !43
  %61 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %59), !dbg !46
  %62 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %60), !dbg !46
  %63 = fptrunc double %3 to float, !dbg !47
  %64 = fmul float %61, %63, !dbg !48
  %65 = fmul float %62, %63, !dbg !48
  %66 = fmul float %50, %64, !dbg !49
  %67 = fmul float %52, %65, !dbg !49
  %68 = icmp slt i32 %.decomposed, 64, !dbg !50
  %69 = and i1 %41, %68, !dbg !51
  %70 = and i1 %19, %69, !dbg !52
  br i1 %70, label %71, label %76, !dbg !53

71:                                               ; preds = %58
  %72 = getelementptr bfloat, ptr addrspace(1) %1, i64 %42, !dbg !54
  %73 = getelementptr i8, ptr addrspace(1) %72, i64 128, !dbg !54
  %74 = getelementptr bfloat, ptr addrspace(1) %73, i64 %27, !dbg !54
  %75 = load <2 x i16>, ptr addrspace(1) %74, align 4, !dbg !53
  br label %76, !dbg !53

76:                                               ; preds = %71, %58
  %bc4 = phi <2 x i16> [ %75, %71 ], [ zeroinitializer, %58 ], !dbg !53
  %77 = extractelement <2 x i16> %bc4, i64 0, !dbg !55
  %78 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %77) #1
  %79 = extractelement <2 x i16> %bc4, i64 1, !dbg !55
  %80 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %79) #1
  %81 = fsub float 0.000000e+00, %78, !dbg !56
  %82 = fsub float 0.000000e+00, %80, !dbg !56
  %83 = select i1 %69, float %81, float 0.000000e+00, !dbg !57
  %84 = select i1 %69, float %82, float 0.000000e+00, !dbg !57
  %85 = icmp sgt i32 %.decomposed, 63, !dbg !58
  %86 = and i1 %41, %85, !dbg !59
  %87 = and i1 %19, %86, !dbg !60
  br i1 %87, label %88, label %93, !dbg !61

88:                                               ; preds = %76
  %89 = getelementptr bfloat, ptr addrspace(1) %1, i64 %42, !dbg !62
  %90 = getelementptr bfloat, ptr addrspace(1) %89, i64 %27, !dbg !62
  %91 = getelementptr i8, ptr addrspace(1) %90, i64 -128, !dbg !62
  %92 = load <2 x i16>, ptr addrspace(1) %91, align 4, !dbg !61
  br label %93, !dbg !61

93:                                               ; preds = %88, %76
  %bc5 = phi <2 x i16> [ %92, %88 ], [ zeroinitializer, %76 ], !dbg !61
  %94 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %59), !dbg !63
  %95 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %60), !dbg !63
  br i1 %19, label %96, label %118, !dbg !64

96:                                               ; preds = %93
  %97 = extractelement <2 x i16> %bc5, i64 0, !dbg !65
  %98 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %97) #1
  %99 = select i1 %68, float %83, float %98, !dbg !66
  %100 = fmul float %94, %63, !dbg !67
  %101 = fmul float %100, %99, !dbg !68
  %102 = fadd float %66, %101, !dbg !69
  %103 = select i1 %26, float %38, float %102, !dbg !70
  %104 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %103) #1
  %105 = insertelement <2 x i16> poison, i16 %104, i64 0, !dbg !64
  %106 = extractelement <2 x i16> %bc5, i64 1, !dbg !65
  %107 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %106) #1
  %108 = select i1 %68, float %84, float %107, !dbg !66
  %109 = fmul float %95, %63, !dbg !67
  %110 = fmul float %109, %108, !dbg !68
  %111 = fadd float %67, %110, !dbg !69
  %112 = select i1 %26, float %40, float %111, !dbg !70
  %113 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %112) #1
  %114 = insertelement <2 x i16> %105, i16 %113, i64 1, !dbg !64
  %115 = bitcast <2 x i16> %114 to i32, !dbg !64
  %116 = insertelement <1 x i32> poison, i32 %115, i64 0, !dbg !64
  %117 = getelementptr bfloat, ptr addrspace(1) %4, i64 %24, !dbg !71
  store <1 x i32> %116, ptr addrspace(1) %117, align 4, !dbg !64
  br label %118, !dbg !64

118:                                              ; preds = %96, %93
  ret void, !dbg !72
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c5hnwt5py3yrgfgjnvxlar3ejqn533oqck7cgobw6rhppnoxvld7.py", directory: "/tmp/torchinductor_jovyan/5h")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 256, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 22, column: 21, scope: !17)
!26 = !DILocation(line: 22, column: 28, scope: !17)
!27 = !DILocation(line: 23, column: 19, scope: !17)
!28 = !DILocation(line: 24, column: 19, scope: !17)
!29 = !DILocation(line: 30, column: 18, scope: !17)
!30 = !DILocation(line: 31, column: 35, scope: !17)
!31 = !DILocation(line: 31, column: 66, scope: !17)
!32 = !DILocation(line: 31, column: 59, scope: !17)
!33 = !DILocation(line: 31, column: 50, scope: !17)
!34 = !DILocation(line: 31, column: 54, scope: !17)
!35 = !DILocation(line: 31, column: 30, scope: !17)
!36 = !DILocation(line: 31, column: 117, scope: !17)
!37 = !DILocation(line: 32, column: 19, scope: !17)
!38 = !DILocation(line: 35, column: 39, scope: !17)
!39 = !DILocation(line: 35, column: 51, scope: !17)
!40 = !DILocation(line: 35, column: 44, scope: !17)
!41 = !DILocation(line: 35, column: 30, scope: !17)
!42 = !DILocation(line: 35, column: 102, scope: !17)
!43 = !DILocation(line: 36, column: 43, scope: !17)
!44 = !DILocation(line: 36, column: 37, scope: !17)
!45 = !DILocation(line: 36, column: 32, scope: !17)
!46 = !DILocation(line: 37, column: 24, scope: !17)
!47 = !DILocation(line: 39, column: 21, scope: !17)
!48 = !DILocation(line: 40, column: 20, scope: !17)
!49 = !DILocation(line: 42, column: 19, scope: !17)
!50 = !DILocation(line: 47, column: 20, scope: !17)
!51 = !DILocation(line: 48, column: 20, scope: !17)
!52 = !DILocation(line: 49, column: 60, scope: !17)
!53 = !DILocation(line: 49, column: 52, scope: !17)
!54 = !DILocation(line: 49, column: 31, scope: !17)
!55 = !DILocation(line: 49, column: 111, scope: !17)
!56 = !DILocation(line: 50, column: 13, scope: !17)
!57 = !DILocation(line: 52, column: 35, scope: !17)
!58 = !DILocation(line: 53, column: 21, scope: !17)
!59 = !DILocation(line: 56, column: 20, scope: !17)
!60 = !DILocation(line: 57, column: 63, scope: !17)
!61 = !DILocation(line: 57, column: 55, scope: !17)
!62 = !DILocation(line: 57, column: 31, scope: !17)
!63 = !DILocation(line: 59, column: 24, scope: !17)
!64 = !DILocation(line: 67, column: 37, scope: !17)
!65 = !DILocation(line: 57, column: 114, scope: !17)
!66 = !DILocation(line: 58, column: 35, scope: !17)
!67 = !DILocation(line: 60, column: 20, scope: !17)
!68 = !DILocation(line: 62, column: 20, scope: !17)
!69 = !DILocation(line: 63, column: 20, scope: !17)
!70 = !DILocation(line: 66, column: 33, scope: !17)
!71 = !DILocation(line: 67, column: 25, scope: !17)
!72 = !DILocation(line: 67, column: 4, scope: !17)
