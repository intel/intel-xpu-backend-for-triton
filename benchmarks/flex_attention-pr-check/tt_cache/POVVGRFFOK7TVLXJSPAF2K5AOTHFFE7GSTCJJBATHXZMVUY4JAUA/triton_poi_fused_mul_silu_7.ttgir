#blocked = #ttg.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_poi_fused_mul_silu_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg2 : i32 -> tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc7)
    %9 = tt.load %8, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %10 = arith.extf %9 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc10)
    %13 = tt.load %12, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %14 = arith.extf %13 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc12)
    %15 = arith.subf %cst_0, %10 : tensor<512xf32, #blocked> loc(#loc22)
    %16 = math.exp %15 : tensor<512xf32, #blocked> loc(#loc23)
    %17 = arith.addf %16, %cst : tensor<512xf32, #blocked> loc(#loc24)
    %18 = arith.divf %cst, %17 : tensor<512xf32, #blocked> loc(#loc25)
    %19 = arith.mulf %10, %18 : tensor<512xf32, #blocked> loc(#loc18)
    %20 = arith.mulf %19, %14 : tensor<512xf32, #blocked> loc(#loc19)
    %21 = arith.truncf %20 : tensor<512xf32, #blocked> to tensor<512xbf16, #blocked> loc(#loc20)
    tt.store %8, %21, %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":19:28)
#loc3 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":19:33)
#loc4 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":20:36)
#loc5 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":20:23)
#loc6 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":21:21)
#loc7 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":23:34)
#loc8 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":23:39)
#loc9 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":23:49)
#loc10 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":24:30)
#loc11 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":24:35)
#loc12 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":24:45)
#loc13 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":47:30)
#loc14 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":26:22)
#loc15 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":47:29)
#loc16 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":47:20)
#loc17 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":47:16)
#loc18 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":27:18)
#loc19 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":29:18)
#loc20 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":30:39)
#loc21 = loc("/tmp/torchinductor_jovyan/mq/cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py":30:4)
#loc22 = loc(callsite(#loc13 at #loc14))
#loc23 = loc(callsite(#loc15 at #loc14))
#loc24 = loc(callsite(#loc16 at #loc14))
#loc25 = loc(callsite(#loc17 at #loc14))
