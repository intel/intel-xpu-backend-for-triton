; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@assertFunc_ = internal addrspace(1) constant [8 x i8] c"unknown\00"
@assertFile_ = internal addrspace(1) constant [85 x i8] c"/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py\00"
@assertMessage_ = internal addrspace(1) constant [114 x i8] c"index out of bounds: 0 <= tl.where(ks2 + r0_1 + ks0*x0 < 0, ks2 + ks3 + r0_1 + ks0*x0, ks2 + r0_1 + ks0*x0) < ks3\00"
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32, i32, i64, i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32, i32, i64) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define spir_kernel void @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_0(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i64 %5, i64 %6, i64 %7, i32 %8, i32 %9, ptr addrspace(1) readnone captures(none) %10, ptr addrspace(3) captures(none) %11) local_unnamed_addr #2 !dbg !16 !intel_reqd_sub_group_size !17 !max_work_group_size !18 {
  %13 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !19
  %14 = trunc i64 %13 to i32, !dbg !19
  %15 = shl i32 %14, 3, !dbg !20
  %16 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !21
  %17 = trunc i64 %16 to i32, !dbg !21
  %18 = and i32 %17, 511, !dbg !21
  %19 = and i32 %17, 31, !dbg !21
  %20 = lshr i32 %18, 5, !dbg !21
  %21 = and i32 %17, 7, !dbg !21
  %22 = or disjoint i32 %15, 1, !dbg !22
  %23 = or disjoint i32 %15, 2, !dbg !22
  %24 = or disjoint i32 %15, 3, !dbg !22
  %25 = or disjoint i32 %15, 4, !dbg !22
  %26 = or disjoint i32 %15, 5, !dbg !22
  %27 = or disjoint i32 %15, 6, !dbg !22
  %28 = or disjoint i32 %15, 7, !dbg !22
  %29 = or disjoint i32 %21, %15, !dbg !22
  %30 = icmp slt i32 %15, %8, !dbg !23
  %31 = icmp slt i32 %22, %8, !dbg !23
  %32 = icmp slt i32 %23, %8, !dbg !23
  %33 = icmp slt i32 %24, %8, !dbg !23
  %34 = icmp slt i32 %25, %8, !dbg !23
  %35 = icmp slt i32 %26, %8, !dbg !23
  %36 = icmp slt i32 %27, %8, !dbg !23
  %37 = icmp slt i32 %28, %8, !dbg !23
  %38 = icmp slt i32 %29, %8, !dbg !23
  %39 = icmp slt i64 %4, 0, !dbg !24
  %40 = sext i32 %15 to i64, !dbg !28
  %41 = sext i32 %22 to i64, !dbg !28
  %42 = sext i32 %23 to i64, !dbg !28
  %43 = sext i32 %24 to i64, !dbg !28
  %44 = sext i32 %25 to i64, !dbg !28
  %45 = sext i32 %26 to i64, !dbg !28
  %46 = sext i32 %27 to i64, !dbg !28
  %47 = sext i32 %28 to i64, !dbg !28
  %48 = mul i64 %4, %40, !dbg !28
  %49 = mul i64 %4, %41, !dbg !28
  %50 = mul i64 %4, %42, !dbg !28
  %51 = mul i64 %4, %43, !dbg !28
  %52 = mul i64 %4, %44, !dbg !28
  %53 = mul i64 %4, %45, !dbg !28
  %54 = mul i64 %4, %46, !dbg !28
  %55 = mul i64 %4, %47, !dbg !28
  %56 = add i64 %7, %6, !dbg !29
  %57 = icmp sgt i32 %9, 0, !dbg !30
  br i1 %57, label %.lr.ph, label %._crit_edge, !dbg !30

.lr.ph:                                           ; preds = %12
  %58 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32
  %59 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 8), align 8
  %60 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 16), align 16
  %61 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32
  %62 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 8), align 8
  %63 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 16), align 16
  br label %64, !dbg !30

64:                                               ; preds = %.lr.ph, %246
  %65 = phi i64 [ 0, %.lr.ph ], [ %266, %246 ]
  %66 = phi i64 [ 0, %.lr.ph ], [ %269, %246 ]
  %67 = phi i64 [ 0, %.lr.ph ], [ %272, %246 ]
  %68 = phi i64 [ 0, %.lr.ph ], [ %275, %246 ]
  %69 = phi i64 [ 0, %.lr.ph ], [ %278, %246 ]
  %70 = phi i64 [ 0, %.lr.ph ], [ %281, %246 ]
  %71 = phi i64 [ 0, %.lr.ph ], [ %284, %246 ]
  %72 = phi i64 [ 0, %.lr.ph ], [ %287, %246 ]
  %73 = phi i32 [ 0, %.lr.ph ], [ %288, %246 ]
  %74 = or disjoint i32 %73, %18, !dbg !31
  %75 = icmp slt i32 %74, %9, !dbg !32
  %76 = sext i32 %74 to i64, !dbg !33
  %.frozen = freeze i64 %76, !dbg !33
  %.frozen81 = freeze i64 %4, !dbg !33
  %77 = sdiv i64 %.frozen, %.frozen81, !dbg !33
  %78 = mul i64 %77, %.frozen81, !dbg !34
  %.decomposed = sub i64 %.frozen, %78, !dbg !34
  %.not = icmp ne i64 %.decomposed, 0, !dbg !35
  %79 = icmp slt i32 %73, 0, !dbg !36
  %80 = xor i1 %39, %79, !dbg !37
  %narrow = select i1 %80, i1 %.not, i1 false, !dbg !38
  %81 = sext i1 %narrow to i64, !dbg !38
  %82 = add nsw i64 %77, %81, !dbg !38
  %83 = icmp slt i64 %82, 1, !dbg !39
  %84 = add i64 %.decomposed, %48, !dbg !40
  %85 = add i64 %.decomposed, %49, !dbg !40
  %86 = add i64 %.decomposed, %50, !dbg !40
  %87 = add i64 %.decomposed, %51, !dbg !40
  %88 = add i64 %.decomposed, %52, !dbg !40
  %89 = add i64 %.decomposed, %53, !dbg !40
  %90 = add i64 %.decomposed, %54, !dbg !40
  %91 = add i64 %.decomposed, %55, !dbg !40
  %92 = icmp slt i64 %84, %5, !dbg !41
  %93 = icmp slt i64 %85, %5, !dbg !41
  %94 = icmp slt i64 %86, %5, !dbg !41
  %95 = icmp slt i64 %87, %5, !dbg !41
  %96 = icmp slt i64 %88, %5, !dbg !41
  %97 = icmp slt i64 %89, %5, !dbg !41
  %98 = icmp slt i64 %90, %5, !dbg !41
  %99 = icmp slt i64 %91, %5, !dbg !41
  %100 = and i1 %92, %83, !dbg !42
  %101 = and i1 %93, %83, !dbg !42
  %102 = and i1 %94, %83, !dbg !42
  %103 = and i1 %95, %83, !dbg !42
  %104 = and i1 %96, %83, !dbg !42
  %105 = and i1 %97, %83, !dbg !42
  %106 = and i1 %98, %83, !dbg !42
  %107 = and i1 %99, %83, !dbg !42
  %108 = load i64, ptr addrspace(1) %0, align 8, !dbg !43
  %109 = select i1 %100, i64 %108, i64 0, !dbg !44
  %110 = select i1 %101, i64 %108, i64 0, !dbg !44
  %111 = select i1 %102, i64 %108, i64 0, !dbg !44
  %112 = select i1 %103, i64 %108, i64 0, !dbg !44
  %113 = select i1 %104, i64 %108, i64 0, !dbg !44
  %114 = select i1 %105, i64 %108, i64 0, !dbg !44
  %115 = select i1 %106, i64 %108, i64 0, !dbg !44
  %116 = select i1 %107, i64 %108, i64 0, !dbg !44
  %117 = add i64 %.decomposed, %6, !dbg !45
  %118 = add i64 %117, %48, !dbg !46
  %119 = add i64 %117, %49, !dbg !46
  %120 = add i64 %117, %50, !dbg !46
  %121 = add i64 %117, %51, !dbg !46
  %122 = add i64 %117, %52, !dbg !46
  %123 = add i64 %117, %53, !dbg !46
  %124 = add i64 %117, %54, !dbg !46
  %125 = add i64 %117, %55, !dbg !46
  %126 = icmp sle i64 %118, %109, !dbg !47
  %127 = icmp sle i64 %119, %110, !dbg !47
  %128 = icmp sle i64 %120, %111, !dbg !47
  %129 = icmp sle i64 %121, %112, !dbg !47
  %130 = icmp sle i64 %122, %113, !dbg !47
  %131 = icmp sle i64 %123, %114, !dbg !47
  %132 = icmp sle i64 %124, %115, !dbg !47
  %133 = icmp sle i64 %125, %116, !dbg !47
  %134 = icmp slt i64 %118, 0, !dbg !48
  %135 = icmp slt i64 %119, 0, !dbg !48
  %136 = icmp slt i64 %120, 0, !dbg !48
  %137 = icmp slt i64 %121, 0, !dbg !48
  %138 = icmp slt i64 %122, 0, !dbg !48
  %139 = icmp slt i64 %123, 0, !dbg !48
  %140 = icmp slt i64 %124, 0, !dbg !48
  %141 = icmp slt i64 %125, 0, !dbg !48
  %142 = add i64 %56, %.decomposed, !dbg !49
  %143 = add i64 %142, %48, !dbg !50
  %144 = add i64 %142, %49, !dbg !50
  %145 = add i64 %142, %50, !dbg !50
  %146 = add i64 %142, %51, !dbg !50
  %147 = add i64 %142, %52, !dbg !50
  %148 = add i64 %142, %53, !dbg !50
  %149 = add i64 %142, %54, !dbg !50
  %150 = add i64 %142, %55, !dbg !50
  %151 = select i1 %134, i64 %143, i64 %118, !dbg !51
  %152 = select i1 %135, i64 %144, i64 %119, !dbg !51
  %153 = select i1 %136, i64 %145, i64 %120, !dbg !51
  %154 = select i1 %137, i64 %146, i64 %121, !dbg !51
  %155 = select i1 %138, i64 %147, i64 %122, !dbg !51
  %156 = select i1 %139, i64 %148, i64 %123, !dbg !51
  %157 = select i1 %140, i64 %149, i64 %124, !dbg !51
  %158 = select i1 %141, i64 %150, i64 %125, !dbg !51
  %159 = icmp slt i64 %151, 0, !dbg !52
  %160 = icmp slt i64 %152, 0, !dbg !52
  %161 = icmp slt i64 %153, 0, !dbg !52
  %162 = icmp slt i64 %154, 0, !dbg !52
  %163 = icmp slt i64 %155, 0, !dbg !52
  %164 = icmp slt i64 %156, 0, !dbg !52
  %165 = icmp slt i64 %157, 0, !dbg !52
  %166 = icmp slt i64 %158, 0, !dbg !52
  %167 = icmp sge i64 %151, %7, !dbg !53
  %168 = icmp sge i64 %152, %7, !dbg !53
  %169 = icmp sge i64 %153, %7, !dbg !53
  %170 = icmp sge i64 %154, %7, !dbg !53
  %171 = icmp sge i64 %155, %7, !dbg !53
  %172 = icmp sge i64 %156, %7, !dbg !53
  %173 = icmp sge i64 %157, %7, !dbg !53
  %174 = icmp sge i64 %158, %7, !dbg !53
  %.not6 = or i1 %159, %167, !dbg !54
  %.not11 = or i1 %160, %168, !dbg !54
  %.not16 = or i1 %161, %169, !dbg !54
  %.not21 = or i1 %162, %170, !dbg !54
  %.not26 = or i1 %163, %171, !dbg !54
  %.not31 = or i1 %164, %172, !dbg !54
  %.not36 = or i1 %165, %173, !dbg !54
  %.not41 = or i1 %166, %174, !dbg !55
  %175 = and i1 %75, %100, !dbg !55
  %176 = and i1 %75, %101, !dbg !55
  %177 = and i1 %75, %102, !dbg !55
  %178 = and i1 %75, %103, !dbg !55
  %179 = and i1 %75, %104, !dbg !55
  %180 = and i1 %75, %105, !dbg !55
  %181 = and i1 %75, %106, !dbg !55
  %182 = and i1 %75, %107, !dbg !55
  %183 = and i1 %30, %175, !dbg !56
  %184 = and i1 %31, %176, !dbg !56
  %185 = and i1 %32, %177, !dbg !56
  %186 = and i1 %33, %178, !dbg !56
  %187 = and i1 %34, %179, !dbg !56
  %188 = and i1 %35, %180, !dbg !56
  %189 = and i1 %36, %181, !dbg !56
  %190 = and i1 %37, %182, !dbg !56
  %.not3 = and i1 %.not6, %183, !dbg !57
  %.not8 = and i1 %.not11, %184, !dbg !57
  %.not13 = and i1 %.not16, %185, !dbg !57
  %.not18 = and i1 %.not21, %186, !dbg !57
  %.not23 = and i1 %.not26, %187, !dbg !57
  %.not28 = and i1 %.not31, %188, !dbg !57
  %.not33 = and i1 %.not36, %189, !dbg !57
  %.not38 = and i1 %.not41, %190, !dbg !58
  %191 = or i1 %.not3, %.not8, !dbg !58
  %192 = or i1 %.not13, %191, !dbg !58
  %193 = or i1 %.not18, %192, !dbg !58
  %194 = or i1 %.not23, %193, !dbg !58
  %195 = or i1 %.not28, %194, !dbg !58
  %196 = or i1 %.not33, %195, !dbg !58
  %197 = or i1 %.not38, %196, !dbg !58
  br i1 %197, label %198, label %199, !dbg !58

198:                                              ; preds = %64
  tail call spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertMessage_ to ptr addrspace(4)), ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFile_ to ptr addrspace(4)), i32 noundef 51, ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFunc_ to ptr addrspace(4)), i64 noundef %58, i64 noundef %59, i64 noundef %60, i64 noundef %61, i64 noundef %62, i64 noundef %63) #5, !dbg !58
  br label %199, !dbg !58

199:                                              ; preds = %198, %64
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !58
  %200 = getelementptr i1, ptr addrspace(1) %1, i64 %152, !dbg !59
  %201 = getelementptr i1, ptr addrspace(1) %1, i64 %153, !dbg !59
  %202 = getelementptr i1, ptr addrspace(1) %1, i64 %154, !dbg !59
  %203 = getelementptr i1, ptr addrspace(1) %1, i64 %155, !dbg !59
  %204 = getelementptr i1, ptr addrspace(1) %1, i64 %156, !dbg !59
  %205 = getelementptr i1, ptr addrspace(1) %1, i64 %157, !dbg !59
  %206 = getelementptr i1, ptr addrspace(1) %1, i64 %158, !dbg !59
  br i1 %183, label %207, label %211, !dbg !60

207:                                              ; preds = %199
  %208 = getelementptr i1, ptr addrspace(1) %1, i64 %151, !dbg !59
  %209 = load i8, ptr addrspace(1) %208, align 1, !dbg !60
  %210 = icmp ne i8 %209, 0, !dbg !60
  br label %211, !dbg !60

211:                                              ; preds = %207, %199
  %212 = phi i1 [ %210, %207 ], [ false, %199 ], !dbg !60
  br i1 %184, label %213, label %216, !dbg !60

213:                                              ; preds = %211
  %214 = load i8, ptr addrspace(1) %200, align 1, !dbg !60
  %215 = icmp ne i8 %214, 0, !dbg !60
  br label %216, !dbg !60

216:                                              ; preds = %213, %211
  %217 = phi i1 [ %215, %213 ], [ false, %211 ], !dbg !60
  br i1 %185, label %218, label %221, !dbg !60

218:                                              ; preds = %216
  %219 = load i8, ptr addrspace(1) %201, align 1, !dbg !60
  %220 = icmp ne i8 %219, 0, !dbg !60
  br label %221, !dbg !60

221:                                              ; preds = %218, %216
  %222 = phi i1 [ %220, %218 ], [ false, %216 ], !dbg !60
  br i1 %186, label %223, label %226, !dbg !60

223:                                              ; preds = %221
  %224 = load i8, ptr addrspace(1) %202, align 1, !dbg !60
  %225 = icmp ne i8 %224, 0, !dbg !60
  br label %226, !dbg !60

226:                                              ; preds = %223, %221
  %227 = phi i1 [ %225, %223 ], [ false, %221 ], !dbg !60
  br i1 %187, label %228, label %231, !dbg !60

228:                                              ; preds = %226
  %229 = load i8, ptr addrspace(1) %203, align 1, !dbg !60
  %230 = icmp ne i8 %229, 0, !dbg !60
  br label %231, !dbg !60

231:                                              ; preds = %228, %226
  %232 = phi i1 [ %230, %228 ], [ false, %226 ], !dbg !60
  br i1 %188, label %233, label %236, !dbg !60

233:                                              ; preds = %231
  %234 = load i8, ptr addrspace(1) %204, align 1, !dbg !60
  %235 = icmp ne i8 %234, 0, !dbg !60
  br label %236, !dbg !60

236:                                              ; preds = %233, %231
  %237 = phi i1 [ %235, %233 ], [ false, %231 ], !dbg !60
  br i1 %189, label %238, label %241, !dbg !60

238:                                              ; preds = %236
  %239 = load i8, ptr addrspace(1) %205, align 1, !dbg !60
  %240 = icmp ne i8 %239, 0, !dbg !60
  br label %241, !dbg !60

241:                                              ; preds = %238, %236
  %242 = phi i1 [ %240, %238 ], [ false, %236 ], !dbg !60
  br i1 %190, label %243, label %246, !dbg !60

243:                                              ; preds = %241
  %244 = load i8, ptr addrspace(1) %206, align 1, !dbg !60
  %245 = icmp ne i8 %244, 0, !dbg !60
  br label %246, !dbg !60

246:                                              ; preds = %243, %241
  %247 = phi i1 [ %245, %243 ], [ false, %241 ], !dbg !60
  %248 = and i1 %126, %212, !dbg !61
  %249 = and i1 %127, %217, !dbg !61
  %250 = and i1 %128, %222, !dbg !61
  %251 = and i1 %129, %227, !dbg !61
  %252 = and i1 %130, %232, !dbg !61
  %253 = and i1 %131, %237, !dbg !61
  %254 = and i1 %132, %242, !dbg !61
  %255 = and i1 %133, %247, !dbg !61
  %256 = and i1 %30, %75, !dbg !62
  %257 = and i1 %31, %75, !dbg !62
  %258 = and i1 %32, %75, !dbg !62
  %259 = and i1 %33, %75, !dbg !62
  %260 = and i1 %34, %75, !dbg !62
  %261 = and i1 %35, %75, !dbg !62
  %262 = and i1 %36, %75, !dbg !62
  %263 = and i1 %37, %75, !dbg !62
  %264 = select i1 %256, i1 %100, i1 false, !dbg !63
  %narrow42 = select i1 %264, i1 %248, i1 false, !dbg !63
  %265 = zext i1 %narrow42 to i64, !dbg !63
  %266 = add i64 %65, %265, !dbg !63
  %267 = select i1 %257, i1 %101, i1 false, !dbg !63
  %narrow43 = select i1 %267, i1 %249, i1 false, !dbg !63
  %268 = zext i1 %narrow43 to i64, !dbg !63
  %269 = add i64 %66, %268, !dbg !63
  %270 = select i1 %258, i1 %102, i1 false, !dbg !63
  %narrow44 = select i1 %270, i1 %250, i1 false, !dbg !63
  %271 = zext i1 %narrow44 to i64, !dbg !63
  %272 = add i64 %67, %271, !dbg !63
  %273 = select i1 %259, i1 %103, i1 false, !dbg !63
  %narrow45 = select i1 %273, i1 %251, i1 false, !dbg !63
  %274 = zext i1 %narrow45 to i64, !dbg !63
  %275 = add i64 %68, %274, !dbg !63
  %276 = select i1 %260, i1 %104, i1 false, !dbg !63
  %narrow46 = select i1 %276, i1 %252, i1 false, !dbg !63
  %277 = zext i1 %narrow46 to i64, !dbg !63
  %278 = add i64 %69, %277, !dbg !63
  %279 = select i1 %261, i1 %105, i1 false, !dbg !63
  %narrow47 = select i1 %279, i1 %253, i1 false, !dbg !63
  %280 = zext i1 %narrow47 to i64, !dbg !63
  %281 = add i64 %70, %280, !dbg !63
  %282 = select i1 %262, i1 %106, i1 false, !dbg !63
  %narrow48 = select i1 %282, i1 %254, i1 false, !dbg !63
  %283 = zext i1 %narrow48 to i64, !dbg !63
  %284 = add i64 %71, %283, !dbg !63
  %285 = select i1 %263, i1 %107, i1 false, !dbg !63
  %narrow49 = select i1 %285, i1 %255, i1 false, !dbg !63
  %286 = zext i1 %narrow49 to i64, !dbg !63
  %287 = add i64 %72, %286, !dbg !63
  %288 = add i32 %73, 512, !dbg !30
  %289 = icmp slt i32 %288, %9, !dbg !30
  br i1 %289, label %64, label %._crit_edge, !dbg !30

._crit_edge:                                      ; preds = %246, %12
  %290 = phi i64 [ 0, %12 ], [ %266, %246 ], !dbg !64
  %291 = phi i64 [ 0, %12 ], [ %269, %246 ], !dbg !64
  %292 = phi i64 [ 0, %12 ], [ %272, %246 ], !dbg !64
  %293 = phi i64 [ 0, %12 ], [ %275, %246 ], !dbg !64
  %294 = phi i64 [ 0, %12 ], [ %278, %246 ], !dbg !64
  %295 = phi i64 [ 0, %12 ], [ %281, %246 ], !dbg !64
  %296 = phi i64 [ 0, %12 ], [ %284, %246 ], !dbg !64
  %297 = phi i64 [ 0, %12 ], [ %287, %246 ], !dbg !64
  %298 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %290) #6, !dbg !65
  %299 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %291) #6, !dbg !65
  %300 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %292) #6, !dbg !65
  %301 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %293) #6, !dbg !65
  %302 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %294) #6, !dbg !65
  %303 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %295) #6, !dbg !65
  %304 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %296) #6, !dbg !65
  %305 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiim(i32 3, i32 0, i64 %297) #6, !dbg !65
  %306 = icmp eq i32 %19, 0, !dbg !65
  br i1 %306, label %.critedge, label %.critedge55, !dbg !65

.critedge:                                        ; preds = %._crit_edge
  %307 = zext nneg i32 %20 to i64, !dbg !65
  %308 = getelementptr i64, ptr addrspace(3) %11, i64 %307, !dbg !65
  store i64 %298, ptr addrspace(3) %308, align 4, !dbg !65
  %309 = getelementptr i8, ptr addrspace(3) %308, i64 128, !dbg !65
  store i64 %299, ptr addrspace(3) %309, align 4, !dbg !65
  %310 = getelementptr i8, ptr addrspace(3) %308, i64 256, !dbg !65
  store i64 %300, ptr addrspace(3) %310, align 4, !dbg !65
  %311 = getelementptr i8, ptr addrspace(3) %308, i64 384, !dbg !65
  store i64 %301, ptr addrspace(3) %311, align 4, !dbg !65
  %312 = getelementptr i8, ptr addrspace(3) %308, i64 512, !dbg !65
  store i64 %302, ptr addrspace(3) %312, align 4, !dbg !65
  %313 = getelementptr i8, ptr addrspace(3) %308, i64 640, !dbg !65
  store i64 %303, ptr addrspace(3) %313, align 4, !dbg !65
  %314 = getelementptr i8, ptr addrspace(3) %308, i64 768, !dbg !65
  store i64 %304, ptr addrspace(3) %314, align 4, !dbg !65
  %315 = getelementptr i8, ptr addrspace(3) %308, i64 896, !dbg !65
  store i64 %305, ptr addrspace(3) %315, align 4, !dbg !65
  br label %.critedge55, !dbg !65

.critedge55:                                      ; preds = %._crit_edge, %.critedge
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !65
  %316 = icmp samesign ult i32 %18, 128, !dbg !65
  %317 = and i64 %16, 511, !dbg !65
  %318 = getelementptr i64, ptr addrspace(3) %11, i64 %317, !dbg !65
  br i1 %316, label %319, label %321, !dbg !65

319:                                              ; preds = %.critedge55
  %320 = load i64, ptr addrspace(3) %318, align 4, !dbg !65
  br label %321, !dbg !65

321:                                              ; preds = %319, %.critedge55
  %322 = phi i64 [ %320, %319 ], [ undef, %.critedge55 ], !dbg !68
  %323 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32 3, i32 3, i64 %322, i32 16) #6, !dbg !65
  %324 = and i32 %17, 15, !dbg !65
  %325 = icmp eq i32 %324, 0, !dbg !65
  %326 = and i1 %316, %325, !dbg !65
  br i1 %326, label %327, label %328, !dbg !65

327:                                              ; preds = %321
  store i64 %323, ptr addrspace(3) %318, align 4, !dbg !65
  br label %328, !dbg !65

328:                                              ; preds = %327, %321
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !65
  %329 = load i64, ptr addrspace(3) %11, align 4, !dbg !65
  %330 = getelementptr i8, ptr addrspace(3) %11, i64 128, !dbg !65
  %331 = load i64, ptr addrspace(3) %330, align 4, !dbg !65
  %332 = getelementptr i8, ptr addrspace(3) %11, i64 256, !dbg !65
  %333 = load i64, ptr addrspace(3) %332, align 4, !dbg !65
  %334 = getelementptr i8, ptr addrspace(3) %11, i64 384, !dbg !65
  %335 = load i64, ptr addrspace(3) %334, align 4, !dbg !65
  %336 = getelementptr i8, ptr addrspace(3) %11, i64 512, !dbg !65
  %337 = load i64, ptr addrspace(3) %336, align 4, !dbg !65
  %338 = getelementptr i8, ptr addrspace(3) %11, i64 640, !dbg !65
  %339 = load i64, ptr addrspace(3) %338, align 4, !dbg !65
  %340 = getelementptr i8, ptr addrspace(3) %11, i64 768, !dbg !65
  %341 = load i64, ptr addrspace(3) %340, align 4, !dbg !65
  %342 = getelementptr i8, ptr addrspace(3) %11, i64 896, !dbg !65
  %343 = load i64, ptr addrspace(3) %342, align 4, !dbg !65
  %344 = icmp sgt i64 %329, 0, !dbg !69
  %345 = icmp sgt i64 %331, 0, !dbg !69
  %346 = icmp sgt i64 %333, 0, !dbg !69
  %347 = icmp sgt i64 %335, 0, !dbg !69
  %348 = icmp sgt i64 %337, 0, !dbg !69
  %349 = icmp sgt i64 %339, 0, !dbg !69
  %350 = icmp sgt i64 %341, 0, !dbg !69
  %351 = icmp sgt i64 %343, 0, !dbg !69
  %352 = mul i64 %4, %4, !dbg !70
  %353 = icmp slt i64 %329, %352, !dbg !71
  %354 = icmp slt i64 %331, %352, !dbg !71
  %355 = icmp slt i64 %333, %352, !dbg !71
  %356 = icmp slt i64 %335, %352, !dbg !71
  %357 = icmp slt i64 %337, %352, !dbg !71
  %358 = icmp slt i64 %339, %352, !dbg !71
  %359 = icmp slt i64 %341, %352, !dbg !71
  %360 = icmp slt i64 %343, %352, !dbg !71
  %361 = and i1 %344, %353, !dbg !72
  %362 = and i1 %345, %354, !dbg !72
  %363 = and i1 %346, %355, !dbg !72
  %364 = and i1 %347, %356, !dbg !72
  %365 = and i1 %348, %357, !dbg !72
  %366 = and i1 %349, %358, !dbg !72
  %367 = and i1 %350, %359, !dbg !72
  %368 = and i1 %351, %360, !dbg !72
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !73
  %369 = zext i1 %361 to i8, !dbg !73
  %370 = zext i1 %362 to i8, !dbg !73
  %371 = zext i1 %363 to i8, !dbg !73
  %372 = zext i1 %364 to i8, !dbg !73
  %373 = zext i1 %365 to i8, !dbg !73
  %374 = zext i1 %366 to i8, !dbg !73
  %375 = zext i1 %367 to i8, !dbg !73
  %376 = zext i1 %368 to i8, !dbg !73
  %377 = insertelement <1 x i8> poison, i8 %369, i64 0, !dbg !73
  store <1 x i8> %377, ptr addrspace(3) %11, align 1, !dbg !73
  %378 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 2, !dbg !73
  %379 = insertelement <1 x i8> poison, i8 %370, i64 0, !dbg !73
  store <1 x i8> %379, ptr addrspace(3) %378, align 1, !dbg !73
  %380 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 4, !dbg !73
  %381 = insertelement <1 x i8> poison, i8 %371, i64 0, !dbg !73
  store <1 x i8> %381, ptr addrspace(3) %380, align 1, !dbg !73
  %382 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 6, !dbg !73
  %383 = insertelement <1 x i8> poison, i8 %372, i64 0, !dbg !73
  store <1 x i8> %383, ptr addrspace(3) %382, align 1, !dbg !73
  %384 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 8, !dbg !73
  %385 = insertelement <1 x i8> poison, i8 %373, i64 0, !dbg !73
  store <1 x i8> %385, ptr addrspace(3) %384, align 1, !dbg !73
  %386 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 10, !dbg !73
  %387 = insertelement <1 x i8> poison, i8 %374, i64 0, !dbg !73
  store <1 x i8> %387, ptr addrspace(3) %386, align 1, !dbg !73
  %388 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 12, !dbg !73
  %389 = insertelement <1 x i8> poison, i8 %375, i64 0, !dbg !73
  store <1 x i8> %389, ptr addrspace(3) %388, align 1, !dbg !73
  %390 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 14, !dbg !73
  %391 = insertelement <1 x i8> poison, i8 %376, i64 0, !dbg !73
  store <1 x i8> %391, ptr addrspace(3) %390, align 1, !dbg !73
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !73
  %392 = shl i64 %16, 1, !dbg !73
  %393 = and i64 %392, 14, !dbg !73
  %394 = getelementptr inbounds nuw i8, ptr addrspace(3) %11, i64 %393, !dbg !73
  %395 = load <1 x i8>, ptr addrspace(3) %394, align 1, !dbg !73
  %396 = icmp eq i64 %329, %352, !dbg !74
  %397 = icmp eq i64 %331, %352, !dbg !74
  %398 = icmp eq i64 %333, %352, !dbg !74
  %399 = icmp eq i64 %335, %352, !dbg !74
  %400 = icmp eq i64 %337, %352, !dbg !74
  %401 = icmp eq i64 %339, %352, !dbg !74
  %402 = icmp eq i64 %341, %352, !dbg !74
  %403 = icmp eq i64 %343, %352, !dbg !74
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !73
  %404 = zext i1 %396 to i8, !dbg !73
  %405 = zext i1 %397 to i8, !dbg !73
  %406 = zext i1 %398 to i8, !dbg !73
  %407 = zext i1 %399 to i8, !dbg !73
  %408 = zext i1 %400 to i8, !dbg !73
  %409 = zext i1 %401 to i8, !dbg !73
  %410 = zext i1 %402 to i8, !dbg !73
  %411 = zext i1 %403 to i8, !dbg !73
  %412 = insertelement <1 x i8> poison, i8 %404, i64 0, !dbg !73
  store <1 x i8> %412, ptr addrspace(3) %11, align 1, !dbg !73
  %413 = insertelement <1 x i8> poison, i8 %405, i64 0, !dbg !73
  store <1 x i8> %413, ptr addrspace(3) %378, align 1, !dbg !73
  %414 = insertelement <1 x i8> poison, i8 %406, i64 0, !dbg !73
  store <1 x i8> %414, ptr addrspace(3) %380, align 1, !dbg !73
  %415 = insertelement <1 x i8> poison, i8 %407, i64 0, !dbg !73
  store <1 x i8> %415, ptr addrspace(3) %382, align 1, !dbg !73
  %416 = insertelement <1 x i8> poison, i8 %408, i64 0, !dbg !73
  store <1 x i8> %416, ptr addrspace(3) %384, align 1, !dbg !73
  %417 = insertelement <1 x i8> poison, i8 %409, i64 0, !dbg !73
  store <1 x i8> %417, ptr addrspace(3) %386, align 1, !dbg !73
  %418 = insertelement <1 x i8> poison, i8 %410, i64 0, !dbg !73
  store <1 x i8> %418, ptr addrspace(3) %388, align 1, !dbg !73
  %419 = insertelement <1 x i8> poison, i8 %411, i64 0, !dbg !73
  store <1 x i8> %419, ptr addrspace(3) %390, align 1, !dbg !73
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !73
  %420 = and i32 %17, 24, !dbg !75
  %421 = icmp eq i32 %420, 0, !dbg !75
  %422 = icmp samesign ult i32 %18, 32, !dbg !75
  %423 = and i1 %421, %422, !dbg !75
  %424 = and i1 %423, %38, !dbg !75
  br i1 %424, label %425, label %.critedge57, !dbg !75

425:                                              ; preds = %328
  %426 = load i8, ptr addrspace(3) %394, align 1, !dbg !73
  %427 = icmp ne i8 %426, 0, !dbg !73
  %428 = zext i1 %427 to i32, !dbg !73
  %429 = extractelement <1 x i8> %395, i64 0, !dbg !73
  %430 = icmp ne i8 %429, 0, !dbg !73
  %431 = zext i1 %430 to i32, !dbg !73
  %432 = insertelement <1 x i32> poison, i32 %431, i64 0, !dbg !75
  %433 = sext i32 %29 to i64, !dbg !76
  %434 = getelementptr i32, ptr addrspace(1) %2, i64 %433, !dbg !76
  store <1 x i32> %432, ptr addrspace(1) %434, align 4, !dbg !75
  %435 = insertelement <1 x i32> poison, i32 %428, i64 0, !dbg !77
  %436 = getelementptr i32, ptr addrspace(1) %3, i64 %433, !dbg !78
  store <1 x i32> %435, ptr addrspace(1) %436, align 4, !dbg !77
  br label %.critedge57, !dbg !77

.critedge57:                                      ; preds = %328, %425
  ret void, !dbg !79
}

; Function Attrs: convergent mustprogress norecurse nounwind
declare extern_weak dso_local spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef, ptr addrspace(4) noundef, i32 noundef, ptr addrspace(4) noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/netbatch/donb74095_00/dir/workspace/NIT/xmain-rel/LX/xmainefi2linux_release/ws/icsws/llvm/libdevice/fallback-cassert.cpp" "sycl-optlevel"="2" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind }
attributes #6 = { convergent nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py", directory: "/tmp/torchinductor_jovyan/pk")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformIAddiimj", linkageName: "_Z27__spirv_GroupNonUniformIAddiimj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformIAddiim", linkageName: "_Z27__spirv_GroupNonUniformIAddiim", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_0", linkageName: "triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_0", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!17 = !{i32 32}
!18 = !{i64 512, i64 1, i64 1}
!19 = !DILocation(line: 21, column: 28, scope: !16)
!20 = !DILocation(line: 21, column: 33, scope: !16)
!21 = !DILocation(line: 22, column: 44, scope: !16)
!22 = !DILocation(line: 22, column: 23, scope: !16)
!23 = !DILocation(line: 23, column: 21, scope: !16)
!24 = !DILocation(line: 76, column: 36, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !16, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 33, column: 59, scope: !16)
!28 = !DILocation(line: 38, column: 26, scope: !16)
!29 = !DILocation(line: 51, column: 72, scope: !16)
!30 = !DILocation(line: 28, column: 40, scope: !16)
!31 = !DILocation(line: 29, column: 31, scope: !16)
!32 = !DILocation(line: 30, column: 29, scope: !16)
!33 = !DILocation(line: 73, column: 16, scope: !25, inlinedAt: !27)
!34 = !DILocation(line: 74, column: 20, scope: !25, inlinedAt: !27)
!35 = !DILocation(line: 75, column: 34, scope: !25, inlinedAt: !27)
!36 = !DILocation(line: 76, column: 25, scope: !25, inlinedAt: !27)
!37 = !DILocation(line: 76, column: 32, scope: !25, inlinedAt: !27)
!38 = !DILocation(line: 76, column: 47, scope: !25, inlinedAt: !27)
!39 = !DILocation(line: 37, column: 22, scope: !16)
!40 = !DILocation(line: 38, column: 22, scope: !16)
!41 = !DILocation(line: 40, column: 22, scope: !16)
!42 = !DILocation(line: 41, column: 22, scope: !16)
!43 = !DILocation(line: 42, column: 23, scope: !16)
!44 = !DILocation(line: 44, column: 36, scope: !16)
!45 = !DILocation(line: 47, column: 22, scope: !16)
!46 = !DILocation(line: 47, column: 29, scope: !16)
!47 = !DILocation(line: 48, column: 25, scope: !16)
!48 = !DILocation(line: 51, column: 63, scope: !16)
!49 = !DILocation(line: 51, column: 78, scope: !16)
!50 = !DILocation(line: 51, column: 85, scope: !16)
!51 = !DILocation(line: 51, column: 93, scope: !16)
!52 = !DILocation(line: 51, column: 32, scope: !16)
!53 = !DILocation(line: 51, column: 202, scope: !16)
!54 = !DILocation(line: 51, column: 118, scope: !16)
!55 = !DILocation(line: 51, column: 222, scope: !16)
!56 = !DILocation(line: 51, column: 229, scope: !16)
!57 = !DILocation(line: 51, column: 210, scope: !16)
!58 = !DILocation(line: 51, column: 237, scope: !16)
!59 = !DILocation(line: 52, column: 35, scope: !16)
!60 = !DILocation(line: 52, column: 119, scope: !16)
!61 = !DILocation(line: 53, column: 24, scope: !16)
!62 = !DILocation(line: 59, column: 36, scope: !16)
!63 = !DILocation(line: 59, column: 50, scope: !16)
!64 = !DILocation(line: 27, column: 44, scope: !16)
!65 = !DILocation(line: 290, column: 36, scope: !66, inlinedAt: !68)
!66 = distinct !DILexicalBlockFile(scope: !16, file: !67, discriminator: 0)
!67 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!68 = !DILocation(line: 60, column: 27, scope: !16)
!69 = !DILocation(line: 62, column: 20, scope: !16)
!70 = !DILocation(line: 63, column: 16, scope: !16)
!71 = !DILocation(line: 64, column: 20, scope: !16)
!72 = !DILocation(line: 65, column: 20, scope: !16)
!73 = !DILocation(line: 0, scope: !16)
!74 = !DILocation(line: 68, column: 21, scope: !16)
!75 = !DILocation(line: 71, column: 37, scope: !16)
!76 = !DILocation(line: 71, column: 25, scope: !16)
!77 = !DILocation(line: 72, column: 37, scope: !16)
!78 = !DILocation(line: 72, column: 25, scope: !16)
!79 = !DILocation(line: 72, column: 4, scope: !16)
