; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_poi_fused_cat_3(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, i64 %3, i64 %4, i64 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr #1 !dbg !15 !intel_reqd_sub_group_size !16 !max_work_group_size !17 {
  %9 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #2, !dbg !18
  %10 = trunc i64 %9 to i32, !dbg !18
  %11 = shl i32 %10, 10, !dbg !19
  %12 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #2, !dbg !20
  %13 = trunc i64 %12 to i32, !dbg !20
  %14 = shl i32 %13, 3, !dbg !20
  %15 = and i32 %14, 1016, !dbg !20
  %16 = or disjoint i32 %15, %11, !dbg !21
  %17 = icmp slt i32 %16, %6, !dbg !22
  %.frozen = freeze i32 %16, !dbg !23
  %18 = sdiv i32 %.frozen, 128, !dbg !23
  %19 = sext i32 %18 to i64, !dbg !24
  %20 = srem i64 %19, %3, !dbg !24
  %21 = mul i32 %18, 128, !dbg !25
  %.decomposed = sub i32 %.frozen, %21, !dbg !25
  %22 = sext i32 %16 to i64, !dbg !26
  %23 = sdiv i64 %22, %5, !dbg !26
  %24 = icmp slt i64 %20, %4, !dbg !27
  %25 = sext i32 %.decomposed to i64, !dbg !28
  %26 = and i1 %24, %17, !dbg !29
  br i1 %26, label %27, label %34, !dbg !30

27:                                               ; preds = %8
  %28 = shl i64 %4, 7, !dbg !31
  %29 = mul i64 %28, %23, !dbg !32
  %.idx = shl nsw i64 %20, 8, !dbg !33
  %30 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx, !dbg !33
  %31 = getelementptr bfloat, ptr addrspace(1) %30, i64 %25, !dbg !33
  %32 = getelementptr bfloat, ptr addrspace(1) %31, i64 %29, !dbg !33
  %33 = load <8 x i16>, ptr addrspace(1) %32, align 16, !dbg !30
  br label %34, !dbg !30

34:                                               ; preds = %27, %8
  %bc10 = phi <8 x i16> [ %33, %27 ], [ zeroinitializer, %8 ], !dbg !30
  %35 = extractelement <8 x i16> %bc10, i64 0, !dbg !34
  %36 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %35) #2
  %37 = extractelement <8 x i16> %bc10, i64 1, !dbg !34
  %38 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %37) #2
  %39 = extractelement <8 x i16> %bc10, i64 2, !dbg !34
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #2
  %41 = extractelement <8 x i16> %bc10, i64 3, !dbg !34
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #2
  %43 = extractelement <8 x i16> %bc10, i64 4, !dbg !34
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #2
  %45 = extractelement <8 x i16> %bc10, i64 5, !dbg !34
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #2
  %47 = extractelement <8 x i16> %bc10, i64 6, !dbg !34
  %48 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %47) #2
  %49 = extractelement <8 x i16> %bc10, i64 7, !dbg !34
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #2
  %51 = icmp sge i64 %20, %4, !dbg !35
  %52 = and i1 %51, %17, !dbg !36
  br i1 %52, label %53, label %57, !dbg !37

53:                                               ; preds = %34
  %.idx11 = shl nsw i64 %23, 8, !dbg !38
  %54 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx11, !dbg !38
  %55 = getelementptr bfloat, ptr addrspace(1) %54, i64 %25, !dbg !38
  %56 = load <8 x i16>, ptr addrspace(1) %55, align 16, !dbg !37
  br label %57, !dbg !37

57:                                               ; preds = %53, %34
  %bc21 = phi <8 x i16> [ %56, %53 ], [ zeroinitializer, %34 ], !dbg !37
  br i1 %17, label %58, label %108, !dbg !39

58:                                               ; preds = %57
  %59 = extractelement <8 x i16> %bc21, i64 0, !dbg !40
  %60 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %59) #2
  %61 = select i1 %24, float %36, float %60, !dbg !41
  %62 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %61) #2
  %63 = insertelement <2 x i16> poison, i16 %62, i64 0, !dbg !39
  %64 = extractelement <8 x i16> %bc21, i64 1, !dbg !40
  %65 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %64) #2
  %66 = select i1 %24, float %38, float %65, !dbg !41
  %67 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %66) #2
  %68 = insertelement <2 x i16> %63, i16 %67, i64 1, !dbg !39
  %69 = bitcast <2 x i16> %68 to i32, !dbg !39
  %70 = insertelement <4 x i32> poison, i32 %69, i64 0, !dbg !39
  %71 = extractelement <8 x i16> %bc21, i64 2, !dbg !40
  %72 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %71) #2
  %73 = select i1 %24, float %40, float %72, !dbg !41
  %74 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %73) #2
  %75 = insertelement <2 x i16> poison, i16 %74, i64 0, !dbg !39
  %76 = extractelement <8 x i16> %bc21, i64 3, !dbg !40
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #2
  %78 = select i1 %24, float %42, float %77, !dbg !41
  %79 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %78) #2
  %80 = insertelement <2 x i16> %75, i16 %79, i64 1, !dbg !39
  %81 = bitcast <2 x i16> %80 to i32, !dbg !39
  %82 = insertelement <4 x i32> %70, i32 %81, i64 1, !dbg !39
  %83 = extractelement <8 x i16> %bc21, i64 4, !dbg !40
  %84 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %83) #2
  %85 = select i1 %24, float %44, float %84, !dbg !41
  %86 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %85) #2
  %87 = insertelement <2 x i16> poison, i16 %86, i64 0, !dbg !39
  %88 = extractelement <8 x i16> %bc21, i64 5, !dbg !40
  %89 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %88) #2
  %90 = select i1 %24, float %46, float %89, !dbg !41
  %91 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %90) #2
  %92 = insertelement <2 x i16> %87, i16 %91, i64 1, !dbg !39
  %93 = bitcast <2 x i16> %92 to i32, !dbg !39
  %94 = insertelement <4 x i32> %82, i32 %93, i64 2, !dbg !39
  %95 = extractelement <8 x i16> %bc21, i64 6, !dbg !40
  %96 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %95) #2
  %97 = select i1 %24, float %48, float %96, !dbg !41
  %98 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %97) #2
  %99 = insertelement <2 x i16> poison, i16 %98, i64 0, !dbg !39
  %100 = extractelement <8 x i16> %bc21, i64 7, !dbg !40
  %101 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %100) #2
  %102 = select i1 %24, float %50, float %101, !dbg !41
  %103 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %102) #2
  %104 = insertelement <2 x i16> %99, i16 %103, i64 1, !dbg !39
  %105 = bitcast <2 x i16> %104 to i32, !dbg !39
  %106 = insertelement <4 x i32> %94, i32 %105, i64 3, !dbg !39
  %107 = getelementptr bfloat, ptr addrspace(1) %2, i64 %22, !dbg !42
  store <4 x i32> %106, ptr addrspace(1) %107, align 16, !dbg !39
  br label %108, !dbg !39

108:                                              ; preds = %58, %57
  ret void, !dbg !43
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "csq7tpc72bozq75b5cznysoinw4uxpkekjpx7jjdzy63pymfxeoj.py", directory: "/tmp/torchinductor_jovyan/sq")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!16 = !{i32 32}
!17 = !{i64 128, i64 1, i64 1}
!18 = !DILocation(line: 19, column: 28, scope: !15)
!19 = !DILocation(line: 19, column: 33, scope: !15)
!20 = !DILocation(line: 20, column: 36, scope: !15)
!21 = !DILocation(line: 20, column: 23, scope: !15)
!22 = !DILocation(line: 21, column: 21, scope: !15)
!23 = !DILocation(line: 22, column: 21, scope: !15)
!24 = !DILocation(line: 22, column: 28, scope: !15)
!25 = !DILocation(line: 23, column: 19, scope: !15)
!26 = !DILocation(line: 24, column: 19, scope: !15)
!27 = !DILocation(line: 30, column: 18, scope: !15)
!28 = !DILocation(line: 31, column: 35, scope: !15)
!29 = !DILocation(line: 31, column: 66, scope: !15)
!30 = !DILocation(line: 31, column: 59, scope: !15)
!31 = !DILocation(line: 31, column: 50, scope: !15)
!32 = !DILocation(line: 31, column: 54, scope: !15)
!33 = !DILocation(line: 31, column: 30, scope: !15)
!34 = !DILocation(line: 31, column: 117, scope: !15)
!35 = !DILocation(line: 32, column: 19, scope: !15)
!36 = !DILocation(line: 35, column: 51, scope: !15)
!37 = !DILocation(line: 35, column: 44, scope: !15)
!38 = !DILocation(line: 35, column: 30, scope: !15)
!39 = !DILocation(line: 37, column: 37, scope: !15)
!40 = !DILocation(line: 35, column: 102, scope: !15)
!41 = !DILocation(line: 36, column: 33, scope: !15)
!42 = !DILocation(line: 37, column: 25, scope: !15)
!43 = !DILocation(line: 37, column: 4, scope: !15)
