; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i64 %5, i64 %6, i64 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %11 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %12 = trunc i64 %11 to i32, !dbg !20
  %13 = shl i32 %12, 10, !dbg !21
  %14 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %15 = trunc i64 %14 to i32, !dbg !22
  %16 = shl i32 %15, 3, !dbg !22
  %17 = and i32 %16, 1016, !dbg !22
  %18 = or disjoint i32 %17, %13, !dbg !23
  %19 = or disjoint i32 %18, 4, !dbg !23
  %20 = icmp slt i32 %18, %8, !dbg !24
  %.frozen = freeze i32 %18, !dbg !25
  %21 = sdiv i32 %.frozen, 128, !dbg !25
  %22 = sext i32 %21 to i64, !dbg !26
  %23 = srem i64 %22, %5, !dbg !26
  %24 = mul i32 %21, 128, !dbg !27
  %.decomposed = sub i32 %.frozen, %24, !dbg !27
  %25 = sext i32 %18 to i64, !dbg !28
  %26 = sdiv i64 %25, %7, !dbg !28
  %27 = icmp slt i64 %23, %6, !dbg !29
  %28 = sext i32 %.decomposed to i64, !dbg !30
  %29 = and i1 %27, %20, !dbg !31
  br i1 %29, label %30, label %37, !dbg !32

30:                                               ; preds = %10
  %31 = shl i64 %6, 7, !dbg !33
  %32 = mul i64 %31, %26, !dbg !34
  %.idx = shl nsw i64 %23, 8, !dbg !35
  %33 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx, !dbg !35
  %34 = getelementptr bfloat, ptr addrspace(1) %33, i64 %28, !dbg !35
  %35 = getelementptr bfloat, ptr addrspace(1) %34, i64 %32, !dbg !35
  %36 = load <8 x i16>, ptr addrspace(1) %35, align 16, !dbg !32
  br label %37, !dbg !32

37:                                               ; preds = %30, %10
  %bc10 = phi <8 x i16> [ %36, %30 ], [ zeroinitializer, %10 ], !dbg !32
  %38 = extractelement <8 x i16> %bc10, i64 0, !dbg !36
  %39 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %38) #1
  %40 = extractelement <8 x i16> %bc10, i64 1, !dbg !36
  %41 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %40) #1
  %42 = extractelement <8 x i16> %bc10, i64 2, !dbg !36
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #1
  %44 = extractelement <8 x i16> %bc10, i64 3, !dbg !36
  %45 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %44) #1
  %46 = extractelement <8 x i16> %bc10, i64 4, !dbg !36
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #1
  %48 = extractelement <8 x i16> %bc10, i64 5, !dbg !36
  %49 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %48) #1
  %50 = extractelement <8 x i16> %bc10, i64 6, !dbg !36
  %51 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %50) #1
  %52 = extractelement <8 x i16> %bc10, i64 7, !dbg !36
  %53 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %52) #1
  %54 = icmp sge i64 %23, %6, !dbg !37
  %55 = shl nsw i64 %26, 7, !dbg !38
  %56 = and i1 %54, %20, !dbg !39
  br i1 %56, label %57, label %61, !dbg !40

57:                                               ; preds = %37
  %58 = getelementptr bfloat, ptr addrspace(1) %1, i64 %55, !dbg !41
  %59 = getelementptr bfloat, ptr addrspace(1) %58, i64 %28, !dbg !41
  %60 = load <8 x i16>, ptr addrspace(1) %59, align 16, !dbg !40
  br label %61, !dbg !40

61:                                               ; preds = %57, %37
  %bc20 = phi <8 x i16> [ %60, %57 ], [ zeroinitializer, %37 ], !dbg !40
  %62 = extractelement <8 x i16> %bc20, i64 0, !dbg !42
  %63 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %62) #1
  %64 = extractelement <8 x i16> %bc20, i64 1, !dbg !42
  %65 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %64) #1
  %66 = extractelement <8 x i16> %bc20, i64 2, !dbg !42
  %67 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %66) #1
  %68 = extractelement <8 x i16> %bc20, i64 3, !dbg !42
  %69 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %68) #1
  %70 = extractelement <8 x i16> %bc20, i64 4, !dbg !42
  %71 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %70) #1
  %72 = extractelement <8 x i16> %bc20, i64 5, !dbg !42
  %73 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %72) #1
  %74 = extractelement <8 x i16> %bc20, i64 6, !dbg !42
  %75 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %74) #1
  %76 = extractelement <8 x i16> %bc20, i64 7, !dbg !42
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #1
  br i1 %56, label %78, label %93, !dbg !43

78:                                               ; preds = %61
  %79 = srem i32 %19, 64, !dbg !44
  %80 = sext i32 %79 to i64, !dbg !45
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !45
  %82 = srem i32 %18, 64, !dbg !44
  %83 = sext i32 %82 to i64, !dbg !45
  %84 = getelementptr float, ptr addrspace(1) %2, i64 %83, !dbg !45
  %85 = load float, ptr addrspace(1) %84, align 16, !dbg !43
  %86 = getelementptr inbounds nuw i8, ptr addrspace(1) %84, i64 4, !dbg !43
  %87 = load float, ptr addrspace(1) %86, align 4, !dbg !43
  %88 = getelementptr inbounds nuw i8, ptr addrspace(1) %84, i64 8, !dbg !43
  %89 = load float, ptr addrspace(1) %88, align 8, !dbg !43
  %90 = getelementptr inbounds nuw i8, ptr addrspace(1) %84, i64 12, !dbg !43
  %91 = load float, ptr addrspace(1) %90, align 4, !dbg !43
  %92 = load <4 x float>, ptr addrspace(1) %81, align 16, !dbg !43
  br label %93, !dbg !43

93:                                               ; preds = %61, %78
  %94 = phi float [ %91, %78 ], [ 0.000000e+00, %61 ]
  %95 = phi float [ %89, %78 ], [ 0.000000e+00, %61 ]
  %96 = phi float [ %87, %78 ], [ 0.000000e+00, %61 ]
  %97 = phi float [ %85, %78 ], [ 0.000000e+00, %61 ]
  %bc26 = phi <4 x float> [ %92, %78 ], [ zeroinitializer, %61 ], !dbg !43
  %98 = extractelement <4 x float> %bc26, i64 0, !dbg !43
  %99 = extractelement <4 x float> %bc26, i64 1, !dbg !43
  %100 = extractelement <4 x float> %bc26, i64 2, !dbg !43
  %101 = extractelement <4 x float> %bc26, i64 3, !dbg !43
  %102 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %97), !dbg !46
  %103 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %96), !dbg !46
  %104 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %95), !dbg !46
  %105 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %94), !dbg !46
  %106 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %98), !dbg !46
  %107 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %99), !dbg !46
  %108 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %100), !dbg !46
  %109 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %101), !dbg !46
  %110 = fptrunc double %3 to float, !dbg !47
  %111 = fmul float %102, %110, !dbg !48
  %112 = fmul float %103, %110, !dbg !48
  %113 = fmul float %104, %110, !dbg !48
  %114 = fmul float %105, %110, !dbg !48
  %115 = fmul float %106, %110, !dbg !48
  %116 = fmul float %107, %110, !dbg !48
  %117 = fmul float %108, %110, !dbg !48
  %118 = fmul float %109, %110, !dbg !48
  %119 = fmul float %63, %111, !dbg !49
  %120 = fmul float %65, %112, !dbg !49
  %121 = fmul float %67, %113, !dbg !49
  %122 = fmul float %69, %114, !dbg !49
  %123 = fmul float %71, %115, !dbg !49
  %124 = fmul float %73, %116, !dbg !49
  %125 = fmul float %75, %117, !dbg !49
  %126 = fmul float %77, %118, !dbg !49
  %127 = icmp slt i32 %.decomposed, 64, !dbg !50
  %128 = and i1 %54, %127, !dbg !51
  %129 = and i1 %20, %128, !dbg !52
  br i1 %129, label %130, label %135, !dbg !53

130:                                              ; preds = %93
  %131 = getelementptr bfloat, ptr addrspace(1) %1, i64 %55, !dbg !54
  %132 = getelementptr i8, ptr addrspace(1) %131, i64 128, !dbg !54
  %133 = getelementptr bfloat, ptr addrspace(1) %132, i64 %28, !dbg !54
  %134 = load <8 x i16>, ptr addrspace(1) %133, align 16, !dbg !53
  br label %135, !dbg !53

135:                                              ; preds = %130, %93
  %bc36 = phi <8 x i16> [ %134, %130 ], [ zeroinitializer, %93 ], !dbg !53
  %136 = extractelement <8 x i16> %bc36, i64 0, !dbg !55
  %137 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %136) #1
  %138 = extractelement <8 x i16> %bc36, i64 1, !dbg !55
  %139 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %138) #1
  %140 = extractelement <8 x i16> %bc36, i64 2, !dbg !55
  %141 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %140) #1
  %142 = extractelement <8 x i16> %bc36, i64 3, !dbg !55
  %143 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %142) #1
  %144 = extractelement <8 x i16> %bc36, i64 4, !dbg !55
  %145 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %144) #1
  %146 = extractelement <8 x i16> %bc36, i64 5, !dbg !55
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #1
  %148 = extractelement <8 x i16> %bc36, i64 6, !dbg !55
  %149 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %148) #1
  %150 = extractelement <8 x i16> %bc36, i64 7, !dbg !55
  %151 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %150) #1
  %152 = fsub float 0.000000e+00, %137, !dbg !56
  %153 = fsub float 0.000000e+00, %139, !dbg !56
  %154 = fsub float 0.000000e+00, %141, !dbg !56
  %155 = fsub float 0.000000e+00, %143, !dbg !56
  %156 = fsub float 0.000000e+00, %145, !dbg !56
  %157 = fsub float 0.000000e+00, %147, !dbg !56
  %158 = fsub float 0.000000e+00, %149, !dbg !56
  %159 = fsub float 0.000000e+00, %151, !dbg !56
  %160 = select i1 %128, float %152, float 0.000000e+00, !dbg !57
  %161 = select i1 %128, float %153, float 0.000000e+00, !dbg !57
  %162 = select i1 %128, float %154, float 0.000000e+00, !dbg !57
  %163 = select i1 %128, float %155, float 0.000000e+00, !dbg !57
  %164 = select i1 %128, float %156, float 0.000000e+00, !dbg !57
  %165 = select i1 %128, float %157, float 0.000000e+00, !dbg !57
  %166 = select i1 %128, float %158, float 0.000000e+00, !dbg !57
  %167 = select i1 %128, float %159, float 0.000000e+00, !dbg !57
  %168 = icmp sgt i32 %.decomposed, 63, !dbg !58
  %169 = and i1 %54, %168, !dbg !59
  %170 = and i1 %20, %169, !dbg !60
  br i1 %170, label %171, label %176, !dbg !61

171:                                              ; preds = %135
  %172 = getelementptr bfloat, ptr addrspace(1) %1, i64 %55, !dbg !62
  %173 = getelementptr bfloat, ptr addrspace(1) %172, i64 %28, !dbg !62
  %174 = getelementptr i8, ptr addrspace(1) %173, i64 -128, !dbg !62
  %175 = load <8 x i16>, ptr addrspace(1) %174, align 16, !dbg !61
  br label %176, !dbg !61

176:                                              ; preds = %171, %135
  %bc46 = phi <8 x i16> [ %175, %171 ], [ zeroinitializer, %135 ], !dbg !61
  %177 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %97), !dbg !63
  %178 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %96), !dbg !63
  %179 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %95), !dbg !63
  %180 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %94), !dbg !63
  %181 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %98), !dbg !63
  %182 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %99), !dbg !63
  %183 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %100), !dbg !63
  %184 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %101), !dbg !63
  br i1 %20, label %185, label %267, !dbg !64

185:                                              ; preds = %176
  %186 = extractelement <8 x i16> %bc46, i64 0, !dbg !65
  %187 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %186) #1
  %188 = select i1 %127, float %160, float %187, !dbg !66
  %189 = fmul float %177, %110, !dbg !67
  %190 = fmul float %189, %188, !dbg !68
  %191 = fadd float %119, %190, !dbg !69
  %192 = select i1 %27, float %39, float %191, !dbg !70
  %193 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %192) #1
  %194 = insertelement <2 x i16> poison, i16 %193, i64 0, !dbg !64
  %195 = extractelement <8 x i16> %bc46, i64 1, !dbg !65
  %196 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %195) #1
  %197 = select i1 %127, float %161, float %196, !dbg !66
  %198 = fmul float %178, %110, !dbg !67
  %199 = fmul float %198, %197, !dbg !68
  %200 = fadd float %120, %199, !dbg !69
  %201 = select i1 %27, float %41, float %200, !dbg !70
  %202 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %201) #1
  %203 = insertelement <2 x i16> %194, i16 %202, i64 1, !dbg !64
  %204 = bitcast <2 x i16> %203 to i32, !dbg !64
  %205 = insertelement <4 x i32> poison, i32 %204, i64 0, !dbg !64
  %206 = extractelement <8 x i16> %bc46, i64 2, !dbg !65
  %207 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %206) #1
  %208 = select i1 %127, float %162, float %207, !dbg !66
  %209 = fmul float %179, %110, !dbg !67
  %210 = fmul float %209, %208, !dbg !68
  %211 = fadd float %121, %210, !dbg !69
  %212 = select i1 %27, float %43, float %211, !dbg !70
  %213 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %212) #1
  %214 = insertelement <2 x i16> poison, i16 %213, i64 0, !dbg !64
  %215 = extractelement <8 x i16> %bc46, i64 3, !dbg !65
  %216 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %215) #1
  %217 = select i1 %127, float %163, float %216, !dbg !66
  %218 = fmul float %180, %110, !dbg !67
  %219 = fmul float %218, %217, !dbg !68
  %220 = fadd float %122, %219, !dbg !69
  %221 = select i1 %27, float %45, float %220, !dbg !70
  %222 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %221) #1
  %223 = insertelement <2 x i16> %214, i16 %222, i64 1, !dbg !64
  %224 = bitcast <2 x i16> %223 to i32, !dbg !64
  %225 = insertelement <4 x i32> %205, i32 %224, i64 1, !dbg !64
  %226 = extractelement <8 x i16> %bc46, i64 4, !dbg !65
  %227 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %226) #1
  %228 = select i1 %127, float %164, float %227, !dbg !66
  %229 = fmul float %181, %110, !dbg !67
  %230 = fmul float %229, %228, !dbg !68
  %231 = fadd float %123, %230, !dbg !69
  %232 = select i1 %27, float %47, float %231, !dbg !70
  %233 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %232) #1
  %234 = insertelement <2 x i16> poison, i16 %233, i64 0, !dbg !64
  %235 = extractelement <8 x i16> %bc46, i64 5, !dbg !65
  %236 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %235) #1
  %237 = select i1 %127, float %165, float %236, !dbg !66
  %238 = fmul float %182, %110, !dbg !67
  %239 = fmul float %238, %237, !dbg !68
  %240 = fadd float %124, %239, !dbg !69
  %241 = select i1 %27, float %49, float %240, !dbg !70
  %242 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %241) #1
  %243 = insertelement <2 x i16> %234, i16 %242, i64 1, !dbg !64
  %244 = bitcast <2 x i16> %243 to i32, !dbg !64
  %245 = insertelement <4 x i32> %225, i32 %244, i64 2, !dbg !64
  %246 = extractelement <8 x i16> %bc46, i64 6, !dbg !65
  %247 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %246) #1
  %248 = select i1 %127, float %166, float %247, !dbg !66
  %249 = fmul float %183, %110, !dbg !67
  %250 = fmul float %249, %248, !dbg !68
  %251 = fadd float %125, %250, !dbg !69
  %252 = select i1 %27, float %51, float %251, !dbg !70
  %253 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %252) #1
  %254 = insertelement <2 x i16> poison, i16 %253, i64 0, !dbg !64
  %255 = extractelement <8 x i16> %bc46, i64 7, !dbg !65
  %256 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %255) #1
  %257 = select i1 %127, float %167, float %256, !dbg !66
  %258 = fmul float %184, %110, !dbg !67
  %259 = fmul float %258, %257, !dbg !68
  %260 = fadd float %126, %259, !dbg !69
  %261 = select i1 %27, float %53, float %260, !dbg !70
  %262 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %261) #1
  %263 = insertelement <2 x i16> %254, i16 %262, i64 1, !dbg !64
  %264 = bitcast <2 x i16> %263 to i32, !dbg !64
  %265 = insertelement <4 x i32> %245, i32 %264, i64 3, !dbg !64
  %266 = getelementptr bfloat, ptr addrspace(1) %4, i64 %25, !dbg !71
  store <4 x i32> %265, ptr addrspace(1) %266, align 16, !dbg !64
  br label %267, !dbg !64

267:                                              ; preds = %185, %176
  ret void, !dbg !72
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c5hnwt5py3yrgfgjnvxlar3ejqn533oqck7cgobw6rhppnoxvld7.py", directory: "/tmp/torchinductor_jovyan/5h")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 22, column: 21, scope: !17)
!26 = !DILocation(line: 22, column: 28, scope: !17)
!27 = !DILocation(line: 23, column: 19, scope: !17)
!28 = !DILocation(line: 24, column: 19, scope: !17)
!29 = !DILocation(line: 30, column: 18, scope: !17)
!30 = !DILocation(line: 31, column: 35, scope: !17)
!31 = !DILocation(line: 31, column: 66, scope: !17)
!32 = !DILocation(line: 31, column: 59, scope: !17)
!33 = !DILocation(line: 31, column: 50, scope: !17)
!34 = !DILocation(line: 31, column: 54, scope: !17)
!35 = !DILocation(line: 31, column: 30, scope: !17)
!36 = !DILocation(line: 31, column: 117, scope: !17)
!37 = !DILocation(line: 32, column: 19, scope: !17)
!38 = !DILocation(line: 35, column: 39, scope: !17)
!39 = !DILocation(line: 35, column: 51, scope: !17)
!40 = !DILocation(line: 35, column: 44, scope: !17)
!41 = !DILocation(line: 35, column: 30, scope: !17)
!42 = !DILocation(line: 35, column: 102, scope: !17)
!43 = !DILocation(line: 36, column: 43, scope: !17)
!44 = !DILocation(line: 36, column: 37, scope: !17)
!45 = !DILocation(line: 36, column: 32, scope: !17)
!46 = !DILocation(line: 37, column: 24, scope: !17)
!47 = !DILocation(line: 39, column: 21, scope: !17)
!48 = !DILocation(line: 40, column: 20, scope: !17)
!49 = !DILocation(line: 42, column: 19, scope: !17)
!50 = !DILocation(line: 47, column: 20, scope: !17)
!51 = !DILocation(line: 48, column: 20, scope: !17)
!52 = !DILocation(line: 49, column: 60, scope: !17)
!53 = !DILocation(line: 49, column: 52, scope: !17)
!54 = !DILocation(line: 49, column: 31, scope: !17)
!55 = !DILocation(line: 49, column: 111, scope: !17)
!56 = !DILocation(line: 50, column: 13, scope: !17)
!57 = !DILocation(line: 52, column: 35, scope: !17)
!58 = !DILocation(line: 53, column: 21, scope: !17)
!59 = !DILocation(line: 56, column: 20, scope: !17)
!60 = !DILocation(line: 57, column: 63, scope: !17)
!61 = !DILocation(line: 57, column: 55, scope: !17)
!62 = !DILocation(line: 57, column: 31, scope: !17)
!63 = !DILocation(line: 59, column: 24, scope: !17)
!64 = !DILocation(line: 67, column: 37, scope: !17)
!65 = !DILocation(line: 57, column: 114, scope: !17)
!66 = !DILocation(line: 58, column: 35, scope: !17)
!67 = !DILocation(line: 60, column: 20, scope: !17)
!68 = !DILocation(line: 62, column: 20, scope: !17)
!69 = !DILocation(line: 63, column: 20, scope: !17)
!70 = !DILocation(line: 66, column: 33, scope: !17)
!71 = !DILocation(line: 67, column: 25, scope: !17)
!72 = !DILocation(line: 67, column: 4, scope: !17)
