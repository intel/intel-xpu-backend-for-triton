#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [16, 1], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0)
#loc1 = loc(unknown)
#loc52 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":60:27)
#loc81 = loc(callsite(#loc1 at #loc52))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg4: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg5: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg6: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg7: i64 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg8: i32 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0), %arg9: i32 loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<1x1xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<true> : tensor<1x2048xi1, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x2048xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<false> : tensor<1x2048xi1, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %arg8 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %5 = tt.splat %arg9 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc5)
    %6 = tt.splat %arg4 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc69)
    %7 = arith.cmpi slt, %arg4, %c0_i64 : i64 loc(#loc70)
    %8 = tt.splat %7 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc71)
    %9 = arith.extsi %0 : i32 to i64 loc(#loc10)
    %10 = arith.muli %arg4, %9 : i64 loc(#loc10)
    %11 = tt.splat %10 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc72)
    %12 = tt.splat %arg5 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc12)
    %13 = tt.splat %arg6 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc13)
    %14 = arith.addi %arg6, %arg7 : i64 loc(#loc14)
    %15 = tt.splat %14 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc15)
    %16 = tt.splat %arg7 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc16)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc73)
    %18 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<1x2048x!tt.ptr<i1>, #blocked> loc(#loc18)
    %19 = scf.for %arg10 = %c0_i32 to %arg9 step %c2048_i32 iter_args(%arg11 = %cst_5) -> (tensor<1x2048xi64, #blocked>)  : i32 {
      %36 = tt.splat %arg10 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc20)
      %37 = arith.addi %36, %4 : tensor<1x2048xi32, #blocked> loc(#loc20)
      %38 = arith.cmpi slt, %37, %5 : tensor<1x2048xi32, #blocked> loc(#loc5)
      %39 = arith.extsi %37 : tensor<1x2048xi32, #blocked> to tensor<1x2048xi64, #blocked> loc(#loc69)
      %40 = arith.divsi %39, %6 : tensor<1x2048xi64, #blocked> loc(#loc69)
      %41 = arith.remsi %39, %6 : tensor<1x2048xi64, #blocked> loc(#loc74)
      %42 = arith.cmpi ne, %41, %cst_5 : tensor<1x2048xi64, #blocked> loc(#loc75)
      %43 = arith.subi %40, %cst_4 : tensor<1x2048xi64, #blocked> loc(#loc76)
      %44 = arith.select %42, %43, %40 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc77)
      %45 = arith.cmpi slt, %37, %cst_3 : tensor<1x2048xi32, #blocked> loc(#loc78)
      %46 = arith.cmpi ne, %45, %8 : tensor<1x2048xi1, #blocked> loc(#loc71)
      %47 = arith.select %46, %44, %40 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc79)
      %48 = arith.cmpi slt, %47, %cst_4 : tensor<1x2048xi64, #blocked> loc(#loc27)
      %49 = arith.addi %41, %11 : tensor<1x2048xi64, #blocked> loc(#loc11)
      %50 = arith.cmpi slt, %49, %12 : tensor<1x2048xi64, #blocked> loc(#loc12)
      %51 = arith.andi %48, %50 : tensor<1x2048xi1, #blocked> loc(#loc28)
      %52 = tt.load %arg0 : !tt.ptr<i64> loc(#loc29)
      %53 = tt.splat %52 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc30)
      %54 = arith.select %51, %53, %cst_5 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc31)
      %55 = arith.addi %13, %41 : tensor<1x2048xi64, #blocked> loc(#loc13)
      %56 = arith.addi %55, %11 : tensor<1x2048xi64, #blocked> loc(#loc32)
      %57 = arith.cmpi sle, %56, %54 : tensor<1x2048xi64, #blocked> loc(#loc33)
      %58 = arith.cmpi slt, %56, %cst_5 : tensor<1x2048xi64, #blocked> loc(#loc34)
      %59 = arith.addi %15, %41 : tensor<1x2048xi64, #blocked> loc(#loc15)
      %60 = arith.addi %59, %11 : tensor<1x2048xi64, #blocked> loc(#loc35)
      %61 = arith.select %58, %60, %56 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc36)
      %62 = arith.cmpi sge, %61, %cst_5 : tensor<1x2048xi64, #blocked> loc(#loc37)
      %63 = arith.cmpi slt, %61, %16 : tensor<1x2048xi64, #blocked> loc(#loc16)
      %64 = arith.andi %62, %63 : tensor<1x2048xi1, #blocked> loc(#loc38)
      %65 = arith.andi %38, %51 : tensor<1x2048xi1, #blocked> loc(#loc39)
      %66 = arith.andi %65, %17 : tensor<1x2048xi1, #blocked> loc(#loc17)
      %67 = arith.xori %66, %cst_0 : tensor<1x2048xi1, #blocked> loc(#loc40)
      %68 = arith.ori %64, %67 : tensor<1x2048xi1, #blocked> loc(#loc41)
      tt.assert %68, "index out of bounds: 0 <= tl.where(ks2 + r0_1 + ks0*x0 < 0, ks2 + ks3 + r0_1 + ks0*x0, ks2 + r0_1 + ks0*x0) < ks3" : tensor<1x2048xi1, #blocked> loc(#loc42)
      %69 = tt.addptr %18, %61 : tensor<1x2048x!tt.ptr<i1>, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc18)
      %70 = tt.bitcast %69 : tensor<1x2048x!tt.ptr<i1>, #blocked> -> tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc43)
      %71 = tt.load %70, %66, %cst_1 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc43)
      %72 = arith.cmpi ne, %71, %cst_1 : tensor<1x2048xi8, #blocked> loc(#loc43)
      %73 = arith.andi %57, %72 : tensor<1x2048xi1, #blocked> loc(#loc44)
      %74 = arith.select %51, %73, %cst_2 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi1, #blocked> loc(#loc45)
      %75 = arith.extui %74 : tensor<1x2048xi1, #blocked> to tensor<1x2048xi64, #blocked> loc(#loc46)
      %76 = arith.addi %arg11, %75 : tensor<1x2048xi64, #blocked> loc(#loc47)
      %77 = arith.andi %38, %17 : tensor<1x2048xi1, #blocked> loc(#loc48)
      %78 = arith.select %77, %76, %arg11 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc49)
      scf.yield %78 : tensor<1x2048xi64, #blocked> loc(#loc50)
    } loc(#loc19)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg10: i64 loc(callsite(#loc1 at #loc52)), %arg11: i64 loc(callsite(#loc1 at #loc52))):
      %36 = arith.addi %arg10, %arg11 : i64 loc(#loc84)
      tt.reduce.return %36 : i64 loc(#loc80)
    }) : (tensor<1x2048xi64, #blocked>) -> tensor<1xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc80)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1xi64, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xi64, #blocked> loc(#loc54)
    %22 = arith.cmpi sgt, %21, %cst : tensor<1x1xi64, #blocked> loc(#loc55)
    %23 = arith.muli %arg4, %arg4 : i64 loc(#loc56)
    %24 = tt.splat %23 : i64 -> tensor<1x1xi64, #blocked> loc(#loc57)
    %25 = arith.cmpi slt, %21, %24 : tensor<1x1xi64, #blocked> loc(#loc57)
    %26 = arith.andi %22, %25 : tensor<1x1xi1, #blocked> loc(#loc58)
    %27 = ttg.convert_layout %26 : tensor<1x1xi1, #blocked> -> tensor<1x1xi1, #blocked1> loc(#loc82)
    %28 = arith.extui %27 : tensor<1x1xi1, #blocked1> to tensor<1x1xi32, #blocked1> loc(#loc82)
    %29 = arith.cmpi eq, %21, %24 : tensor<1x1xi64, #blocked> loc(#loc61)
    %30 = ttg.convert_layout %29 : tensor<1x1xi1, #blocked> -> tensor<1x1xi1, #blocked1> loc(#loc83)
    %31 = arith.extui %30 : tensor<1x1xi1, #blocked1> to tensor<1x1xi32, #blocked1> loc(#loc83)
    %32 = tt.addptr %arg2, %0 : !tt.ptr<i32>, i32 loc(#loc64)
    %33 = tt.splat %32 : !tt.ptr<i32> -> tensor<1x1x!tt.ptr<i32>, #blocked1> loc(#loc64)
    tt.store %33, %28, %2 {ttig.block_io = "row_major"} : tensor<1x1x!tt.ptr<i32>, #blocked1> loc(#loc65)
    %34 = tt.addptr %arg3, %0 : !tt.ptr<i32>, i32 loc(#loc66)
    %35 = tt.splat %34 : !tt.ptr<i32> -> tensor<1x1x!tt.ptr<i32>, #blocked1> loc(#loc66)
    tt.store %35, %31, %2 {ttig.block_io = "row_major"} : tensor<1x1x!tt.ptr<i32>, #blocked1> loc(#loc67)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":21:28)
#loc3 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":23:21)
#loc4 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":24:37)
#loc5 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":30:29)
#loc6 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":73:16)
#loc7 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":33:59)
#loc8 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:36)
#loc9 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:32)
#loc10 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":38:26)
#loc11 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":38:22)
#loc12 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":40:22)
#loc13 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":47:22)
#loc14 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:72)
#loc15 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:78)
#loc16 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:202)
#loc17 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:229)
#loc18 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":52:35)
#loc19 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":28:40)
#loc20 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":29:31)
#loc21 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":74:20)
#loc22 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:34)
#loc23 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:44)
#loc24 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:47)
#loc25 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:25)
#loc26 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:47)
#loc27 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":37:22)
#loc28 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":41:22)
#loc29 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":42:23)
#loc30 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":43:37)
#loc31 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":44:36)
#loc32 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":47:29)
#loc33 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":48:25)
#loc34 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:63)
#loc35 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:85)
#loc36 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:93)
#loc37 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:32)
#loc38 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:118)
#loc39 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:222)
#loc40 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:212)
#loc41 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:210)
#loc42 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":51:237)
#loc43 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":52:119)
#loc44 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":53:24)
#loc45 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":55:38)
#loc46 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":56:25)
#loc47 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":58:25)
#loc48 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:36)
#loc49 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:50)
#loc50 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":59:8)
#loc51 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc53 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc54 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":60:30)
#loc55 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":62:20)
#loc56 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":63:16)
#loc57 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":64:20)
#loc58 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":65:20)
#loc59 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":67:21)
#loc60 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":66:21)
#loc61 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":68:21)
#loc62 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":70:21)
#loc63 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":69:21)
#loc64 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":71:25)
#loc65 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":71:37)
#loc66 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:25)
#loc67 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:37)
#loc68 = loc("/tmp/torchinductor_jovyan/pk/cpk2toaxz3pzfr2q5uvath7ycepcg53tsnitssscybbuczzaxdft.py":72:4)
#loc69 = loc(callsite(#loc6 at #loc7))
#loc70 = loc(callsite(#loc8 at #loc7))
#loc71 = loc(callsite(#loc9 at #loc7))
#loc72 = loc(fused[#loc11, #loc10])
#loc73 = loc(fused[#loc17, #loc3])
#loc74 = loc(callsite(#loc21 at #loc7))
#loc75 = loc(callsite(#loc22 at #loc7))
#loc76 = loc(callsite(#loc23 at #loc7))
#loc77 = loc(callsite(#loc24 at #loc7))
#loc78 = loc(callsite(#loc25 at #loc7))
#loc79 = loc(callsite(#loc26 at #loc7))
#loc80 = loc(callsite(#loc51 at #loc52))
#loc82 = loc(fused[#loc59, #loc60])
#loc83 = loc(fused[#loc62, #loc63])
#loc84 = loc(callsite(#loc53 at #loc80))
