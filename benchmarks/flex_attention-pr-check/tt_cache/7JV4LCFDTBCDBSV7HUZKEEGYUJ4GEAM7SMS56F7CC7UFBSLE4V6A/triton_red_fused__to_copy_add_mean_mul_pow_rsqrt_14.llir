; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_14(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, ptr addrspace(1) readonly captures(none) %5, double %6, ptr addrspace(1) captures(none) %7, ptr addrspace(1) writeonly captures(none) %8, i32 %9, ptr addrspace(1) readnone captures(none) %10, ptr addrspace(3) captures(none) %11) local_unnamed_addr #2 !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %13 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !20
  %14 = trunc i64 %13 to i32, !dbg !20
  %15 = shl i64 %13, 2, !dbg !20
  %16 = and i64 %15, 2044, !dbg !20
  %17 = getelementptr bfloat, ptr addrspace(1) %0, i64 %16, !dbg !21
  %18 = load i16, ptr addrspace(1) %17, align 8, !dbg !22
  %19 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %18) #4
  %20 = getelementptr inbounds nuw i8, ptr addrspace(1) %17, i64 2, !dbg !22
  %21 = load i16, ptr addrspace(1) %20, align 2, !dbg !22
  %22 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %21) #4
  %23 = getelementptr inbounds nuw i8, ptr addrspace(1) %17, i64 4, !dbg !22
  %24 = load i16, ptr addrspace(1) %23, align 4, !dbg !22
  %25 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %24) #4
  %26 = getelementptr inbounds nuw i8, ptr addrspace(1) %17, i64 6, !dbg !22
  %27 = load i16, ptr addrspace(1) %26, align 2, !dbg !22
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #4
  %29 = getelementptr bfloat, ptr addrspace(1) %1, i64 %16, !dbg !23
  %30 = load i16, ptr addrspace(1) %29, align 8, !dbg !24
  %31 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %30) #4
  %32 = getelementptr inbounds nuw i8, ptr addrspace(1) %29, i64 2, !dbg !24
  %33 = load i16, ptr addrspace(1) %32, align 2, !dbg !24
  %34 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %33) #4
  %35 = getelementptr inbounds nuw i8, ptr addrspace(1) %29, i64 4, !dbg !24
  %36 = load i16, ptr addrspace(1) %35, align 4, !dbg !24
  %37 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %36) #4
  %38 = getelementptr inbounds nuw i8, ptr addrspace(1) %29, i64 6, !dbg !24
  %39 = load i16, ptr addrspace(1) %38, align 2, !dbg !24
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #4
  %41 = getelementptr bfloat, ptr addrspace(1) %2, i64 %16, !dbg !25
  %42 = load i16, ptr addrspace(1) %41, align 8, !dbg !26
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #4
  %44 = getelementptr inbounds nuw i8, ptr addrspace(1) %41, i64 2, !dbg !26
  %45 = load i16, ptr addrspace(1) %44, align 2, !dbg !26
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #4
  %47 = getelementptr inbounds nuw i8, ptr addrspace(1) %41, i64 4, !dbg !26
  %48 = load i16, ptr addrspace(1) %47, align 4, !dbg !26
  %49 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %48) #4
  %50 = getelementptr inbounds nuw i8, ptr addrspace(1) %41, i64 6, !dbg !26
  %51 = load i16, ptr addrspace(1) %50, align 2, !dbg !26
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #4
  %53 = getelementptr bfloat, ptr addrspace(1) %3, i64 %16, !dbg !27
  %54 = load i16, ptr addrspace(1) %53, align 8, !dbg !28
  %55 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %54) #4
  %56 = getelementptr inbounds nuw i8, ptr addrspace(1) %53, i64 2, !dbg !28
  %57 = load i16, ptr addrspace(1) %56, align 2, !dbg !28
  %58 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %57) #4
  %59 = getelementptr inbounds nuw i8, ptr addrspace(1) %53, i64 4, !dbg !28
  %60 = load i16, ptr addrspace(1) %59, align 4, !dbg !28
  %61 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %60) #4
  %62 = getelementptr inbounds nuw i8, ptr addrspace(1) %53, i64 6, !dbg !28
  %63 = load i16, ptr addrspace(1) %62, align 2, !dbg !28
  %64 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %63) #4
  %65 = getelementptr bfloat, ptr addrspace(1) %4, i64 %16, !dbg !29
  %66 = load i16, ptr addrspace(1) %65, align 8, !dbg !30
  %67 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %66) #4
  %68 = getelementptr inbounds nuw i8, ptr addrspace(1) %65, i64 2, !dbg !30
  %69 = load i16, ptr addrspace(1) %68, align 2, !dbg !30
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #4
  %71 = getelementptr inbounds nuw i8, ptr addrspace(1) %65, i64 4, !dbg !30
  %72 = load i16, ptr addrspace(1) %71, align 4, !dbg !30
  %73 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %72) #4
  %74 = getelementptr inbounds nuw i8, ptr addrspace(1) %65, i64 6, !dbg !30
  %75 = load i16, ptr addrspace(1) %74, align 2, !dbg !30
  %76 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %75) #4
  %77 = fadd float %19, %31, !dbg !31
  %78 = fadd float %22, %34, !dbg !31
  %79 = fadd float %25, %37, !dbg !31
  %80 = fadd float %28, %40, !dbg !31
  %81 = fadd float %77, %43, !dbg !32
  %82 = fadd float %78, %46, !dbg !32
  %83 = fadd float %79, %49, !dbg !32
  %84 = fadd float %80, %52, !dbg !32
  %85 = fadd float %81, %55, !dbg !33
  %86 = fadd float %82, %58, !dbg !33
  %87 = fadd float %83, %61, !dbg !33
  %88 = fadd float %84, %64, !dbg !33
  %89 = fadd float %85, %67, !dbg !34
  %90 = fadd float %86, %70, !dbg !34
  %91 = fadd float %87, %73, !dbg !34
  %92 = fadd float %88, %76, !dbg !34
  %93 = fmul float %89, %89, !dbg !35
  %94 = fmul float %90, %90, !dbg !35
  %95 = fmul float %91, %91, !dbg !35
  %96 = fmul float %92, %92, !dbg !35
  %97 = insertelement <4 x float> poison, float %89, i64 0, !dbg !36
  %98 = insertelement <4 x float> %97, float %90, i64 1, !dbg !36
  %99 = insertelement <4 x float> %98, float %91, i64 2, !dbg !36
  %100 = insertelement <4 x float> %99, float %92, i64 3, !dbg !36
  %101 = getelementptr float, ptr addrspace(1) %7, i64 %16, !dbg !37
  store <4 x float> %100, ptr addrspace(1) %101, align 16, !dbg !36
  %102 = or disjoint i64 %16, 2048, !dbg !38
  %103 = getelementptr bfloat, ptr addrspace(1) %0, i64 %102, !dbg !21
  %104 = load i16, ptr addrspace(1) %103, align 8, !dbg !22
  %105 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %104) #4
  %106 = getelementptr inbounds nuw i8, ptr addrspace(1) %103, i64 2, !dbg !22
  %107 = load i16, ptr addrspace(1) %106, align 2, !dbg !22
  %108 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %107) #4
  %109 = getelementptr inbounds nuw i8, ptr addrspace(1) %103, i64 4, !dbg !22
  %110 = load i16, ptr addrspace(1) %109, align 4, !dbg !22
  %111 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %110) #4
  %112 = getelementptr inbounds nuw i8, ptr addrspace(1) %103, i64 6, !dbg !22
  %113 = load i16, ptr addrspace(1) %112, align 2, !dbg !22
  %114 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %113) #4
  %115 = getelementptr bfloat, ptr addrspace(1) %1, i64 %102, !dbg !23
  %116 = load i16, ptr addrspace(1) %115, align 8, !dbg !24
  %117 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %116) #4
  %118 = getelementptr inbounds nuw i8, ptr addrspace(1) %115, i64 2, !dbg !24
  %119 = load i16, ptr addrspace(1) %118, align 2, !dbg !24
  %120 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %119) #4
  %121 = getelementptr inbounds nuw i8, ptr addrspace(1) %115, i64 4, !dbg !24
  %122 = load i16, ptr addrspace(1) %121, align 4, !dbg !24
  %123 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %122) #4
  %124 = getelementptr inbounds nuw i8, ptr addrspace(1) %115, i64 6, !dbg !24
  %125 = load i16, ptr addrspace(1) %124, align 2, !dbg !24
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = getelementptr bfloat, ptr addrspace(1) %2, i64 %102, !dbg !25
  %128 = load i16, ptr addrspace(1) %127, align 8, !dbg !26
  %129 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %128) #4
  %130 = getelementptr inbounds nuw i8, ptr addrspace(1) %127, i64 2, !dbg !26
  %131 = load i16, ptr addrspace(1) %130, align 2, !dbg !26
  %132 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %131) #4
  %133 = getelementptr inbounds nuw i8, ptr addrspace(1) %127, i64 4, !dbg !26
  %134 = load i16, ptr addrspace(1) %133, align 4, !dbg !26
  %135 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %134) #4
  %136 = getelementptr inbounds nuw i8, ptr addrspace(1) %127, i64 6, !dbg !26
  %137 = load i16, ptr addrspace(1) %136, align 2, !dbg !26
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #4
  %139 = getelementptr bfloat, ptr addrspace(1) %3, i64 %102, !dbg !27
  %140 = load i16, ptr addrspace(1) %139, align 8, !dbg !28
  %141 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %140) #4
  %142 = getelementptr inbounds nuw i8, ptr addrspace(1) %139, i64 2, !dbg !28
  %143 = load i16, ptr addrspace(1) %142, align 2, !dbg !28
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #4
  %145 = getelementptr inbounds nuw i8, ptr addrspace(1) %139, i64 4, !dbg !28
  %146 = load i16, ptr addrspace(1) %145, align 4, !dbg !28
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #4
  %148 = getelementptr inbounds nuw i8, ptr addrspace(1) %139, i64 6, !dbg !28
  %149 = load i16, ptr addrspace(1) %148, align 2, !dbg !28
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = getelementptr bfloat, ptr addrspace(1) %4, i64 %102, !dbg !29
  %152 = load i16, ptr addrspace(1) %151, align 8, !dbg !30
  %153 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %152) #4
  %154 = getelementptr inbounds nuw i8, ptr addrspace(1) %151, i64 2, !dbg !30
  %155 = load i16, ptr addrspace(1) %154, align 2, !dbg !30
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = getelementptr inbounds nuw i8, ptr addrspace(1) %151, i64 4, !dbg !30
  %158 = load i16, ptr addrspace(1) %157, align 4, !dbg !30
  %159 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %158) #4
  %160 = getelementptr inbounds nuw i8, ptr addrspace(1) %151, i64 6, !dbg !30
  %161 = load i16, ptr addrspace(1) %160, align 2, !dbg !30
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = fadd float %105, %117, !dbg !31
  %164 = fadd float %108, %120, !dbg !31
  %165 = fadd float %111, %123, !dbg !31
  %166 = fadd float %114, %126, !dbg !31
  %167 = fadd float %163, %129, !dbg !32
  %168 = fadd float %164, %132, !dbg !32
  %169 = fadd float %165, %135, !dbg !32
  %170 = fadd float %166, %138, !dbg !32
  %171 = fadd float %167, %141, !dbg !33
  %172 = fadd float %168, %144, !dbg !33
  %173 = fadd float %169, %147, !dbg !33
  %174 = fadd float %170, %150, !dbg !33
  %175 = fadd float %171, %153, !dbg !34
  %176 = fadd float %172, %156, !dbg !34
  %177 = fadd float %173, %159, !dbg !34
  %178 = fadd float %174, %162, !dbg !34
  %179 = fmul float %175, %175, !dbg !35
  %180 = fmul float %176, %176, !dbg !35
  %181 = fmul float %177, %177, !dbg !35
  %182 = fmul float %178, %178, !dbg !35
  %183 = fadd float %93, %179, !dbg !39
  %184 = fadd float %94, %180, !dbg !39
  %185 = fadd float %95, %181, !dbg !39
  %186 = fadd float %96, %182, !dbg !39
  %187 = insertelement <4 x float> poison, float %175, i64 0, !dbg !36
  %188 = insertelement <4 x float> %187, float %176, i64 1, !dbg !36
  %189 = insertelement <4 x float> %188, float %177, i64 2, !dbg !36
  %190 = insertelement <4 x float> %189, float %178, i64 3, !dbg !36
  %191 = getelementptr float, ptr addrspace(1) %7, i64 %102, !dbg !37
  store <4 x float> %190, ptr addrspace(1) %191, align 16, !dbg !36
  %192 = and i32 %14, 511, !dbg !20
  %193 = and i32 %14, 31, !dbg !20
  %194 = fadd float %183, %184, !dbg !40
  %195 = fadd float %185, %194, !dbg !40
  %196 = fadd float %186, %195, !dbg !40
  %197 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %196) #5, !dbg !44
  %198 = icmp eq i32 %193, 0, !dbg !44
  br i1 %198, label %199, label %203, !dbg !44

199:                                              ; preds = %12
  %200 = lshr exact i32 %192, 5, !dbg !20
  %201 = zext nneg i32 %200 to i64, !dbg !44
  %202 = getelementptr float, ptr addrspace(3) %11, i64 %201, !dbg !44
  store float %197, ptr addrspace(3) %202, align 4, !dbg !44
  br label %203, !dbg !44

203:                                              ; preds = %199, %12
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !44
  %204 = icmp samesign ult i32 %192, 16, !dbg !44
  %205 = and i64 %13, 511, !dbg !44
  %206 = getelementptr float, ptr addrspace(3) %11, i64 %205, !dbg !44
  br i1 %204, label %207, label %209, !dbg !44

207:                                              ; preds = %203
  %208 = load float, ptr addrspace(3) %206, align 4, !dbg !44
  br label %209, !dbg !44

209:                                              ; preds = %207, %203
  %210 = phi float [ %208, %207 ], [ undef, %203 ], !dbg !43
  %211 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %210, i32 16) #5, !dbg !44
  %212 = and i32 %14, 15, !dbg !44
  %213 = icmp eq i32 %212, 0, !dbg !44
  %214 = and i1 %204, %213, !dbg !44
  br i1 %214, label %215, label %216, !dbg !44

215:                                              ; preds = %209
  store float %211, ptr addrspace(3) %206, align 4, !dbg !44
  br label %216, !dbg !44

216:                                              ; preds = %215, %209
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !44
  %217 = load float, ptr addrspace(3) %11, align 4, !dbg !44
  %218 = fmul float %217, 0x3F30000000000000, !dbg !45
  %219 = fptrunc double %6 to float, !dbg !46
  %220 = fadd float %218, %219, !dbg !47
  %221 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %220) #6, !dbg !48
  %222 = getelementptr bfloat, ptr addrspace(1) %5, i64 %16, !dbg !49
  %223 = load i16, ptr addrspace(1) %222, align 8, !dbg !50
  %224 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %223) #4
  %225 = getelementptr inbounds nuw i8, ptr addrspace(1) %222, i64 2, !dbg !50
  %226 = load i16, ptr addrspace(1) %225, align 2, !dbg !50
  %227 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %226) #4
  %228 = getelementptr inbounds nuw i8, ptr addrspace(1) %222, i64 4, !dbg !50
  %229 = load i16, ptr addrspace(1) %228, align 4, !dbg !50
  %230 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %229) #4
  %231 = getelementptr inbounds nuw i8, ptr addrspace(1) %222, i64 6, !dbg !50
  %232 = load i16, ptr addrspace(1) %231, align 2, !dbg !50
  %233 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %232) #4
  %234 = load float, ptr addrspace(1) %101, align 16, !dbg !51
  %235 = fmul float %221, %234, !dbg !52
  %236 = fmul float %224, %235, !dbg !53
  %237 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %236) #4
  %238 = insertelement <2 x i16> poison, i16 %237, i64 0, !dbg !54
  %239 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 4, !dbg !51
  %240 = load float, ptr addrspace(1) %239, align 4, !dbg !51
  %241 = fmul float %221, %240, !dbg !52
  %242 = fmul float %227, %241, !dbg !53
  %243 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %242) #4
  %244 = insertelement <2 x i16> %238, i16 %243, i64 1, !dbg !54
  %245 = bitcast <2 x i16> %244 to i32, !dbg !54
  %246 = insertelement <2 x i32> poison, i32 %245, i64 0, !dbg !54
  %247 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 8, !dbg !51
  %248 = load float, ptr addrspace(1) %247, align 8, !dbg !51
  %249 = fmul float %221, %248, !dbg !52
  %250 = fmul float %230, %249, !dbg !53
  %251 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %250) #4
  %252 = insertelement <2 x i16> poison, i16 %251, i64 0, !dbg !54
  %253 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 12, !dbg !51
  %254 = load float, ptr addrspace(1) %253, align 4, !dbg !51
  %255 = fmul float %221, %254, !dbg !52
  %256 = fmul float %233, %255, !dbg !53
  %257 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %256) #4
  %258 = insertelement <2 x i16> %252, i16 %257, i64 1, !dbg !54
  %259 = bitcast <2 x i16> %258 to i32, !dbg !54
  %260 = insertelement <2 x i32> %246, i32 %259, i64 1, !dbg !54
  %261 = getelementptr bfloat, ptr addrspace(1) %8, i64 %16, !dbg !55
  store <2 x i32> %260, ptr addrspace(1) %261, align 8, !dbg !54
  %262 = getelementptr bfloat, ptr addrspace(1) %5, i64 %102, !dbg !49
  %263 = load i16, ptr addrspace(1) %262, align 8, !dbg !50
  %264 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %263) #4
  %265 = getelementptr inbounds nuw i8, ptr addrspace(1) %262, i64 2, !dbg !50
  %266 = load i16, ptr addrspace(1) %265, align 2, !dbg !50
  %267 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %266) #4
  %268 = getelementptr inbounds nuw i8, ptr addrspace(1) %262, i64 4, !dbg !50
  %269 = load i16, ptr addrspace(1) %268, align 4, !dbg !50
  %270 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %269) #4
  %271 = getelementptr inbounds nuw i8, ptr addrspace(1) %262, i64 6, !dbg !50
  %272 = load i16, ptr addrspace(1) %271, align 2, !dbg !50
  %273 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %272) #4
  %274 = load float, ptr addrspace(1) %191, align 16, !dbg !51
  %275 = fmul float %221, %274, !dbg !52
  %276 = fmul float %264, %275, !dbg !53
  %277 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %276) #4
  %278 = insertelement <2 x i16> poison, i16 %277, i64 0, !dbg !54
  %279 = getelementptr inbounds nuw i8, ptr addrspace(1) %191, i64 4, !dbg !51
  %280 = load float, ptr addrspace(1) %279, align 4, !dbg !51
  %281 = fmul float %221, %280, !dbg !52
  %282 = fmul float %267, %281, !dbg !53
  %283 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %282) #4
  %284 = insertelement <2 x i16> %278, i16 %283, i64 1, !dbg !54
  %285 = bitcast <2 x i16> %284 to i32, !dbg !54
  %286 = insertelement <2 x i32> poison, i32 %285, i64 0, !dbg !54
  %287 = getelementptr inbounds nuw i8, ptr addrspace(1) %191, i64 8, !dbg !51
  %288 = load float, ptr addrspace(1) %287, align 8, !dbg !51
  %289 = fmul float %221, %288, !dbg !52
  %290 = fmul float %270, %289, !dbg !53
  %291 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %290) #4
  %292 = insertelement <2 x i16> poison, i16 %291, i64 0, !dbg !54
  %293 = getelementptr inbounds nuw i8, ptr addrspace(1) %191, i64 12, !dbg !51
  %294 = load float, ptr addrspace(1) %293, align 4, !dbg !51
  %295 = fmul float %221, %294, !dbg !52
  %296 = fmul float %273, %295, !dbg !53
  %297 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %296) #4
  %298 = insertelement <2 x i16> %292, i16 %297, i64 1, !dbg !54
  %299 = bitcast <2 x i16> %298 to i32, !dbg !54
  %300 = insertelement <2 x i32> %286, i32 %299, i64 1, !dbg !54
  %301 = getelementptr bfloat, ptr addrspace(1) %8, i64 %102, !dbg !55
  store <2 x i32> %300, ptr addrspace(1) %301, align 8, !dbg !54
  ret void, !dbg !56
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "co5ndc5zgs2uwwotb3v5apljandiiuhyj4fym6r6hg6tb6eyyuuv.py", directory: "/tmp/torchinductor_jovyan/o5")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_14", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_14", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 512, i64 1, i64 1}
!20 = !DILocation(line: 26, column: 37, scope: !17)
!21 = !DILocation(line: 35, column: 34, scope: !17)
!22 = !DILocation(line: 35, column: 95, scope: !17)
!23 = !DILocation(line: 36, column: 34, scope: !17)
!24 = !DILocation(line: 36, column: 95, scope: !17)
!25 = !DILocation(line: 37, column: 34, scope: !17)
!26 = !DILocation(line: 37, column: 95, scope: !17)
!27 = !DILocation(line: 38, column: 34, scope: !17)
!28 = !DILocation(line: 38, column: 95, scope: !17)
!29 = !DILocation(line: 39, column: 34, scope: !17)
!30 = !DILocation(line: 39, column: 95, scope: !17)
!31 = !DILocation(line: 40, column: 22, scope: !17)
!32 = !DILocation(line: 41, column: 22, scope: !17)
!33 = !DILocation(line: 42, column: 22, scope: !17)
!34 = !DILocation(line: 43, column: 22, scope: !17)
!35 = !DILocation(line: 45, column: 23, scope: !17)
!36 = !DILocation(line: 49, column: 79, scope: !17)
!37 = !DILocation(line: 49, column: 29, scope: !17)
!38 = !DILocation(line: 30, column: 31, scope: !17)
!39 = !DILocation(line: 47, column: 25, scope: !17)
!40 = !DILocation(line: 260, column: 15, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !17, file: !42, discriminator: 0)
!42 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!43 = !DILocation(line: 50, column: 27, scope: !17)
!44 = !DILocation(line: 290, column: 36, scope: !41, inlinedAt: !43)
!45 = !DILocation(line: 61, column: 25, scope: !17)
!46 = !DILocation(line: 62, column: 25, scope: !17)
!47 = !DILocation(line: 63, column: 24, scope: !17)
!48 = !DILocation(line: 64, column: 32, scope: !17)
!49 = !DILocation(line: 58, column: 35, scope: !17)
!50 = !DILocation(line: 58, column: 96, scope: !17)
!51 = !DILocation(line: 59, column: 43, scope: !17)
!52 = !DILocation(line: 65, column: 24, scope: !17)
!53 = !DILocation(line: 67, column: 24, scope: !17)
!54 = !DILocation(line: 68, column: 80, scope: !17)
!55 = !DILocation(line: 68, column: 29, scope: !17)
!56 = !DILocation(line: 52, column: 4, scope: !17)
