; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i64 %5, i64 %6, i64 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %11 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %12 = trunc i64 %11 to i32, !dbg !20
  %13 = shl i32 %12, 9, !dbg !21
  %14 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %15 = trunc i64 %14 to i32, !dbg !22
  %16 = shl i32 %15, 1, !dbg !22
  %17 = and i32 %16, 510, !dbg !22
  %18 = or disjoint i32 %17, %13, !dbg !23
  %19 = icmp slt i32 %18, %8, !dbg !24
  %.frozen = freeze i32 %18, !dbg !25
  %20 = sdiv i32 %.frozen, 128, !dbg !25
  %21 = sext i32 %20 to i64, !dbg !26
  %22 = srem i64 %21, %5, !dbg !26
  %23 = mul i32 %20, 128, !dbg !27
  %.decomposed = sub i32 %.frozen, %23, !dbg !27
  %24 = sext i32 %18 to i64, !dbg !28
  %25 = sdiv i64 %24, %7, !dbg !28
  %26 = icmp slt i64 %22, %6, !dbg !29
  %27 = shl nsw i64 %25, 7, !dbg !30
  %28 = sext i32 %.decomposed to i64, !dbg !31
  %29 = add nsw i64 %27, %28, !dbg !31
  %30 = and i1 %26, %19, !dbg !32
  br i1 %30, label %31, label %35, !dbg !33

31:                                               ; preds = %10
  %32 = getelementptr bfloat, ptr addrspace(1) %0, i64 %29, !dbg !34
  %.idx = shl nsw i64 %22, 11, !dbg !34
  %33 = getelementptr i8, ptr addrspace(1) %32, i64 %.idx, !dbg !34
  %34 = load <2 x i16>, ptr addrspace(1) %33, align 4, !dbg !33
  br label %35, !dbg !33

35:                                               ; preds = %31, %10
  %bc1 = phi <2 x i16> [ %34, %31 ], [ zeroinitializer, %10 ], !dbg !33
  %36 = extractelement <2 x i16> %bc1, i64 0, !dbg !35
  %37 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %36) #1
  %38 = extractelement <2 x i16> %bc1, i64 1, !dbg !35
  %39 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %38) #1
  %40 = icmp sge i64 %22, %6, !dbg !36
  %41 = and i1 %40, %19, !dbg !37
  br i1 %41, label %42, label %45, !dbg !38

42:                                               ; preds = %35
  %43 = getelementptr bfloat, ptr addrspace(1) %1, i64 %29, !dbg !39
  %44 = load <2 x i16>, ptr addrspace(1) %43, align 4, !dbg !38
  br label %45, !dbg !38

45:                                               ; preds = %42, %35
  %bc2 = phi <2 x i16> [ %44, %42 ], [ zeroinitializer, %35 ], !dbg !38
  %46 = extractelement <2 x i16> %bc2, i64 0, !dbg !40
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #1
  %48 = extractelement <2 x i16> %bc2, i64 1, !dbg !40
  %49 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %48) #1
  br i1 %41, label %50, label %55, !dbg !41

50:                                               ; preds = %45
  %51 = srem i32 %18, 64, !dbg !42
  %52 = sext i32 %51 to i64, !dbg !43
  %53 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !43
  %54 = load <2 x float>, ptr addrspace(1) %53, align 8, !dbg !41
  br label %55, !dbg !41

55:                                               ; preds = %50, %45
  %bc3 = phi <2 x float> [ %54, %50 ], [ zeroinitializer, %45 ], !dbg !41
  %56 = extractelement <2 x float> %bc3, i64 0, !dbg !41
  %57 = extractelement <2 x float> %bc3, i64 1, !dbg !41
  %58 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %56), !dbg !44
  %59 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %57), !dbg !44
  %60 = fptrunc double %3 to float, !dbg !45
  %61 = fmul float %58, %60, !dbg !46
  %62 = fmul float %59, %60, !dbg !46
  %63 = fmul float %47, %61, !dbg !47
  %64 = fmul float %49, %62, !dbg !47
  %65 = icmp slt i32 %.decomposed, 64, !dbg !48
  %66 = and i1 %40, %65, !dbg !49
  %67 = and i1 %19, %66, !dbg !50
  br i1 %67, label %68, label %73, !dbg !51

68:                                               ; preds = %55
  %69 = getelementptr bfloat, ptr addrspace(1) %1, i64 %27, !dbg !52
  %70 = getelementptr i8, ptr addrspace(1) %69, i64 128, !dbg !52
  %71 = getelementptr bfloat, ptr addrspace(1) %70, i64 %28, !dbg !52
  %72 = load <2 x i16>, ptr addrspace(1) %71, align 4, !dbg !51
  br label %73, !dbg !51

73:                                               ; preds = %68, %55
  %bc4 = phi <2 x i16> [ %72, %68 ], [ zeroinitializer, %55 ], !dbg !51
  %74 = extractelement <2 x i16> %bc4, i64 0, !dbg !53
  %75 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %74) #1
  %76 = extractelement <2 x i16> %bc4, i64 1, !dbg !53
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #1
  %78 = fsub float 0.000000e+00, %75, !dbg !54
  %79 = fsub float 0.000000e+00, %77, !dbg !54
  %80 = select i1 %66, float %78, float 0.000000e+00, !dbg !55
  %81 = select i1 %66, float %79, float 0.000000e+00, !dbg !55
  %82 = icmp sgt i32 %.decomposed, 63, !dbg !56
  %83 = and i1 %40, %82, !dbg !57
  %84 = and i1 %19, %83, !dbg !58
  br i1 %84, label %85, label %90, !dbg !59

85:                                               ; preds = %73
  %86 = getelementptr bfloat, ptr addrspace(1) %1, i64 %27, !dbg !60
  %87 = getelementptr bfloat, ptr addrspace(1) %86, i64 %28, !dbg !60
  %88 = getelementptr i8, ptr addrspace(1) %87, i64 -128, !dbg !60
  %89 = load <2 x i16>, ptr addrspace(1) %88, align 4, !dbg !59
  br label %90, !dbg !59

90:                                               ; preds = %85, %73
  %bc5 = phi <2 x i16> [ %89, %85 ], [ zeroinitializer, %73 ], !dbg !59
  %91 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %56), !dbg !61
  %92 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %57), !dbg !61
  br i1 %19, label %93, label %115, !dbg !62

93:                                               ; preds = %90
  %94 = extractelement <2 x i16> %bc5, i64 0, !dbg !63
  %95 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %94) #1
  %96 = select i1 %65, float %80, float %95, !dbg !64
  %97 = fmul float %91, %60, !dbg !65
  %98 = fmul float %97, %96, !dbg !66
  %99 = fadd float %63, %98, !dbg !67
  %100 = select i1 %26, float %37, float %99, !dbg !68
  %101 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %100) #1
  %102 = insertelement <2 x i16> poison, i16 %101, i64 0, !dbg !62
  %103 = extractelement <2 x i16> %bc5, i64 1, !dbg !63
  %104 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %103) #1
  %105 = select i1 %65, float %81, float %104, !dbg !64
  %106 = fmul float %92, %60, !dbg !65
  %107 = fmul float %106, %105, !dbg !66
  %108 = fadd float %64, %107, !dbg !67
  %109 = select i1 %26, float %39, float %108, !dbg !68
  %110 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %109) #1
  %111 = insertelement <2 x i16> %102, i16 %110, i64 1, !dbg !62
  %112 = bitcast <2 x i16> %111 to i32, !dbg !62
  %113 = insertelement <1 x i32> poison, i32 %112, i64 0, !dbg !62
  %114 = getelementptr bfloat, ptr addrspace(1) %4, i64 %24, !dbg !69
  store <1 x i32> %113, ptr addrspace(1) %114, align 4, !dbg !62
  br label %115, !dbg !62

115:                                              ; preds = %93, %90
  ret void, !dbg !70
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c75fnkebadcgbldu4d6u7cbg55tywzpann66666fusbayoqlnv5r.py", directory: "/tmp/torchinductor_jovyan/75")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 256, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 22, column: 21, scope: !17)
!26 = !DILocation(line: 22, column: 28, scope: !17)
!27 = !DILocation(line: 23, column: 19, scope: !17)
!28 = !DILocation(line: 24, column: 19, scope: !17)
!29 = !DILocation(line: 30, column: 18, scope: !17)
!30 = !DILocation(line: 31, column: 39, scope: !17)
!31 = !DILocation(line: 31, column: 35, scope: !17)
!32 = !DILocation(line: 31, column: 63, scope: !17)
!33 = !DILocation(line: 31, column: 56, scope: !17)
!34 = !DILocation(line: 31, column: 30, scope: !17)
!35 = !DILocation(line: 31, column: 114, scope: !17)
!36 = !DILocation(line: 32, column: 19, scope: !17)
!37 = !DILocation(line: 35, column: 51, scope: !17)
!38 = !DILocation(line: 35, column: 44, scope: !17)
!39 = !DILocation(line: 35, column: 30, scope: !17)
!40 = !DILocation(line: 35, column: 102, scope: !17)
!41 = !DILocation(line: 36, column: 43, scope: !17)
!42 = !DILocation(line: 36, column: 37, scope: !17)
!43 = !DILocation(line: 36, column: 32, scope: !17)
!44 = !DILocation(line: 37, column: 24, scope: !17)
!45 = !DILocation(line: 39, column: 21, scope: !17)
!46 = !DILocation(line: 40, column: 20, scope: !17)
!47 = !DILocation(line: 42, column: 19, scope: !17)
!48 = !DILocation(line: 47, column: 20, scope: !17)
!49 = !DILocation(line: 48, column: 20, scope: !17)
!50 = !DILocation(line: 49, column: 60, scope: !17)
!51 = !DILocation(line: 49, column: 52, scope: !17)
!52 = !DILocation(line: 49, column: 31, scope: !17)
!53 = !DILocation(line: 49, column: 111, scope: !17)
!54 = !DILocation(line: 50, column: 13, scope: !17)
!55 = !DILocation(line: 52, column: 35, scope: !17)
!56 = !DILocation(line: 53, column: 21, scope: !17)
!57 = !DILocation(line: 56, column: 20, scope: !17)
!58 = !DILocation(line: 57, column: 63, scope: !17)
!59 = !DILocation(line: 57, column: 55, scope: !17)
!60 = !DILocation(line: 57, column: 31, scope: !17)
!61 = !DILocation(line: 59, column: 24, scope: !17)
!62 = !DILocation(line: 67, column: 37, scope: !17)
!63 = !DILocation(line: 57, column: 114, scope: !17)
!64 = !DILocation(line: 58, column: 35, scope: !17)
!65 = !DILocation(line: 60, column: 20, scope: !17)
!66 = !DILocation(line: 62, column: 20, scope: !17)
!67 = !DILocation(line: 63, column: 20, scope: !17)
!68 = !DILocation(line: 66, column: 33, scope: !17)
!69 = !DILocation(line: 67, column: 25, scope: !17)
!70 = !DILocation(line: 67, column: 4, scope: !17)
