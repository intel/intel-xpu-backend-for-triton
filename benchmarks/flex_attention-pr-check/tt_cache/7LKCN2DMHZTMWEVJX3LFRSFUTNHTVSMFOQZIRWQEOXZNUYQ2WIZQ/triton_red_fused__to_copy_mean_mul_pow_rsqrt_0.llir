; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_mean_mul_pow_rsqrt_0(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6, ptr addrspace(3) captures(none) %7) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %9 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %10 = trunc i64 %9 to i32, !dbg !21
  %11 = icmp sgt i32 %4, %10, !dbg !22
  %12 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %13 = trunc i64 %12 to i32, !dbg !23
  %14 = and i32 %13, 511, !dbg !23
  %15 = and i32 %13, 31, !dbg !23
  %16 = lshr i32 %14, 5, !dbg !23
  %17 = shl i32 %13, 2, !dbg !23
  %18 = and i32 %17, 2044, !dbg !23
  %19 = shl i32 %10, 12, !dbg !24
  %20 = or disjoint i32 %18, %19
  br i1 %11, label %.split.us.preheader, label %.split17.us

.split.us.preheader:                              ; preds = %8
  %21 = sext i32 %20 to i64, !dbg !25
  %22 = getelementptr bfloat, ptr addrspace(1) %0, i64 %21, !dbg !26
  %23 = load i16, ptr addrspace(1) %22, align 8, !dbg !27
  %24 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %23) #4
  %25 = getelementptr inbounds nuw i8, ptr addrspace(1) %22, i64 2, !dbg !27
  %26 = load i16, ptr addrspace(1) %25, align 2, !dbg !27
  %27 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %26) #4
  %28 = getelementptr inbounds nuw i8, ptr addrspace(1) %22, i64 4, !dbg !27
  %29 = load i16, ptr addrspace(1) %28, align 4, !dbg !27
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = getelementptr inbounds nuw i8, ptr addrspace(1) %22, i64 6, !dbg !27
  %32 = load i16, ptr addrspace(1) %31, align 2, !dbg !27
  %33 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %32) #4
  %34 = fmul float %24, %24, !dbg !28
  %35 = fmul float %27, %27, !dbg !28
  %36 = fmul float %30, %30, !dbg !28
  %37 = fmul float %33, %33, !dbg !28
  %38 = getelementptr bfloat, ptr addrspace(1) %0, i64 %21, !dbg !26
  %39 = getelementptr i8, ptr addrspace(1) %38, i64 4096, !dbg !26
  %40 = load i16, ptr addrspace(1) %39, align 8, !dbg !27
  %41 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %40) #4
  %42 = getelementptr i8, ptr addrspace(1) %38, i64 4098, !dbg !27
  %43 = load i16, ptr addrspace(1) %42, align 2, !dbg !27
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #4
  %45 = getelementptr i8, ptr addrspace(1) %38, i64 4100, !dbg !27
  %46 = load i16, ptr addrspace(1) %45, align 4, !dbg !27
  %47 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %46) #4
  %48 = getelementptr i8, ptr addrspace(1) %38, i64 4102, !dbg !27
  %49 = load i16, ptr addrspace(1) %48, align 2, !dbg !27
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #4
  %51 = fmul float %41, %41, !dbg !28
  %52 = fmul float %44, %44, !dbg !28
  %53 = fmul float %47, %47, !dbg !28
  %54 = fmul float %50, %50, !dbg !28
  %55 = fadd float %34, %51, !dbg !29
  %56 = fadd float %35, %52, !dbg !29
  %57 = fadd float %36, %53, !dbg !29
  %58 = fadd float %37, %54, !dbg !29
  %59 = fadd float %55, %56, !dbg !30
  %60 = fadd float %57, %59, !dbg !30
  %61 = fadd float %58, %60, !dbg !30
  br label %.split17.us, !dbg !30

.split17.us:                                      ; preds = %8, %.split.us.preheader
  %62 = phi float [ %61, %.split.us.preheader ], [ 0.000000e+00, %8 ], !dbg !34
  %63 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %62) #5, !dbg !30
  %64 = icmp eq i32 %15, 0, !dbg !30
  br i1 %64, label %65, label %68, !dbg !30

65:                                               ; preds = %.split17.us
  %66 = zext nneg i32 %16 to i64, !dbg !30
  %67 = getelementptr float, ptr addrspace(3) %7, i64 %66, !dbg !30
  store float %63, ptr addrspace(3) %67, align 4, !dbg !30
  br label %68, !dbg !30

68:                                               ; preds = %65, %.split17.us
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !30
  %69 = icmp samesign ult i32 %14, 16, !dbg !30
  %70 = and i64 %12, 511, !dbg !30
  %71 = getelementptr float, ptr addrspace(3) %7, i64 %70, !dbg !30
  br i1 %69, label %72, label %74, !dbg !30

72:                                               ; preds = %68
  %73 = load float, ptr addrspace(3) %71, align 4, !dbg !30
  br label %74, !dbg !30

74:                                               ; preds = %72, %68
  %75 = phi float [ %73, %72 ], [ undef, %68 ], !dbg !33
  %76 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %75, i32 16) #5, !dbg !30
  %77 = and i32 %13, 15, !dbg !30
  %78 = icmp eq i32 %77, 0, !dbg !30
  %79 = and i1 %69, %78, !dbg !30
  br i1 %79, label %80, label %81, !dbg !30

80:                                               ; preds = %74
  store float %76, ptr addrspace(3) %71, align 4, !dbg !30
  br label %81, !dbg !30

81:                                               ; preds = %80, %74
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !30
  %82 = load float, ptr addrspace(3) %7, align 4, !dbg !30
  %83 = fmul float %82, 0x3F30000000000000, !dbg !35
  %84 = fptrunc double %2 to float, !dbg !36
  %85 = fadd float %83, %84, !dbg !37
  %86 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %85) #6, !dbg !38
  br i1 %11, label %.split18.us.preheader, label %.split20.us

.split18.us.preheader:                            ; preds = %81
  %87 = zext nneg i32 %18 to i64, !dbg !39
  %88 = sext i32 %20 to i64, !dbg !39
  %89 = getelementptr bfloat, ptr addrspace(1) %1, i64 %87, !dbg !40
  %90 = getelementptr inbounds nuw i8, ptr addrspace(1) %89, i64 6, !dbg !41
  %91 = load i16, ptr addrspace(1) %90, align 2, !dbg !41
  %92 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %91) #4
  %93 = getelementptr inbounds nuw i8, ptr addrspace(1) %89, i64 4, !dbg !41
  %94 = load i16, ptr addrspace(1) %93, align 4, !dbg !41
  %95 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %94) #4
  %96 = getelementptr inbounds nuw i8, ptr addrspace(1) %89, i64 2, !dbg !41
  %97 = load i16, ptr addrspace(1) %96, align 2, !dbg !41
  %98 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %97) #4
  %99 = load i16, ptr addrspace(1) %89, align 8, !dbg !41
  %100 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %99) #4
  %101 = getelementptr bfloat, ptr addrspace(1) %0, i64 %88, !dbg !42
  %102 = load i16, ptr addrspace(1) %101, align 8, !dbg !43
  %103 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %102) #4
  %104 = fmul float %86, %103, !dbg !44
  %105 = fmul float %100, %104, !dbg !45
  %106 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %105) #4
  %107 = insertelement <2 x i16> poison, i16 %106, i64 0, !dbg !46
  %108 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 2, !dbg !43
  %109 = load i16, ptr addrspace(1) %108, align 2, !dbg !43
  %110 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %109) #4
  %111 = fmul float %86, %110, !dbg !44
  %112 = fmul float %98, %111, !dbg !45
  %113 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %112) #4
  %114 = insertelement <2 x i16> %107, i16 %113, i64 1, !dbg !46
  %115 = bitcast <2 x i16> %114 to i32, !dbg !46
  %116 = insertelement <2 x i32> poison, i32 %115, i64 0, !dbg !46
  %117 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 4, !dbg !43
  %118 = load i16, ptr addrspace(1) %117, align 4, !dbg !43
  %119 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %118) #4
  %120 = fmul float %86, %119, !dbg !44
  %121 = fmul float %95, %120, !dbg !45
  %122 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %121) #4
  %123 = insertelement <2 x i16> poison, i16 %122, i64 0, !dbg !46
  %124 = getelementptr inbounds nuw i8, ptr addrspace(1) %101, i64 6, !dbg !43
  %125 = load i16, ptr addrspace(1) %124, align 2, !dbg !43
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = fmul float %86, %126, !dbg !44
  %128 = fmul float %92, %127, !dbg !45
  %129 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %128) #4
  %130 = insertelement <2 x i16> %123, i16 %129, i64 1, !dbg !46
  %131 = bitcast <2 x i16> %130 to i32, !dbg !46
  %132 = insertelement <2 x i32> %116, i32 %131, i64 1, !dbg !46
  %133 = getelementptr bfloat, ptr addrspace(1) %3, i64 %88, !dbg !47
  store <2 x i32> %132, ptr addrspace(1) %133, align 8, !dbg !46
  %134 = or disjoint i64 %88, 2048
  %135 = getelementptr bfloat, ptr addrspace(1) %1, i64 %87, !dbg !40
  %136 = getelementptr i8, ptr addrspace(1) %135, i64 4096, !dbg !40
  %137 = getelementptr i8, ptr addrspace(1) %135, i64 4102, !dbg !41
  %138 = load i16, ptr addrspace(1) %137, align 2, !dbg !41
  %139 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %138) #4
  %140 = getelementptr i8, ptr addrspace(1) %135, i64 4100, !dbg !41
  %141 = load i16, ptr addrspace(1) %140, align 4, !dbg !41
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #4
  %143 = getelementptr i8, ptr addrspace(1) %135, i64 4098, !dbg !41
  %144 = load i16, ptr addrspace(1) %143, align 2, !dbg !41
  %145 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %144) #4
  %146 = load i16, ptr addrspace(1) %136, align 8, !dbg !41
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #4
  %148 = getelementptr bfloat, ptr addrspace(1) %0, i64 %134, !dbg !42
  %149 = load i16, ptr addrspace(1) %148, align 8, !dbg !43
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = fmul float %86, %150, !dbg !44
  %152 = fmul float %147, %151, !dbg !45
  %153 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %152) #4
  %154 = insertelement <2 x i16> poison, i16 %153, i64 0, !dbg !46
  %155 = getelementptr inbounds nuw i8, ptr addrspace(1) %148, i64 2, !dbg !43
  %156 = load i16, ptr addrspace(1) %155, align 2, !dbg !43
  %157 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %156) #4
  %158 = fmul float %86, %157, !dbg !44
  %159 = fmul float %145, %158, !dbg !45
  %160 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %159) #4
  %161 = insertelement <2 x i16> %154, i16 %160, i64 1, !dbg !46
  %162 = bitcast <2 x i16> %161 to i32, !dbg !46
  %163 = insertelement <2 x i32> poison, i32 %162, i64 0, !dbg !46
  %164 = getelementptr inbounds nuw i8, ptr addrspace(1) %148, i64 4, !dbg !43
  %165 = load i16, ptr addrspace(1) %164, align 4, !dbg !43
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #4
  %167 = fmul float %86, %166, !dbg !44
  %168 = fmul float %142, %167, !dbg !45
  %169 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %168) #4
  %170 = insertelement <2 x i16> poison, i16 %169, i64 0, !dbg !46
  %171 = getelementptr inbounds nuw i8, ptr addrspace(1) %148, i64 6, !dbg !43
  %172 = load i16, ptr addrspace(1) %171, align 2, !dbg !43
  %173 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %172) #4
  %174 = fmul float %86, %173, !dbg !44
  %175 = fmul float %139, %174, !dbg !45
  %176 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %175) #4
  %177 = insertelement <2 x i16> %170, i16 %176, i64 1, !dbg !46
  %178 = bitcast <2 x i16> %177 to i32, !dbg !46
  %179 = insertelement <2 x i32> %163, i32 %178, i64 1, !dbg !46
  %180 = getelementptr bfloat, ptr addrspace(1) %3, i64 %134, !dbg !47
  store <2 x i32> %179, ptr addrspace(1) %180, align 8, !dbg !46
  br label %.split20.us, !dbg !48

.split20.us:                                      ; preds = %81, %.split18.us.preheader
  ret void, !dbg !48
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chgz2xh7lxpggdbrdhwpj2xjvpq23rxcxtat6fkdcbaolzyt4qm7.py", directory: "/tmp/torchinductor_jovyan/hg")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_mean_mul_pow_rsqrt_0", linkageName: "triton_red_fused__to_copy_mean_mul_pow_rsqrt_0", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 46, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 34, scope: !18)
!27 = !DILocation(line: 35, column: 112, scope: !18)
!28 = !DILocation(line: 37, column: 22, scope: !18)
!29 = !DILocation(line: 39, column: 23, scope: !18)
!30 = !DILocation(line: 290, column: 36, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !18, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!33 = !DILocation(line: 41, column: 25, scope: !18)
!34 = !DILocation(line: 260, column: 15, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 53, column: 24, scope: !18)
!36 = !DILocation(line: 54, column: 25, scope: !18)
!37 = !DILocation(line: 55, column: 24, scope: !18)
!38 = !DILocation(line: 56, column: 32, scope: !18)
!39 = !DILocation(line: 43, column: 40, scope: !18)
!40 = !DILocation(line: 49, column: 34, scope: !18)
!41 = !DILocation(line: 49, column: 94, scope: !18)
!42 = !DILocation(line: 50, column: 34, scope: !18)
!43 = !DILocation(line: 50, column: 113, scope: !18)
!44 = !DILocation(line: 57, column: 23, scope: !18)
!45 = !DILocation(line: 59, column: 23, scope: !18)
!46 = !DILocation(line: 60, column: 53, scope: !18)
!47 = !DILocation(line: 60, column: 29, scope: !18)
!48 = !DILocation(line: 43, column: 4, scope: !18)
