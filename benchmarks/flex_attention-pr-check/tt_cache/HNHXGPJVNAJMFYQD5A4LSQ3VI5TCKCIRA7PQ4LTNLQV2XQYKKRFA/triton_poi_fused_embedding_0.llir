; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@assertFunc_ = internal addrspace(1) constant [8 x i8] c"unknown\00"
@assertFile_ = internal addrspace(1) constant [85 x i8] c"/tmp/torchinductor_jovyan/wd/cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py\00"
@assertMessage_ = internal addrspace(1) constant [40 x i8] c"index out of bounds: 0 <= tmp4 < 128256\00"
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define spir_kernel void @triton_poi_fused_embedding_0(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #2 !dbg !14 !intel_reqd_sub_group_size !15 !max_work_group_size !16 {
  %6 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !17
  %7 = trunc i64 %6 to i32, !dbg !17
  %8 = shl i32 %7, 10, !dbg !18
  %9 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !19
  %10 = trunc i64 %9 to i32, !dbg !19
  %11 = shl i32 %10, 3, !dbg !19
  %12 = and i32 %11, 1016, !dbg !19
  %13 = or disjoint i32 %12, %8, !dbg !20
  %.frozen = freeze i32 %13, !dbg !21
  %14 = sdiv i32 %.frozen, 4096, !dbg !21
  %15 = sext i32 %14 to i64, !dbg !22
  %16 = getelementptr i64, ptr addrspace(1) %0, i64 %15, !dbg !22
  %17 = load i64, ptr addrspace(1) %16, align 8, !dbg !23
  %18 = add i64 %17, 128256, !dbg !24
  %19 = icmp slt i64 %17, 0, !dbg !25
  %20 = select i1 %19, i64 %18, i64 %17, !dbg !26
  %21 = icmp ugt i64 %20, 128255, !dbg !27
  br i1 %21, label %22, label %29, !dbg !28

22:                                               ; preds = %5
  %23 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32, !dbg !28
  %24 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 8), align 8, !dbg !28
  %25 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 16), align 16, !dbg !28
  %26 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !dbg !28
  %27 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 8), align 8, !dbg !28
  %28 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 16), align 16, !dbg !28
  tail call spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertMessage_ to ptr addrspace(4)), ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFile_ to ptr addrspace(4)), i32 noundef 30, ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFunc_ to ptr addrspace(4)), i64 noundef %23, i64 noundef %24, i64 noundef %25, i64 noundef %26, i64 noundef %27, i64 noundef %28) #5, !dbg !28
  br label %29, !dbg !28

29:                                               ; preds = %22, %5
  %30 = mul i32 %14, 4096, !dbg !29
  %.decomposed = sub i32 %.frozen, %30, !dbg !29
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !28
  %31 = sext i32 %.decomposed to i64, !dbg !30
  %.idx = shl i64 %20, 13, !dbg !31
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx, !dbg !31
  %33 = getelementptr bfloat, ptr addrspace(1) %32, i64 %31, !dbg !31
  %34 = load <4 x i32>, ptr addrspace(1) %33, align 16, !dbg !32
  %35 = sext i32 %13 to i64, !dbg !33
  %36 = getelementptr bfloat, ptr addrspace(1) %2, i64 %35, !dbg !33
  store <4 x i32> %34, ptr addrspace(1) %36, align 16, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: convergent mustprogress norecurse nounwind
declare extern_weak dso_local spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef, ptr addrspace(4) noundef, i32 noundef, ptr addrspace(4) noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/netbatch/donb74095_00/dir/workspace/NIT/xmain-rel/LX/xmainefi2linux_release/ws/icsws/llvm/libdevice/fallback-cassert.cpp" "sycl-optlevel"="2" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind }
attributes #6 = { convergent nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cwd3fqzsmnvo6o6wwsyeuoe7iftvicmwrqhg3hrrbla4iaxfb2uy.py", directory: "/tmp/torchinductor_jovyan/wd")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = distinct !DISubprogram(name: "triton_poi_fused_embedding_0", linkageName: "triton_poi_fused_embedding_0", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!15 = !{i32 32}
!16 = !{i64 128, i64 1, i64 1}
!17 = !DILocation(line: 19, column: 28, scope: !14)
!18 = !DILocation(line: 19, column: 33, scope: !14)
!19 = !DILocation(line: 20, column: 36, scope: !14)
!20 = !DILocation(line: 20, column: 23, scope: !14)
!21 = !DILocation(line: 22, column: 19, scope: !14)
!22 = !DILocation(line: 25, column: 30, scope: !14)
!23 = !DILocation(line: 25, column: 35, scope: !14)
!24 = !DILocation(line: 27, column: 18, scope: !14)
!25 = !DILocation(line: 28, column: 18, scope: !14)
!26 = !DILocation(line: 29, column: 32, scope: !14)
!27 = !DILocation(line: 30, column: 36, scope: !14)
!28 = !DILocation(line: 30, column: 52, scope: !14)
!29 = !DILocation(line: 23, column: 19, scope: !14)
!30 = !DILocation(line: 31, column: 35, scope: !14)
!31 = !DILocation(line: 31, column: 30, scope: !14)
!32 = !DILocation(line: 31, column: 47, scope: !14)
!33 = !DILocation(line: 32, column: 25, scope: !14)
!34 = !DILocation(line: 32, column: 36, scope: !14)
!35 = !DILocation(line: 32, column: 4, scope: !14)
