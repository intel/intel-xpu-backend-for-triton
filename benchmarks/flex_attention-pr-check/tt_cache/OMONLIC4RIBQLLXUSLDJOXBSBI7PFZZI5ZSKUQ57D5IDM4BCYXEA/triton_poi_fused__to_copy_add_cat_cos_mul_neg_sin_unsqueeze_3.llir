; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %8 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %9 = trunc i64 %8 to i32, !dbg !20
  %10 = shl i32 %9, 9, !dbg !21
  %11 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %12 = trunc i64 %11 to i32, !dbg !22
  %13 = shl i32 %12, 1, !dbg !22
  %14 = and i32 %13, 510, !dbg !22
  %15 = or disjoint i32 %14, %10, !dbg !23
  %16 = or disjoint i32 %15, 1, !dbg !23
  %.frozen = freeze i32 %15, !dbg !24
  %17 = sdiv i32 %.frozen, 128, !dbg !24
  %18 = mul i32 %17, 128, !dbg !25
  %.decomposed = sub i32 %.frozen, %18, !dbg !25
  %19 = srem i32 %16, 128, !dbg !25
  %20 = sdiv i32 %15, 4096, !dbg !26
  %21 = sext i32 %15 to i64, !dbg !27
  %22 = getelementptr bfloat, ptr addrspace(1) %0, i64 %21, !dbg !27
  %23 = load <2 x i16>, ptr addrspace(1) %22, align 4, !dbg !28
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !29
  %24 = srem i8 %.lhs.trunc, 64, !dbg !29
  %.lhs.trunc9 = trunc nsw i32 %19 to i8, !dbg !29
  %25 = srem i8 %.lhs.trunc9, 64, !dbg !29
  %26 = sext i8 %24 to i64, !dbg !30
  %27 = sext i8 %25 to i64, !dbg !30
  %28 = mul i64 %4, %26, !dbg !30
  %29 = mul i64 %4, %27, !dbg !30
  %30 = sext i32 %20 to i64, !dbg !31
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !32
  %32 = getelementptr float, ptr addrspace(1) %31, i64 %30, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !32
  %34 = getelementptr float, ptr addrspace(1) %33, i64 %30, !dbg !32
  %35 = load float, ptr addrspace(1) %32, align 4, !dbg !33
  %36 = load float, ptr addrspace(1) %34, align 4, !dbg !33
  %37 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %35), !dbg !34
  %38 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %36), !dbg !34
  %39 = icmp slt i32 %.decomposed, 64, !dbg !35
  %40 = shl nsw i32 %17, 7, !dbg !36
  br i1 %39, label %41, label %47, !dbg !37

41:                                               ; preds = %7
  %42 = add nsw i32 %.decomposed, 64, !dbg !38
  %43 = add i32 %42, %40, !dbg !39
  %44 = sext i32 %43 to i64, !dbg !40
  %45 = getelementptr bfloat, ptr addrspace(1) %0, i64 %44, !dbg !40
  %46 = load <2 x i16>, ptr addrspace(1) %45, align 4, !dbg !37
  br label %53, !dbg !41

47:                                               ; preds = %7
  %48 = add nsw i32 %.decomposed, -64, !dbg !42
  %49 = add nsw i32 %48, %40, !dbg !43
  %50 = sext i32 %49 to i64, !dbg !44
  %51 = getelementptr bfloat, ptr addrspace(1) %0, i64 %50, !dbg !44
  %52 = load <2 x i16>, ptr addrspace(1) %51, align 4, !dbg !41
  br label %53, !dbg !41

53:                                               ; preds = %41, %47
  %bc37 = phi <2 x i16> [ zeroinitializer, %47 ], [ %46, %41 ]
  %bc5 = phi <2 x i16> [ %52, %47 ], [ zeroinitializer, %41 ], !dbg !41
  %54 = extractelement <2 x i16> %bc37, i64 1, !dbg !45
  %55 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %54) #1
  %56 = fsub float 0.000000e+00, %55, !dbg !46
  %57 = extractelement <2 x i16> %bc37, i64 0, !dbg !45
  %58 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %57) #1
  %59 = fsub float 0.000000e+00, %58, !dbg !46
  %60 = extractelement <2 x i16> %23, i64 1, !dbg !47
  %61 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %60) #1
  %62 = fptrunc double %2 to float, !dbg !48
  %63 = fmul float %38, %62, !dbg !49
  %64 = fmul float %63, %61, !dbg !50
  %65 = extractelement <2 x i16> %23, i64 0, !dbg !47
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #1
  %67 = fmul float %37, %62, !dbg !49
  %68 = fmul float %67, %66, !dbg !50
  %69 = extractelement <2 x i16> %bc5, i64 0, !dbg !51
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #1
  %71 = extractelement <2 x i16> %bc5, i64 1, !dbg !51
  %72 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %71) #1
  %73 = select i1 %39, float %59, float %70, !dbg !52
  %74 = select i1 %39, float %56, float %72, !dbg !52
  %75 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %35), !dbg !53
  %76 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %36), !dbg !53
  %77 = fmul float %75, %62, !dbg !54
  %78 = fmul float %76, %62, !dbg !54
  %79 = fmul float %73, %77, !dbg !55
  %80 = fmul float %74, %78, !dbg !55
  %81 = fadd float %68, %79, !dbg !56
  %82 = fadd float %64, %80, !dbg !56
  %83 = getelementptr bfloat, ptr addrspace(1) %3, i64 %21, !dbg !57
  %84 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %81) #1
  %85 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %82) #1
  %86 = insertelement <2 x i16> poison, i16 %84, i64 0, !dbg !58
  %87 = insertelement <2 x i16> %86, i16 %85, i64 1, !dbg !58
  %88 = bitcast <2 x i16> %87 to i32, !dbg !58
  %89 = insertelement <1 x i32> poison, i32 %88, i64 0, !dbg !58
  store <1 x i32> %89, ptr addrspace(1) %83, align 4, !dbg !58
  ret void, !dbg !59
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chgxbmwrmcysje7ty6wwg7kxh3fsonfgiq7x2qvpvgl333zet6c3.py", directory: "/tmp/torchinductor_jovyan/hg")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_3", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 256, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 25, column: 19, scope: !17)
!25 = !DILocation(line: 23, column: 19, scope: !17)
!26 = !DILocation(line: 24, column: 19, scope: !17)
!27 = !DILocation(line: 26, column: 30, scope: !17)
!28 = !DILocation(line: 26, column: 35, scope: !17)
!29 = !DILocation(line: 27, column: 46, scope: !17)
!30 = !DILocation(line: 27, column: 41, scope: !17)
!31 = !DILocation(line: 27, column: 35, scope: !17)
!32 = !DILocation(line: 27, column: 30, scope: !17)
!33 = !DILocation(line: 27, column: 53, scope: !17)
!34 = !DILocation(line: 29, column: 23, scope: !17)
!35 = !DILocation(line: 38, column: 19, scope: !17)
!36 = !DILocation(line: 39, column: 40, scope: !17)
!37 = !DILocation(line: 39, column: 52, scope: !17)
!38 = !DILocation(line: 39, column: 36, scope: !17)
!39 = !DILocation(line: 39, column: 46, scope: !17)
!40 = !DILocation(line: 39, column: 31, scope: !17)
!41 = !DILocation(line: 46, column: 55, scope: !17)
!42 = !DILocation(line: 46, column: 49, scope: !17)
!43 = !DILocation(line: 46, column: 41, scope: !17)
!44 = !DILocation(line: 46, column: 31, scope: !17)
!45 = !DILocation(line: 39, column: 103, scope: !17)
!46 = !DILocation(line: 40, column: 13, scope: !17)
!47 = !DILocation(line: 26, column: 44, scope: !17)
!48 = !DILocation(line: 30, column: 19, scope: !17)
!49 = !DILocation(line: 31, column: 18, scope: !17)
!50 = !DILocation(line: 33, column: 18, scope: !17)
!51 = !DILocation(line: 46, column: 106, scope: !17)
!52 = !DILocation(line: 0, scope: !17)
!53 = !DILocation(line: 48, column: 24, scope: !17)
!54 = !DILocation(line: 49, column: 20, scope: !17)
!55 = !DILocation(line: 51, column: 20, scope: !17)
!56 = !DILocation(line: 52, column: 19, scope: !17)
!57 = !DILocation(line: 53, column: 25, scope: !17)
!58 = !DILocation(line: 53, column: 37, scope: !17)
!59 = !DILocation(line: 53, column: 4, scope: !17)
