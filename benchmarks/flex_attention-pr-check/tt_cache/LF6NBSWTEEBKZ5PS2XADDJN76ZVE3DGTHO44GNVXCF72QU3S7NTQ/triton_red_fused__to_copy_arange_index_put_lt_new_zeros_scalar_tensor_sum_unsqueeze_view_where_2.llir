; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

@assertFunc_ = internal addrspace(1) constant [8 x i8] c"unknown\00"
@assertFile_ = internal addrspace(1) constant [85 x i8] c"/tmp/torchinductor_jovyan/fy/cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py\00"
@assertMessage_ = internal addrspace(1) constant [97 x i8] c"index out of bounds: 0 <= tmp15 < 1 + (triton_helpers.div_floor_integer((-1) + ks0 + ks1,  ks1))\00"
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32, i32, i64, i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define spir_kernel void @triton_red_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_sum_unsqueeze_view_where_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) writeonly captures(none) %2, ptr addrspace(1) writeonly captures(none) %3, ptr addrspace(1) writeonly captures(none) %4, i64 %5, i64 %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #2 !dbg !14 !intel_reqd_sub_group_size !15 !max_work_group_size !16 {
  %10 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !17
  %11 = trunc i64 %10 to i32, !dbg !17
  %12 = and i32 %11, 15, !dbg !17
  %13 = icmp sgt i32 %7, 0, !dbg !18
  br i1 %13, label %.lr.ph, label %._crit_edge, !dbg !18

.lr.ph:                                           ; preds = %9, %23
  %14 = phi i64 [ %25, %23 ], [ 0, %9 ]
  %15 = phi i32 [ %26, %23 ], [ 0, %9 ]
  %16 = or disjoint i32 %15, %12, !dbg !19
  %17 = icmp slt i32 %16, %7, !dbg !20
  br i1 %17, label %18, label %23, !dbg !21

18:                                               ; preds = %.lr.ph
  %19 = sext i32 %16 to i64, !dbg !22
  %20 = getelementptr i32, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = load i32, ptr addrspace(1) %20, align 4, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !23
  br label %23, !dbg !21

23:                                               ; preds = %18, %.lr.ph
  %24 = phi i64 [ %22, %18 ], [ 0, %.lr.ph ], !dbg !21
  %25 = add i64 %24, %14, !dbg !24
  %26 = add i32 %15, 16, !dbg !18
  %27 = icmp slt i32 %26, %7, !dbg !18
  br i1 %27, label %.lr.ph, label %._crit_edge, !dbg !18

._crit_edge:                                      ; preds = %23, %9
  %.lcssa = phi i64 [ 0, %9 ], [ %25, %23 ], !dbg !25
  %28 = tail call spir_func i64 @_Z27__spirv_GroupNonUniformIAddiimj(i32 3, i32 3, i64 %.lcssa, i32 16) #5, !dbg !26
  %29 = trunc i64 %28 to i32, !dbg !30
  %30 = and i32 %11, 63, !dbg !31
  %31 = icmp eq i32 %30, 0, !dbg !31
  br i1 %31, label %32, label %34, !dbg !31

32:                                               ; preds = %._crit_edge
  %33 = insertelement <1 x i32> poison, i32 %29, i64 0, !dbg !31
  store <1 x i32> %33, ptr addrspace(1) %2, align 4, !dbg !31
  br label %34, !dbg !31

34:                                               ; preds = %32, %._crit_edge
  br i1 %13, label %.lr.ph9, label %._crit_edge10, !dbg !32

.lr.ph9:                                          ; preds = %34
  %35 = add i64 %5, -1, !dbg !33
  %36 = add i64 %35, %6, !dbg !34
  %37 = xor i64 %36, %6, !dbg !35
  %38 = icmp slt i64 %37, 0, !dbg !35
  %.frozen = freeze i64 %36
  %.frozen16 = freeze i64 %6
  %39 = sdiv i64 %.frozen, %.frozen16
  %40 = mul i64 %39, %.frozen16, !dbg !39
  %.decomposed = sub i64 %.frozen, %40, !dbg !39
  %.not = icmp ne i64 %.decomposed, 0, !dbg !40
  %narrow = and i1 %38, %.not
  %41 = sext i1 %narrow to i64
  %42 = add i64 %39, %41
  %43 = add i64 %42, 1
  %44 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32
  %45 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 8), align 8
  %46 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, i64 16), align 16
  %47 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32
  %48 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 8), align 8
  %49 = load i64, ptr addrspace(1) getelementptr inbounds nuw (i8, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, i64 16), align 16
  %50 = and i32 %11, 48
  %51 = icmp eq i32 %50, 0
  br label %52, !dbg !32

52:                                               ; preds = %.lr.ph9, %.critedge
  %53 = phi i32 [ 0, %.lr.ph9 ], [ %79, %.critedge ]
  %54 = or disjoint i32 %53, %12, !dbg !41
  %55 = icmp slt i32 %54, %7, !dbg !42
  br i1 %55, label %56, label %61, !dbg !43

56:                                               ; preds = %52
  %57 = sext i32 %54 to i64, !dbg !44
  %58 = getelementptr i64, ptr addrspace(1) %1, i64 %57, !dbg !44
  %59 = load i64, ptr addrspace(1) %58, align 8, !dbg !43
  %60 = trunc i64 %59 to i32, !dbg !45
  br label %61, !dbg !43

61:                                               ; preds = %56, %52
  %62 = phi i32 [ %60, %56 ], [ 0, %52 ], !dbg !43
  %63 = icmp slt i32 %54, %29, !dbg !46
  %64 = sext i32 %62 to i64, !dbg !47
  %65 = select i1 %63, i64 %64, i64 %42, !dbg !47
  %66 = icmp slt i64 %65, 0, !dbg !48
  %67 = select i1 %66, i64 %43, i64 0, !dbg !49
  %68 = add i64 %67, %65, !dbg !49
  %69 = icmp slt i64 %68, 0, !dbg !50
  %70 = icmp sge i64 %68, %43, !dbg !51
  %.not7 = or i1 %69, %70, !dbg !52
  %.not4 = and i1 %55, %.not7, !dbg !53
  br i1 %.not4, label %71, label %72, !dbg !53

71:                                               ; preds = %61
  tail call spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertMessage_ to ptr addrspace(4)), ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFile_ to ptr addrspace(4)), i32 noundef 58, ptr addrspace(4) noundef addrspacecast (ptr addrspace(1) @assertFunc_ to ptr addrspace(4)), i64 noundef %44, i64 noundef %45, i64 noundef %46, i64 noundef %47, i64 noundef %48, i64 noundef %49) #6, !dbg !53
  br label %72, !dbg !53

72:                                               ; preds = %71, %61
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !53
  %73 = and i1 %51, %55, !dbg !54
  br i1 %73, label %74, label %.critedge, !dbg !54

74:                                               ; preds = %72
  %75 = insertelement <1 x i32> poison, i32 %62, i64 0, !dbg !54
  %76 = sext i32 %54 to i64, !dbg !55
  %77 = getelementptr i32, ptr addrspace(1) %3, i64 %76, !dbg !55
  store <1 x i32> %75, ptr addrspace(1) %77, align 4, !dbg !54
  %78 = getelementptr i32, ptr addrspace(1) %4, i64 %68, !dbg !56
  store <1 x i32> splat (i32 1), ptr addrspace(1) %78, align 4, !dbg !57
  br label %.critedge, !dbg !57

.critedge:                                        ; preds = %72, %74
  %79 = add i32 %53, 16, !dbg !32
  %80 = icmp slt i32 %79, %7, !dbg !32
  br i1 %80, label %52, label %._crit_edge10, !dbg !32

._crit_edge10:                                    ; preds = %.critedge, %34
  ret void, !dbg !58
}

; Function Attrs: convergent mustprogress norecurse nounwind
declare extern_weak dso_local spir_func void @__devicelib_assert_fail(ptr addrspace(4) noundef, ptr addrspace(4) noundef, i32 noundef, ptr addrspace(4) noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="/netbatch/donb74095_00/dir/workspace/NIT/xmain-rel/LX/xmainefi2linux_release/ws/icsws/llvm/libdevice/fallback-cassert.cpp" "sycl-optlevel"="2" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cfy2gsp7wyww4oi2si7wyro3mtdjkroo7ikcl7pfsy2qyczqoncd.py", directory: "/tmp/torchinductor_jovyan/fy")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformIAddiimj", linkageName: "_Z27__spirv_GroupNonUniformIAddiimj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = distinct !DISubprogram(name: "triton_red_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_sum_unsqueeze_view_where_2", linkageName: "triton_red_fused__to_copy_arange_index_put_lt_new_zeros_scalar_tensor_sum_unsqueeze_view_where_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!15 = !{i32 32}
!16 = !{i64 64, i64 1, i64 1}
!17 = !DILocation(line: 25, column: 37, scope: !14)
!18 = !DILocation(line: 28, column: 40, scope: !14)
!19 = !DILocation(line: 29, column: 31, scope: !14)
!20 = !DILocation(line: 30, column: 29, scope: !14)
!21 = !DILocation(line: 34, column: 41, scope: !14)
!22 = !DILocation(line: 34, column: 34, scope: !14)
!23 = !DILocation(line: 35, column: 23, scope: !14)
!24 = !DILocation(line: 38, column: 40, scope: !14)
!25 = !DILocation(line: 27, column: 43, scope: !14)
!26 = !DILocation(line: 290, column: 36, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !14, file: !28, discriminator: 0)
!28 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!29 = !DILocation(line: 39, column: 25, scope: !14)
!30 = !DILocation(line: 40, column: 19, scope: !14)
!31 = !DILocation(line: 41, column: 67, scope: !14)
!32 = !DILocation(line: 42, column: 40, scope: !14)
!33 = !DILocation(line: 52, column: 56, scope: !14)
!34 = !DILocation(line: 52, column: 62, scope: !14)
!35 = !DILocation(line: 76, column: 32, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !14, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 52, column: 68, scope: !14)
!39 = !DILocation(line: 74, column: 20, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 75, column: 34, scope: !36, inlinedAt: !38)
!41 = !DILocation(line: 43, column: 31, scope: !14)
!42 = !DILocation(line: 44, column: 29, scope: !14)
!43 = !DILocation(line: 48, column: 41, scope: !14)
!44 = !DILocation(line: 48, column: 34, scope: !14)
!45 = !DILocation(line: 49, column: 23, scope: !14)
!46 = !DILocation(line: 51, column: 22, scope: !14)
!47 = !DILocation(line: 53, column: 37, scope: !14)
!48 = !DILocation(line: 56, column: 24, scope: !14)
!49 = !DILocation(line: 57, column: 39, scope: !14)
!50 = !DILocation(line: 58, column: 32, scope: !14)
!51 = !DILocation(line: 58, column: 50, scope: !14)
!52 = !DILocation(line: 58, column: 119, scope: !14)
!53 = !DILocation(line: 58, column: 129, scope: !14)
!54 = !DILocation(line: 60, column: 79, scope: !14)
!55 = !DILocation(line: 60, column: 29, scope: !14)
!56 = !DILocation(line: 61, column: 29, scope: !14)
!57 = !DILocation(line: 61, column: 81, scope: !14)
!58 = !DILocation(line: 42, column: 4, scope: !14)
