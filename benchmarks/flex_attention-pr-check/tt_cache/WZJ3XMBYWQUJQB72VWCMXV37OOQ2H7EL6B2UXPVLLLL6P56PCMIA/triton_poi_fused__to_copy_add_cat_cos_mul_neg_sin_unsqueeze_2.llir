; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, double %3, ptr addrspace(1) writeonly captures(none) %4, i64 %5, i64 %6, i64 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %11 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %12 = trunc i64 %11 to i32, !dbg !20
  %13 = shl i32 %12, 10, !dbg !21
  %14 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %15 = trunc i64 %14 to i32, !dbg !22
  %16 = shl i32 %15, 3, !dbg !22
  %17 = and i32 %16, 1016, !dbg !22
  %18 = or disjoint i32 %17, %13, !dbg !23
  %19 = or disjoint i32 %18, 4, !dbg !23
  %20 = icmp slt i32 %18, %8, !dbg !24
  %.frozen = freeze i32 %18, !dbg !25
  %21 = sdiv i32 %.frozen, 128, !dbg !25
  %22 = sext i32 %21 to i64, !dbg !26
  %23 = srem i64 %22, %5, !dbg !26
  %24 = mul i32 %21, 128, !dbg !27
  %.decomposed = sub i32 %.frozen, %24, !dbg !27
  %25 = sext i32 %18 to i64, !dbg !28
  %26 = sdiv i64 %25, %7, !dbg !28
  %27 = icmp slt i64 %23, %6, !dbg !29
  %28 = shl nsw i64 %26, 7, !dbg !30
  %29 = sext i32 %.decomposed to i64, !dbg !31
  %30 = add nsw i64 %28, %29, !dbg !31
  %31 = and i1 %27, %20, !dbg !32
  br i1 %31, label %32, label %36, !dbg !33

32:                                               ; preds = %10
  %33 = getelementptr bfloat, ptr addrspace(1) %0, i64 %30, !dbg !34
  %.idx = shl nsw i64 %23, 11, !dbg !34
  %34 = getelementptr i8, ptr addrspace(1) %33, i64 %.idx, !dbg !34
  %35 = load <8 x i16>, ptr addrspace(1) %34, align 16, !dbg !33
  br label %36, !dbg !33

36:                                               ; preds = %32, %10
  %bc10 = phi <8 x i16> [ %35, %32 ], [ zeroinitializer, %10 ], !dbg !33
  %37 = extractelement <8 x i16> %bc10, i64 0, !dbg !35
  %38 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %37) #1
  %39 = extractelement <8 x i16> %bc10, i64 1, !dbg !35
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #1
  %41 = extractelement <8 x i16> %bc10, i64 2, !dbg !35
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #1
  %43 = extractelement <8 x i16> %bc10, i64 3, !dbg !35
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #1
  %45 = extractelement <8 x i16> %bc10, i64 4, !dbg !35
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #1
  %47 = extractelement <8 x i16> %bc10, i64 5, !dbg !35
  %48 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %47) #1
  %49 = extractelement <8 x i16> %bc10, i64 6, !dbg !35
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #1
  %51 = extractelement <8 x i16> %bc10, i64 7, !dbg !35
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #1
  %53 = icmp sge i64 %23, %6, !dbg !36
  %54 = and i1 %53, %20, !dbg !37
  br i1 %54, label %55, label %58, !dbg !38

55:                                               ; preds = %36
  %56 = getelementptr bfloat, ptr addrspace(1) %1, i64 %30, !dbg !39
  %57 = load <8 x i16>, ptr addrspace(1) %56, align 16, !dbg !38
  br label %58, !dbg !38

58:                                               ; preds = %55, %36
  %bc20 = phi <8 x i16> [ %57, %55 ], [ zeroinitializer, %36 ], !dbg !38
  %59 = extractelement <8 x i16> %bc20, i64 0, !dbg !40
  %60 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %59) #1
  %61 = extractelement <8 x i16> %bc20, i64 1, !dbg !40
  %62 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %61) #1
  %63 = extractelement <8 x i16> %bc20, i64 2, !dbg !40
  %64 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %63) #1
  %65 = extractelement <8 x i16> %bc20, i64 3, !dbg !40
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #1
  %67 = extractelement <8 x i16> %bc20, i64 4, !dbg !40
  %68 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %67) #1
  %69 = extractelement <8 x i16> %bc20, i64 5, !dbg !40
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #1
  %71 = extractelement <8 x i16> %bc20, i64 6, !dbg !40
  %72 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %71) #1
  %73 = extractelement <8 x i16> %bc20, i64 7, !dbg !40
  %74 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %73) #1
  br i1 %54, label %75, label %90, !dbg !41

75:                                               ; preds = %58
  %76 = srem i32 %19, 64, !dbg !42
  %77 = sext i32 %76 to i64, !dbg !43
  %78 = getelementptr float, ptr addrspace(1) %2, i64 %77, !dbg !43
  %79 = srem i32 %18, 64, !dbg !42
  %80 = sext i32 %79 to i64, !dbg !43
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !43
  %82 = load float, ptr addrspace(1) %81, align 16, !dbg !41
  %83 = getelementptr inbounds nuw i8, ptr addrspace(1) %81, i64 4, !dbg !41
  %84 = load float, ptr addrspace(1) %83, align 4, !dbg !41
  %85 = getelementptr inbounds nuw i8, ptr addrspace(1) %81, i64 8, !dbg !41
  %86 = load float, ptr addrspace(1) %85, align 8, !dbg !41
  %87 = getelementptr inbounds nuw i8, ptr addrspace(1) %81, i64 12, !dbg !41
  %88 = load float, ptr addrspace(1) %87, align 4, !dbg !41
  %89 = load <4 x float>, ptr addrspace(1) %78, align 16, !dbg !41
  br label %90, !dbg !41

90:                                               ; preds = %58, %75
  %91 = phi float [ %88, %75 ], [ 0.000000e+00, %58 ]
  %92 = phi float [ %86, %75 ], [ 0.000000e+00, %58 ]
  %93 = phi float [ %84, %75 ], [ 0.000000e+00, %58 ]
  %94 = phi float [ %82, %75 ], [ 0.000000e+00, %58 ]
  %bc26 = phi <4 x float> [ %89, %75 ], [ zeroinitializer, %58 ], !dbg !41
  %95 = extractelement <4 x float> %bc26, i64 0, !dbg !41
  %96 = extractelement <4 x float> %bc26, i64 1, !dbg !41
  %97 = extractelement <4 x float> %bc26, i64 2, !dbg !41
  %98 = extractelement <4 x float> %bc26, i64 3, !dbg !41
  %99 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %94), !dbg !44
  %100 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %93), !dbg !44
  %101 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %92), !dbg !44
  %102 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %91), !dbg !44
  %103 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %95), !dbg !44
  %104 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %96), !dbg !44
  %105 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %97), !dbg !44
  %106 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %98), !dbg !44
  %107 = fptrunc double %3 to float, !dbg !45
  %108 = fmul float %99, %107, !dbg !46
  %109 = fmul float %100, %107, !dbg !46
  %110 = fmul float %101, %107, !dbg !46
  %111 = fmul float %102, %107, !dbg !46
  %112 = fmul float %103, %107, !dbg !46
  %113 = fmul float %104, %107, !dbg !46
  %114 = fmul float %105, %107, !dbg !46
  %115 = fmul float %106, %107, !dbg !46
  %116 = fmul float %60, %108, !dbg !47
  %117 = fmul float %62, %109, !dbg !47
  %118 = fmul float %64, %110, !dbg !47
  %119 = fmul float %66, %111, !dbg !47
  %120 = fmul float %68, %112, !dbg !47
  %121 = fmul float %70, %113, !dbg !47
  %122 = fmul float %72, %114, !dbg !47
  %123 = fmul float %74, %115, !dbg !47
  %124 = icmp slt i32 %.decomposed, 64, !dbg !48
  %125 = and i1 %53, %124, !dbg !49
  %126 = and i1 %20, %125, !dbg !50
  br i1 %126, label %127, label %132, !dbg !51

127:                                              ; preds = %90
  %128 = getelementptr bfloat, ptr addrspace(1) %1, i64 %28, !dbg !52
  %129 = getelementptr i8, ptr addrspace(1) %128, i64 128, !dbg !52
  %130 = getelementptr bfloat, ptr addrspace(1) %129, i64 %29, !dbg !52
  %131 = load <8 x i16>, ptr addrspace(1) %130, align 16, !dbg !51
  br label %132, !dbg !51

132:                                              ; preds = %127, %90
  %bc36 = phi <8 x i16> [ %131, %127 ], [ zeroinitializer, %90 ], !dbg !51
  %133 = extractelement <8 x i16> %bc36, i64 0, !dbg !53
  %134 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %133) #1
  %135 = extractelement <8 x i16> %bc36, i64 1, !dbg !53
  %136 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %135) #1
  %137 = extractelement <8 x i16> %bc36, i64 2, !dbg !53
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #1
  %139 = extractelement <8 x i16> %bc36, i64 3, !dbg !53
  %140 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %139) #1
  %141 = extractelement <8 x i16> %bc36, i64 4, !dbg !53
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #1
  %143 = extractelement <8 x i16> %bc36, i64 5, !dbg !53
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #1
  %145 = extractelement <8 x i16> %bc36, i64 6, !dbg !53
  %146 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %145) #1
  %147 = extractelement <8 x i16> %bc36, i64 7, !dbg !53
  %148 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %147) #1
  %149 = fsub float 0.000000e+00, %134, !dbg !54
  %150 = fsub float 0.000000e+00, %136, !dbg !54
  %151 = fsub float 0.000000e+00, %138, !dbg !54
  %152 = fsub float 0.000000e+00, %140, !dbg !54
  %153 = fsub float 0.000000e+00, %142, !dbg !54
  %154 = fsub float 0.000000e+00, %144, !dbg !54
  %155 = fsub float 0.000000e+00, %146, !dbg !54
  %156 = fsub float 0.000000e+00, %148, !dbg !54
  %157 = select i1 %125, float %149, float 0.000000e+00, !dbg !55
  %158 = select i1 %125, float %150, float 0.000000e+00, !dbg !55
  %159 = select i1 %125, float %151, float 0.000000e+00, !dbg !55
  %160 = select i1 %125, float %152, float 0.000000e+00, !dbg !55
  %161 = select i1 %125, float %153, float 0.000000e+00, !dbg !55
  %162 = select i1 %125, float %154, float 0.000000e+00, !dbg !55
  %163 = select i1 %125, float %155, float 0.000000e+00, !dbg !55
  %164 = select i1 %125, float %156, float 0.000000e+00, !dbg !55
  %165 = icmp sgt i32 %.decomposed, 63, !dbg !56
  %166 = and i1 %53, %165, !dbg !57
  %167 = and i1 %20, %166, !dbg !58
  br i1 %167, label %168, label %173, !dbg !59

168:                                              ; preds = %132
  %169 = getelementptr bfloat, ptr addrspace(1) %1, i64 %28, !dbg !60
  %170 = getelementptr bfloat, ptr addrspace(1) %169, i64 %29, !dbg !60
  %171 = getelementptr i8, ptr addrspace(1) %170, i64 -128, !dbg !60
  %172 = load <8 x i16>, ptr addrspace(1) %171, align 16, !dbg !59
  br label %173, !dbg !59

173:                                              ; preds = %168, %132
  %bc46 = phi <8 x i16> [ %172, %168 ], [ zeroinitializer, %132 ], !dbg !59
  %174 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %94), !dbg !61
  %175 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %93), !dbg !61
  %176 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %92), !dbg !61
  %177 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %91), !dbg !61
  %178 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %95), !dbg !61
  %179 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %96), !dbg !61
  %180 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %97), !dbg !61
  %181 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %98), !dbg !61
  br i1 %20, label %182, label %264, !dbg !62

182:                                              ; preds = %173
  %183 = extractelement <8 x i16> %bc46, i64 0, !dbg !63
  %184 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %183) #1
  %185 = select i1 %124, float %157, float %184, !dbg !64
  %186 = fmul float %174, %107, !dbg !65
  %187 = fmul float %186, %185, !dbg !66
  %188 = fadd float %116, %187, !dbg !67
  %189 = select i1 %27, float %38, float %188, !dbg !68
  %190 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %189) #1
  %191 = insertelement <2 x i16> poison, i16 %190, i64 0, !dbg !62
  %192 = extractelement <8 x i16> %bc46, i64 1, !dbg !63
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #1
  %194 = select i1 %124, float %158, float %193, !dbg !64
  %195 = fmul float %175, %107, !dbg !65
  %196 = fmul float %195, %194, !dbg !66
  %197 = fadd float %117, %196, !dbg !67
  %198 = select i1 %27, float %40, float %197, !dbg !68
  %199 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %198) #1
  %200 = insertelement <2 x i16> %191, i16 %199, i64 1, !dbg !62
  %201 = bitcast <2 x i16> %200 to i32, !dbg !62
  %202 = insertelement <4 x i32> poison, i32 %201, i64 0, !dbg !62
  %203 = extractelement <8 x i16> %bc46, i64 2, !dbg !63
  %204 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %203) #1
  %205 = select i1 %124, float %159, float %204, !dbg !64
  %206 = fmul float %176, %107, !dbg !65
  %207 = fmul float %206, %205, !dbg !66
  %208 = fadd float %118, %207, !dbg !67
  %209 = select i1 %27, float %42, float %208, !dbg !68
  %210 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %209) #1
  %211 = insertelement <2 x i16> poison, i16 %210, i64 0, !dbg !62
  %212 = extractelement <8 x i16> %bc46, i64 3, !dbg !63
  %213 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %212) #1
  %214 = select i1 %124, float %160, float %213, !dbg !64
  %215 = fmul float %177, %107, !dbg !65
  %216 = fmul float %215, %214, !dbg !66
  %217 = fadd float %119, %216, !dbg !67
  %218 = select i1 %27, float %44, float %217, !dbg !68
  %219 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %218) #1
  %220 = insertelement <2 x i16> %211, i16 %219, i64 1, !dbg !62
  %221 = bitcast <2 x i16> %220 to i32, !dbg !62
  %222 = insertelement <4 x i32> %202, i32 %221, i64 1, !dbg !62
  %223 = extractelement <8 x i16> %bc46, i64 4, !dbg !63
  %224 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %223) #1
  %225 = select i1 %124, float %161, float %224, !dbg !64
  %226 = fmul float %178, %107, !dbg !65
  %227 = fmul float %226, %225, !dbg !66
  %228 = fadd float %120, %227, !dbg !67
  %229 = select i1 %27, float %46, float %228, !dbg !68
  %230 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %229) #1
  %231 = insertelement <2 x i16> poison, i16 %230, i64 0, !dbg !62
  %232 = extractelement <8 x i16> %bc46, i64 5, !dbg !63
  %233 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %232) #1
  %234 = select i1 %124, float %162, float %233, !dbg !64
  %235 = fmul float %179, %107, !dbg !65
  %236 = fmul float %235, %234, !dbg !66
  %237 = fadd float %121, %236, !dbg !67
  %238 = select i1 %27, float %48, float %237, !dbg !68
  %239 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %238) #1
  %240 = insertelement <2 x i16> %231, i16 %239, i64 1, !dbg !62
  %241 = bitcast <2 x i16> %240 to i32, !dbg !62
  %242 = insertelement <4 x i32> %222, i32 %241, i64 2, !dbg !62
  %243 = extractelement <8 x i16> %bc46, i64 6, !dbg !63
  %244 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %243) #1
  %245 = select i1 %124, float %163, float %244, !dbg !64
  %246 = fmul float %180, %107, !dbg !65
  %247 = fmul float %246, %245, !dbg !66
  %248 = fadd float %122, %247, !dbg !67
  %249 = select i1 %27, float %50, float %248, !dbg !68
  %250 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %249) #1
  %251 = insertelement <2 x i16> poison, i16 %250, i64 0, !dbg !62
  %252 = extractelement <8 x i16> %bc46, i64 7, !dbg !63
  %253 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %252) #1
  %254 = select i1 %124, float %164, float %253, !dbg !64
  %255 = fmul float %181, %107, !dbg !65
  %256 = fmul float %255, %254, !dbg !66
  %257 = fadd float %123, %256, !dbg !67
  %258 = select i1 %27, float %52, float %257, !dbg !68
  %259 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %258) #1
  %260 = insertelement <2 x i16> %251, i16 %259, i64 1, !dbg !62
  %261 = bitcast <2 x i16> %260 to i32, !dbg !62
  %262 = insertelement <4 x i32> %242, i32 %261, i64 3, !dbg !62
  %263 = getelementptr bfloat, ptr addrspace(1) %4, i64 %25, !dbg !69
  store <4 x i32> %262, ptr addrspace(1) %263, align 16, !dbg !62
  br label %264, !dbg !62

264:                                              ; preds = %182, %173
  ret void, !dbg !70
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c75fnkebadcgbldu4d6u7cbg55tywzpann66666fusbayoqlnv5r.py", directory: "/tmp/torchinductor_jovyan/75")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 22, column: 21, scope: !17)
!26 = !DILocation(line: 22, column: 28, scope: !17)
!27 = !DILocation(line: 23, column: 19, scope: !17)
!28 = !DILocation(line: 24, column: 19, scope: !17)
!29 = !DILocation(line: 30, column: 18, scope: !17)
!30 = !DILocation(line: 31, column: 39, scope: !17)
!31 = !DILocation(line: 31, column: 35, scope: !17)
!32 = !DILocation(line: 31, column: 63, scope: !17)
!33 = !DILocation(line: 31, column: 56, scope: !17)
!34 = !DILocation(line: 31, column: 30, scope: !17)
!35 = !DILocation(line: 31, column: 114, scope: !17)
!36 = !DILocation(line: 32, column: 19, scope: !17)
!37 = !DILocation(line: 35, column: 51, scope: !17)
!38 = !DILocation(line: 35, column: 44, scope: !17)
!39 = !DILocation(line: 35, column: 30, scope: !17)
!40 = !DILocation(line: 35, column: 102, scope: !17)
!41 = !DILocation(line: 36, column: 43, scope: !17)
!42 = !DILocation(line: 36, column: 37, scope: !17)
!43 = !DILocation(line: 36, column: 32, scope: !17)
!44 = !DILocation(line: 37, column: 24, scope: !17)
!45 = !DILocation(line: 39, column: 21, scope: !17)
!46 = !DILocation(line: 40, column: 20, scope: !17)
!47 = !DILocation(line: 42, column: 19, scope: !17)
!48 = !DILocation(line: 47, column: 20, scope: !17)
!49 = !DILocation(line: 48, column: 20, scope: !17)
!50 = !DILocation(line: 49, column: 60, scope: !17)
!51 = !DILocation(line: 49, column: 52, scope: !17)
!52 = !DILocation(line: 49, column: 31, scope: !17)
!53 = !DILocation(line: 49, column: 111, scope: !17)
!54 = !DILocation(line: 50, column: 13, scope: !17)
!55 = !DILocation(line: 52, column: 35, scope: !17)
!56 = !DILocation(line: 53, column: 21, scope: !17)
!57 = !DILocation(line: 56, column: 20, scope: !17)
!58 = !DILocation(line: 57, column: 63, scope: !17)
!59 = !DILocation(line: 57, column: 55, scope: !17)
!60 = !DILocation(line: 57, column: 31, scope: !17)
!61 = !DILocation(line: 59, column: 24, scope: !17)
!62 = !DILocation(line: 67, column: 37, scope: !17)
!63 = !DILocation(line: 57, column: 114, scope: !17)
!64 = !DILocation(line: 58, column: 35, scope: !17)
!65 = !DILocation(line: 60, column: 20, scope: !17)
!66 = !DILocation(line: 62, column: 20, scope: !17)
!67 = !DILocation(line: 63, column: 20, scope: !17)
!68 = !DILocation(line: 66, column: 33, scope: !17)
!69 = !DILocation(line: 67, column: 25, scope: !17)
!70 = !DILocation(line: 67, column: 4, scope: !17)
