; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare !dbg !15 float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_poi_fused_mul_silu_9(ptr addrspace(1) captures(none) %0, ptr addrspace(1) readonly captures(none) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr #2 !dbg !16 !intel_reqd_sub_group_size !17 !max_work_group_size !18 {
  %5 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #3, !dbg !19
  %6 = trunc i64 %5 to i32, !dbg !19
  %7 = shl i32 %6, 7, !dbg !20
  %8 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #3, !dbg !21
  %9 = trunc i64 %8 to i32, !dbg !21
  %10 = and i32 %9, 127, !dbg !21
  %11 = or disjoint i32 %10, %7, !dbg !22
  %12 = icmp slt i32 %11, 14336, !dbg !23
  br i1 %12, label %13, label %30, !dbg !24

13:                                               ; preds = %4
  %14 = sext i32 %11 to i64, !dbg !25
  %15 = getelementptr bfloat, ptr addrspace(1) %0, i64 %14, !dbg !25
  %16 = load i16, ptr addrspace(1) %15, align 2, !dbg !26
  %17 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %16) #3
  %18 = getelementptr bfloat, ptr addrspace(1) %1, i64 %14, !dbg !27
  %19 = fsub float 0.000000e+00, %17, !dbg !28
  %20 = fmul float %19, 0x3FF7154760000000, !dbg !32
  %21 = tail call float @llvm.exp2.f32(float %20), !dbg !32
  %22 = fadd float %21, 1.000000e+00, !dbg !33
  %23 = fdiv float 1.000000e+00, %22, !dbg !34
  %24 = fmul float %17, %23, !dbg !35
  %25 = load i16, ptr addrspace(1) %18, align 2, !dbg !36
  %26 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %25) #3
  %27 = fmul float %26, %24, !dbg !37
  %28 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %27) #3
  %29 = insertelement <1 x i16> poison, i16 %28, i64 0, !dbg !38
  store <1 x i16> %29, ptr addrspace(1) %15, align 2, !dbg !38
  br label %30, !dbg !38

30:                                               ; preds = %4, %13
  ret void, !dbg !39
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cmnx2qxnd33y57yd7fd4m6ycgqctc2plmp6jx5kvkq4n7vku2aox.py", directory: "/tmp/torchinductor_jovyan/mn")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "llvm.exp2.f32", linkageName: "llvm.exp2.f32", scope: !1, file: !1, line: 27, type: !10, scopeLine: 27, spFlags: DISPFlagOptimized)
!16 = distinct !DISubprogram(name: "triton_poi_fused_mul_silu_9", linkageName: "triton_poi_fused_mul_silu_9", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!17 = !{i32 32}
!18 = !{i64 128, i64 1, i64 1}
!19 = !DILocation(line: 20, column: 28, scope: !16)
!20 = !DILocation(line: 20, column: 33, scope: !16)
!21 = !DILocation(line: 21, column: 36, scope: !16)
!22 = !DILocation(line: 21, column: 23, scope: !16)
!23 = !DILocation(line: 22, column: 21, scope: !16)
!24 = !DILocation(line: 24, column: 39, scope: !16)
!25 = !DILocation(line: 24, column: 34, scope: !16)
!26 = !DILocation(line: 24, column: 49, scope: !16)
!27 = !DILocation(line: 25, column: 30, scope: !16)
!28 = !DILocation(line: 47, column: 30, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !16, file: !30, discriminator: 0)
!30 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!31 = !DILocation(line: 27, column: 22, scope: !16)
!32 = !DILocation(line: 47, column: 29, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 47, column: 20, scope: !29, inlinedAt: !31)
!34 = !DILocation(line: 47, column: 16, scope: !29, inlinedAt: !31)
!35 = !DILocation(line: 28, column: 18, scope: !16)
!36 = !DILocation(line: 25, column: 45, scope: !16)
!37 = !DILocation(line: 30, column: 18, scope: !16)
!38 = !DILocation(line: 31, column: 39, scope: !16)
!39 = !DILocation(line: 31, column: 4, scope: !16)
