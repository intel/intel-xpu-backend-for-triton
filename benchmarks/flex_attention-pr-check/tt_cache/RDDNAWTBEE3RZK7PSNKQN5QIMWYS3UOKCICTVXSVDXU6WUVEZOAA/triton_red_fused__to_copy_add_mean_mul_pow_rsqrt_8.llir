; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !14 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, double %4, ptr addrspace(1) writeonly captures(none) %5, i32 %6, i32 %7, ptr addrspace(1) readnone captures(none) %8, ptr addrspace(3) captures(none) %9) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %11 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %12 = trunc i64 %11 to i32, !dbg !21
  %13 = icmp sgt i32 %6, %12, !dbg !22
  %14 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %15 = trunc i64 %14 to i32, !dbg !23
  %16 = shl i32 %15, 2, !dbg !23
  %17 = and i32 %16, 2044, !dbg !23
  %18 = shl i32 %12, 12, !dbg !24
  %19 = or disjoint i32 %17, %18
  %20 = sext i32 %19 to i64, !dbg !25
  br i1 %13, label %21, label %24, !dbg !26

21:                                               ; preds = %10
  %22 = getelementptr bfloat, ptr addrspace(1) %0, i64 %20, !dbg !27
  %23 = load <4 x i16>, ptr addrspace(1) %22, align 8, !dbg !26
  br label %24, !dbg !26

24:                                               ; preds = %21, %10
  %bc21 = phi <4 x i16> [ %23, %21 ], [ zeroinitializer, %10 ], !dbg !26
  %25 = extractelement <4 x i16> %bc21, i64 0, !dbg !28
  %26 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %25) #4
  %27 = extractelement <4 x i16> %bc21, i64 1, !dbg !28
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #4
  %29 = extractelement <4 x i16> %bc21, i64 2, !dbg !28
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = extractelement <4 x i16> %bc21, i64 3, !dbg !28
  %32 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %31) #4
  br i1 %13, label %33, label %36, !dbg !29

33:                                               ; preds = %24
  %34 = getelementptr bfloat, ptr addrspace(1) %1, i64 %20, !dbg !30
  %35 = load <4 x i16>, ptr addrspace(1) %34, align 8, !dbg !29
  br label %36, !dbg !29

36:                                               ; preds = %33, %24
  %bc25 = phi <4 x i16> [ %35, %33 ], [ zeroinitializer, %24 ], !dbg !29
  %37 = extractelement <4 x i16> %bc25, i64 0, !dbg !31
  %38 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %37) #4
  %39 = extractelement <4 x i16> %bc25, i64 1, !dbg !31
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #4
  %41 = extractelement <4 x i16> %bc25, i64 2, !dbg !31
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #4
  %43 = extractelement <4 x i16> %bc25, i64 3, !dbg !31
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #4
  br i1 %13, label %45, label %48, !dbg !32

45:                                               ; preds = %36
  %46 = getelementptr bfloat, ptr addrspace(1) %2, i64 %20, !dbg !33
  %47 = load <4 x i16>, ptr addrspace(1) %46, align 8, !dbg !32
  br label %48, !dbg !32

48:                                               ; preds = %45, %36
  %bc29 = phi <4 x i16> [ %47, %45 ], [ zeroinitializer, %36 ], !dbg !32
  %49 = extractelement <4 x i16> %bc29, i64 0, !dbg !34
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #4
  %51 = extractelement <4 x i16> %bc29, i64 1, !dbg !34
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #4
  %53 = extractelement <4 x i16> %bc29, i64 2, !dbg !34
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #4
  %55 = extractelement <4 x i16> %bc29, i64 3, !dbg !34
  %56 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %55) #4
  %57 = fadd float %26, %38, !dbg !35
  %58 = fadd float %28, %40, !dbg !35
  %59 = fadd float %30, %42, !dbg !35
  %60 = fadd float %32, %44, !dbg !35
  %61 = fadd float %57, %50, !dbg !36
  %62 = fadd float %58, %52, !dbg !36
  %63 = fadd float %59, %54, !dbg !36
  %64 = fadd float %60, %56, !dbg !36
  %65 = fmul float %61, %61, !dbg !37
  %66 = fmul float %62, %62, !dbg !37
  %67 = fmul float %63, %63, !dbg !37
  %68 = fmul float %64, %64, !dbg !37
  %69 = or disjoint i64 %20, 2048, !dbg !38
  br i1 %13, label %70, label %73, !dbg !26

70:                                               ; preds = %48
  %71 = getelementptr bfloat, ptr addrspace(1) %0, i64 %69, !dbg !27
  %72 = load <4 x i16>, ptr addrspace(1) %71, align 8, !dbg !26
  br label %73, !dbg !26

73:                                               ; preds = %70, %48
  %bc21.1 = phi <4 x i16> [ %72, %70 ], [ zeroinitializer, %48 ], !dbg !26
  %74 = extractelement <4 x i16> %bc21.1, i64 0, !dbg !28
  %75 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %74) #4
  %76 = extractelement <4 x i16> %bc21.1, i64 1, !dbg !28
  %77 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %76) #4
  %78 = extractelement <4 x i16> %bc21.1, i64 2, !dbg !28
  %79 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %78) #4
  %80 = extractelement <4 x i16> %bc21.1, i64 3, !dbg !28
  %81 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %80) #4
  br i1 %13, label %82, label %85, !dbg !29

82:                                               ; preds = %73
  %83 = getelementptr bfloat, ptr addrspace(1) %1, i64 %69, !dbg !30
  %84 = load <4 x i16>, ptr addrspace(1) %83, align 8, !dbg !29
  br label %85, !dbg !29

85:                                               ; preds = %82, %73
  %bc25.1 = phi <4 x i16> [ %84, %82 ], [ zeroinitializer, %73 ], !dbg !29
  %86 = extractelement <4 x i16> %bc25.1, i64 0, !dbg !31
  %87 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %86) #4
  %88 = extractelement <4 x i16> %bc25.1, i64 1, !dbg !31
  %89 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %88) #4
  %90 = extractelement <4 x i16> %bc25.1, i64 2, !dbg !31
  %91 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %90) #4
  %92 = extractelement <4 x i16> %bc25.1, i64 3, !dbg !31
  %93 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %92) #4
  br i1 %13, label %94, label %97, !dbg !32

94:                                               ; preds = %85
  %95 = getelementptr bfloat, ptr addrspace(1) %2, i64 %69, !dbg !33
  %96 = load <4 x i16>, ptr addrspace(1) %95, align 8, !dbg !32
  br label %97, !dbg !32

97:                                               ; preds = %94, %85
  %bc29.1 = phi <4 x i16> [ %96, %94 ], [ zeroinitializer, %85 ], !dbg !32
  %98 = extractelement <4 x i16> %bc29.1, i64 0, !dbg !34
  %99 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %98) #4
  %100 = extractelement <4 x i16> %bc29.1, i64 1, !dbg !34
  %101 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %100) #4
  %102 = extractelement <4 x i16> %bc29.1, i64 2, !dbg !34
  %103 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %102) #4
  %104 = extractelement <4 x i16> %bc29.1, i64 3, !dbg !34
  %105 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %104) #4
  %106 = fadd float %75, %87, !dbg !35
  %107 = fadd float %77, %89, !dbg !35
  %108 = fadd float %79, %91, !dbg !35
  %109 = fadd float %81, %93, !dbg !35
  %110 = fadd float %106, %99, !dbg !36
  %111 = fadd float %107, %101, !dbg !36
  %112 = fadd float %108, %103, !dbg !36
  %113 = fadd float %109, %105, !dbg !36
  %114 = fmul float %110, %110, !dbg !37
  %115 = fmul float %111, %111, !dbg !37
  %116 = fmul float %112, %112, !dbg !37
  %117 = fmul float %113, %113, !dbg !37
  %118 = fadd float %65, %114, !dbg !39
  %119 = fadd float %66, %115, !dbg !39
  %120 = fadd float %67, %116, !dbg !39
  %121 = fadd float %68, %117, !dbg !39
  %122 = and i32 %15, 511, !dbg !23
  %123 = and i32 %15, 31, !dbg !23
  %124 = fadd float %118, %119, !dbg !40
  %125 = fadd float %120, %124, !dbg !40
  %126 = fadd float %121, %125, !dbg !40
  %127 = select i1 %13, float %126, float 0.000000e+00, !dbg !40
  %128 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %127) #5, !dbg !44
  %129 = icmp eq i32 %123, 0, !dbg !44
  br i1 %129, label %130, label %134, !dbg !44

130:                                              ; preds = %97
  %131 = lshr exact i32 %122, 5, !dbg !23
  %132 = zext nneg i32 %131 to i64, !dbg !44
  %133 = getelementptr float, ptr addrspace(3) %9, i64 %132, !dbg !44
  store float %128, ptr addrspace(3) %133, align 4, !dbg !44
  br label %134, !dbg !44

134:                                              ; preds = %130, %97
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !44
  %135 = icmp samesign ult i32 %122, 16, !dbg !44
  %136 = and i64 %14, 511, !dbg !44
  %137 = getelementptr float, ptr addrspace(3) %9, i64 %136, !dbg !44
  br i1 %135, label %138, label %140, !dbg !44

138:                                              ; preds = %134
  %139 = load float, ptr addrspace(3) %137, align 4, !dbg !44
  br label %140, !dbg !44

140:                                              ; preds = %138, %134
  %141 = phi float [ %139, %138 ], [ undef, %134 ], !dbg !43
  %142 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %141, i32 16) #5, !dbg !44
  %143 = and i32 %15, 15, !dbg !44
  %144 = icmp eq i32 %143, 0, !dbg !44
  %145 = and i1 %135, %144, !dbg !44
  br i1 %145, label %146, label %147, !dbg !44

146:                                              ; preds = %140
  store float %142, ptr addrspace(3) %137, align 4, !dbg !44
  br label %147, !dbg !44

147:                                              ; preds = %146, %140
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !44
  %148 = load float, ptr addrspace(3) %9, align 4, !dbg !44
  %149 = fmul float %148, 0x3F30000000000000, !dbg !45
  %150 = fptrunc double %4 to float, !dbg !46
  %151 = fadd float %149, %150, !dbg !47
  %152 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %151) #6, !dbg !48
  br i1 %13, label %.split.us.preheader, label %.split33.us

.split.us.preheader:                              ; preds = %147
  %153 = zext nneg i32 %17 to i64, !dbg !49
  %154 = getelementptr bfloat, ptr addrspace(1) %3, i64 %153, !dbg !50
  %155 = load i16, ptr addrspace(1) %154, align 8, !dbg !51
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = getelementptr inbounds nuw i8, ptr addrspace(1) %154, i64 2, !dbg !51
  %158 = load i16, ptr addrspace(1) %157, align 2, !dbg !51
  %159 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %158) #4
  %160 = getelementptr inbounds nuw i8, ptr addrspace(1) %154, i64 4, !dbg !51
  %161 = load i16, ptr addrspace(1) %160, align 4, !dbg !51
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = getelementptr inbounds nuw i8, ptr addrspace(1) %154, i64 6, !dbg !51
  %164 = load i16, ptr addrspace(1) %163, align 2, !dbg !51
  %165 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %164) #4
  %166 = getelementptr bfloat, ptr addrspace(1) %0, i64 %20, !dbg !52
  %167 = load i16, ptr addrspace(1) %166, align 8, !dbg !53
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #4
  %169 = getelementptr inbounds nuw i8, ptr addrspace(1) %166, i64 2, !dbg !53
  %170 = load i16, ptr addrspace(1) %169, align 2, !dbg !53
  %171 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %170) #4
  %172 = getelementptr inbounds nuw i8, ptr addrspace(1) %166, i64 4, !dbg !53
  %173 = load i16, ptr addrspace(1) %172, align 4, !dbg !53
  %174 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %173) #4
  %175 = getelementptr inbounds nuw i8, ptr addrspace(1) %166, i64 6, !dbg !53
  %176 = load i16, ptr addrspace(1) %175, align 2, !dbg !53
  %177 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %176) #4
  %178 = getelementptr bfloat, ptr addrspace(1) %1, i64 %20, !dbg !54
  %179 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 6, !dbg !55
  %180 = load i16, ptr addrspace(1) %179, align 2, !dbg !55
  %181 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %180) #4
  %182 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 4, !dbg !55
  %183 = load i16, ptr addrspace(1) %182, align 4, !dbg !55
  %184 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %183) #4
  %185 = getelementptr inbounds nuw i8, ptr addrspace(1) %178, i64 2, !dbg !55
  %186 = load i16, ptr addrspace(1) %185, align 2, !dbg !55
  %187 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %186) #4
  %188 = load i16, ptr addrspace(1) %178, align 8, !dbg !55
  %189 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %188) #4
  %190 = getelementptr bfloat, ptr addrspace(1) %2, i64 %20, !dbg !56
  %191 = fadd float %168, %189, !dbg !57
  %192 = load i16, ptr addrspace(1) %190, align 8, !dbg !58
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #4
  %194 = fadd float %191, %193, !dbg !59
  %195 = fmul float %152, %194, !dbg !60
  %196 = fmul float %156, %195, !dbg !61
  %197 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %196) #4
  %198 = insertelement <2 x i16> poison, i16 %197, i64 0, !dbg !62
  %199 = fadd float %171, %187, !dbg !57
  %200 = getelementptr inbounds nuw i8, ptr addrspace(1) %190, i64 2, !dbg !58
  %201 = load i16, ptr addrspace(1) %200, align 2, !dbg !58
  %202 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %201) #4
  %203 = fadd float %199, %202, !dbg !59
  %204 = fmul float %152, %203, !dbg !60
  %205 = fmul float %159, %204, !dbg !61
  %206 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %205) #4
  %207 = insertelement <2 x i16> %198, i16 %206, i64 1, !dbg !62
  %208 = bitcast <2 x i16> %207 to i32, !dbg !62
  %209 = insertelement <2 x i32> poison, i32 %208, i64 0, !dbg !62
  %210 = fadd float %174, %184, !dbg !57
  %211 = getelementptr inbounds nuw i8, ptr addrspace(1) %190, i64 4, !dbg !58
  %212 = load i16, ptr addrspace(1) %211, align 4, !dbg !58
  %213 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %212) #4
  %214 = fadd float %210, %213, !dbg !59
  %215 = fmul float %152, %214, !dbg !60
  %216 = fmul float %162, %215, !dbg !61
  %217 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %216) #4
  %218 = insertelement <2 x i16> poison, i16 %217, i64 0, !dbg !62
  %219 = fadd float %177, %181, !dbg !57
  %220 = getelementptr inbounds nuw i8, ptr addrspace(1) %190, i64 6, !dbg !58
  %221 = load i16, ptr addrspace(1) %220, align 2, !dbg !58
  %222 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %221) #4
  %223 = fadd float %219, %222, !dbg !59
  %224 = fmul float %152, %223, !dbg !60
  %225 = fmul float %165, %224, !dbg !61
  %226 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %225) #4
  %227 = insertelement <2 x i16> %218, i16 %226, i64 1, !dbg !62
  %228 = bitcast <2 x i16> %227 to i32, !dbg !62
  %229 = insertelement <2 x i32> %209, i32 %228, i64 1, !dbg !62
  %230 = getelementptr bfloat, ptr addrspace(1) %5, i64 %20, !dbg !63
  store <2 x i32> %229, ptr addrspace(1) %230, align 8, !dbg !62
  %231 = getelementptr bfloat, ptr addrspace(1) %3, i64 %153, !dbg !50
  %232 = getelementptr i8, ptr addrspace(1) %231, i64 4096, !dbg !50
  %233 = load i16, ptr addrspace(1) %232, align 8, !dbg !51
  %234 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %233) #4
  %235 = getelementptr i8, ptr addrspace(1) %231, i64 4098, !dbg !51
  %236 = load i16, ptr addrspace(1) %235, align 2, !dbg !51
  %237 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %236) #4
  %238 = getelementptr i8, ptr addrspace(1) %231, i64 4100, !dbg !51
  %239 = load i16, ptr addrspace(1) %238, align 4, !dbg !51
  %240 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %239) #4
  %241 = getelementptr i8, ptr addrspace(1) %231, i64 4102, !dbg !51
  %242 = load i16, ptr addrspace(1) %241, align 2, !dbg !51
  %243 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %242) #4
  %244 = getelementptr bfloat, ptr addrspace(1) %0, i64 %69, !dbg !52
  %245 = load i16, ptr addrspace(1) %244, align 8, !dbg !53
  %246 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %245) #4
  %247 = getelementptr inbounds nuw i8, ptr addrspace(1) %244, i64 2, !dbg !53
  %248 = load i16, ptr addrspace(1) %247, align 2, !dbg !53
  %249 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %248) #4
  %250 = getelementptr inbounds nuw i8, ptr addrspace(1) %244, i64 4, !dbg !53
  %251 = load i16, ptr addrspace(1) %250, align 4, !dbg !53
  %252 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %251) #4
  %253 = getelementptr inbounds nuw i8, ptr addrspace(1) %244, i64 6, !dbg !53
  %254 = load i16, ptr addrspace(1) %253, align 2, !dbg !53
  %255 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %254) #4
  %256 = getelementptr bfloat, ptr addrspace(1) %1, i64 %69, !dbg !54
  %257 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 6, !dbg !55
  %258 = load i16, ptr addrspace(1) %257, align 2, !dbg !55
  %259 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %258) #4
  %260 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 4, !dbg !55
  %261 = load i16, ptr addrspace(1) %260, align 4, !dbg !55
  %262 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %261) #4
  %263 = getelementptr inbounds nuw i8, ptr addrspace(1) %256, i64 2, !dbg !55
  %264 = load i16, ptr addrspace(1) %263, align 2, !dbg !55
  %265 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %264) #4
  %266 = load i16, ptr addrspace(1) %256, align 8, !dbg !55
  %267 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %266) #4
  %268 = getelementptr bfloat, ptr addrspace(1) %2, i64 %69, !dbg !56
  %269 = fadd float %246, %267, !dbg !57
  %270 = load i16, ptr addrspace(1) %268, align 8, !dbg !58
  %271 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %270) #4
  %272 = fadd float %269, %271, !dbg !59
  %273 = fmul float %152, %272, !dbg !60
  %274 = fmul float %234, %273, !dbg !61
  %275 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %274) #4
  %276 = insertelement <2 x i16> poison, i16 %275, i64 0, !dbg !62
  %277 = fadd float %249, %265, !dbg !57
  %278 = getelementptr inbounds nuw i8, ptr addrspace(1) %268, i64 2, !dbg !58
  %279 = load i16, ptr addrspace(1) %278, align 2, !dbg !58
  %280 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %279) #4
  %281 = fadd float %277, %280, !dbg !59
  %282 = fmul float %152, %281, !dbg !60
  %283 = fmul float %237, %282, !dbg !61
  %284 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %283) #4
  %285 = insertelement <2 x i16> %276, i16 %284, i64 1, !dbg !62
  %286 = bitcast <2 x i16> %285 to i32, !dbg !62
  %287 = insertelement <2 x i32> poison, i32 %286, i64 0, !dbg !62
  %288 = fadd float %252, %262, !dbg !57
  %289 = getelementptr inbounds nuw i8, ptr addrspace(1) %268, i64 4, !dbg !58
  %290 = load i16, ptr addrspace(1) %289, align 4, !dbg !58
  %291 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %290) #4
  %292 = fadd float %288, %291, !dbg !59
  %293 = fmul float %152, %292, !dbg !60
  %294 = fmul float %240, %293, !dbg !61
  %295 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %294) #4
  %296 = insertelement <2 x i16> poison, i16 %295, i64 0, !dbg !62
  %297 = fadd float %255, %259, !dbg !57
  %298 = getelementptr inbounds nuw i8, ptr addrspace(1) %268, i64 6, !dbg !58
  %299 = load i16, ptr addrspace(1) %298, align 2, !dbg !58
  %300 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %299) #4
  %301 = fadd float %297, %300, !dbg !59
  %302 = fmul float %152, %301, !dbg !60
  %303 = fmul float %243, %302, !dbg !61
  %304 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %303) #4
  %305 = insertelement <2 x i16> %296, i16 %304, i64 1, !dbg !62
  %306 = bitcast <2 x i16> %305 to i32, !dbg !62
  %307 = insertelement <2 x i32> %287, i32 %306, i64 1, !dbg !62
  %308 = getelementptr bfloat, ptr addrspace(1) %5, i64 %69, !dbg !63
  store <2 x i32> %307, ptr addrspace(1) %308, align 8, !dbg !62
  br label %.split33.us, !dbg !64

.split33.us:                                      ; preds = %147, %.split.us.preheader
  ret void, !dbg !64
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cbmscl4l3zj4s2szubscexezvzpcnfi2dfexr2mpkrxsrqaqod7u.py", directory: "/tmp/torchinductor_jovyan/bm")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 46, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 51, scope: !18)
!27 = !DILocation(line: 35, column: 34, scope: !18)
!28 = !DILocation(line: 35, column: 112, scope: !18)
!29 = !DILocation(line: 36, column: 51, scope: !18)
!30 = !DILocation(line: 36, column: 34, scope: !18)
!31 = !DILocation(line: 36, column: 112, scope: !18)
!32 = !DILocation(line: 37, column: 51, scope: !18)
!33 = !DILocation(line: 37, column: 34, scope: !18)
!34 = !DILocation(line: 37, column: 112, scope: !18)
!35 = !DILocation(line: 38, column: 22, scope: !18)
!36 = !DILocation(line: 39, column: 22, scope: !18)
!37 = !DILocation(line: 41, column: 22, scope: !18)
!38 = !DILocation(line: 35, column: 41, scope: !18)
!39 = !DILocation(line: 43, column: 23, scope: !18)
!40 = !DILocation(line: 260, column: 15, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !18, file: !42, discriminator: 0)
!42 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!43 = !DILocation(line: 45, column: 25, scope: !18)
!44 = !DILocation(line: 290, column: 36, scope: !41, inlinedAt: !43)
!45 = !DILocation(line: 61, column: 24, scope: !18)
!46 = !DILocation(line: 62, column: 25, scope: !18)
!47 = !DILocation(line: 63, column: 24, scope: !18)
!48 = !DILocation(line: 64, column: 32, scope: !18)
!49 = !DILocation(line: 47, column: 40, scope: !18)
!50 = !DILocation(line: 53, column: 35, scope: !18)
!51 = !DILocation(line: 53, column: 95, scope: !18)
!52 = !DILocation(line: 54, column: 35, scope: !18)
!53 = !DILocation(line: 54, column: 114, scope: !18)
!54 = !DILocation(line: 55, column: 35, scope: !18)
!55 = !DILocation(line: 55, column: 114, scope: !18)
!56 = !DILocation(line: 56, column: 35, scope: !18)
!57 = !DILocation(line: 57, column: 24, scope: !18)
!58 = !DILocation(line: 56, column: 114, scope: !18)
!59 = !DILocation(line: 58, column: 24, scope: !18)
!60 = !DILocation(line: 65, column: 24, scope: !18)
!61 = !DILocation(line: 67, column: 24, scope: !18)
!62 = !DILocation(line: 68, column: 53, scope: !18)
!63 = !DILocation(line: 68, column: 29, scope: !18)
!64 = !DILocation(line: 47, column: 4, scope: !18)
