; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #1

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func void @_Z7barrierj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) writeonly captures(none) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7, ptr addrspace(3) captures(none) %8) local_unnamed_addr #2 !dbg !16 !intel_reqd_sub_group_size !17 !max_work_group_size !18 {
  %10 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #5, !dbg !19
  %11 = trunc i64 %10 to i32, !dbg !19
  %12 = shl i32 %11, 5, !dbg !20
  %13 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #5, !dbg !21
  %14 = trunc i64 %13 to i32, !dbg !21
  %15 = and i32 %14, 31, !dbg !21
  %16 = lshr i32 %14, 4, !dbg !21
  %17 = and i32 %16, 7, !dbg !21
  %18 = or disjoint i32 %15, %12, !dbg !22
  %19 = or disjoint i32 %17, %12, !dbg !22
  %20 = or disjoint i32 %19, 8, !dbg !22
  %21 = or disjoint i32 %19, 16, !dbg !22
  %22 = or disjoint i32 %19, 24, !dbg !22
  %23 = lshr i32 %14, 3, !dbg !23
  %24 = and i32 %23, 15, !dbg !23
  %25 = and i32 %14, 15, !dbg !23
  %26 = icmp samesign ult i32 %24, 14, !dbg !24
  %27 = icmp samesign ult i32 %25, 14, !dbg !24
  %28 = sdiv i32 %18, 128, !dbg !25
  %29 = sdiv i32 %19, 128, !dbg !25
  %30 = sdiv i32 %20, 128, !dbg !25
  %31 = sdiv i32 %21, 128, !dbg !25
  %32 = sdiv i32 %22, 128, !dbg !25
  %33 = shl i32 %14, 2, !dbg !26
  br i1 %26, label %34, label %._crit_edge, !dbg !27

34:                                               ; preds = %9
  %35 = and i32 %33, 28, !dbg !21
  %36 = or disjoint i32 %35, %12, !dbg !22
  %37 = shl nuw nsw i32 %24, 12, !dbg !28
  %38 = add i32 %36, %37, !dbg !29
  %39 = sext i32 %38 to i64, !dbg !30
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !30
  %41 = load <4 x float>, ptr addrspace(1) %40, align 16, !dbg !27
  br label %._crit_edge, !dbg !27

._crit_edge:                                      ; preds = %9, %34
  %bc3 = phi <4 x float> [ %41, %34 ], [ zeroinitializer, %9 ], !dbg !27
  %42 = and i32 %33, 508, !dbg !27
  %43 = shl i32 %14, 5, !dbg !27
  %44 = and i32 %43, 480, !dbg !27
  %45 = or disjoint i32 %44, %17, !dbg !27
  %46 = lshr i32 %42, 5, !dbg !27
  %47 = add nuw nsw i32 %46, %42, !dbg !27
  %48 = zext nneg i32 %47 to i64, !dbg !27
  %49 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %48, !dbg !27
  %50 = shufflevector <4 x float> %bc3, <4 x float> poison, <1 x i32> zeroinitializer, !dbg !27
  store <1 x float> %50, ptr addrspace(3) %49, align 4, !dbg !27
  %51 = or disjoint i32 %42, 1, !dbg !27
  %52 = add nuw nsw i32 %51, %46, !dbg !27
  %53 = zext nneg i32 %52 to i64, !dbg !27
  %54 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %53, !dbg !27
  %55 = shufflevector <4 x float> %bc3, <4 x float> poison, <1 x i32> <i32 1>, !dbg !27
  store <1 x float> %55, ptr addrspace(3) %54, align 4, !dbg !27
  %56 = or disjoint i32 %42, 2, !dbg !27
  %57 = add nuw nsw i32 %56, %46, !dbg !27
  %58 = zext nneg i32 %57 to i64, !dbg !27
  %59 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %58, !dbg !27
  %60 = shufflevector <4 x float> %bc3, <4 x float> poison, <1 x i32> <i32 2>, !dbg !27
  store <1 x float> %60, ptr addrspace(3) %59, align 4, !dbg !27
  %61 = or disjoint i32 %42, 3, !dbg !27
  %62 = add nuw nsw i32 %61, %46, !dbg !27
  %63 = zext nneg i32 %62 to i64, !dbg !27
  %64 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %63, !dbg !27
  %65 = shufflevector <4 x float> %bc3, <4 x float> poison, <1 x i32> <i32 3>, !dbg !27
  store <1 x float> %65, ptr addrspace(3) %64, align 4, !dbg !27
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !27
  %66 = lshr exact i32 %44, 5, !dbg !27
  %67 = add nuw nsw i32 %66, %45, !dbg !27
  %68 = zext nneg i32 %67 to i64, !dbg !27
  %69 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %68, !dbg !27
  %70 = load float, ptr addrspace(3) %69, align 4, !dbg !27
  %71 = or disjoint i32 %45, 8, !dbg !27
  %72 = add nuw nsw i32 %71, %66, !dbg !27
  %73 = zext nneg i32 %72 to i64, !dbg !27
  %74 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %73, !dbg !27
  %75 = load float, ptr addrspace(3) %74, align 4, !dbg !27
  %76 = or disjoint i32 %45, 16, !dbg !27
  %77 = add nuw nsw i32 %76, %66, !dbg !27
  %78 = zext nneg i32 %77 to i64, !dbg !27
  %79 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %78, !dbg !27
  %80 = load float, ptr addrspace(3) %79, align 4, !dbg !27
  %81 = or disjoint i32 %45, 24, !dbg !27
  %82 = add nuw nsw i32 %81, %66, !dbg !27
  %83 = zext nneg i32 %82 to i64, !dbg !27
  %84 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %83, !dbg !27
  %85 = load float, ptr addrspace(3) %84, align 4, !dbg !27
  %86 = sext i32 %28 to i64, !dbg !31
  %87 = getelementptr float, ptr addrspace(1) %1, i64 %86, !dbg !31
  %88 = sext i32 %29 to i64, !dbg !31
  %89 = getelementptr float, ptr addrspace(1) %1, i64 %88, !dbg !31
  %90 = sext i32 %30 to i64, !dbg !31
  %91 = getelementptr float, ptr addrspace(1) %1, i64 %90, !dbg !31
  %92 = sext i32 %31 to i64, !dbg !31
  %93 = getelementptr float, ptr addrspace(1) %1, i64 %92, !dbg !31
  %94 = sext i32 %32 to i64, !dbg !31
  %95 = getelementptr float, ptr addrspace(1) %1, i64 %94, !dbg !31
  %96 = load float, ptr addrspace(1) %87, align 4, !dbg !32
  %97 = load float, ptr addrspace(1) %89, align 4, !dbg !32
  %98 = load float, ptr addrspace(1) %91, align 4, !dbg !32
  %99 = load float, ptr addrspace(1) %93, align 4, !dbg !32
  %100 = load float, ptr addrspace(1) %95, align 4, !dbg !32
  br i1 %27, label %101, label %119, !dbg !33

101:                                              ; preds = %._crit_edge
  %102 = shl nuw nsw i32 %25, 5, !dbg !34
  %103 = add nsw i32 %32, %102, !dbg !35
  %104 = sext i32 %103 to i64, !dbg !36
  %105 = getelementptr float, ptr addrspace(1) %2, i64 %104, !dbg !36
  %106 = add nsw i32 %31, %102, !dbg !35
  %107 = sext i32 %106 to i64, !dbg !36
  %108 = getelementptr float, ptr addrspace(1) %2, i64 %107, !dbg !36
  %109 = add nsw i32 %30, %102, !dbg !35
  %110 = sext i32 %109 to i64, !dbg !36
  %111 = getelementptr float, ptr addrspace(1) %2, i64 %110, !dbg !36
  %112 = add nsw i32 %29, %102, !dbg !35
  %113 = sext i32 %112 to i64, !dbg !36
  %114 = getelementptr float, ptr addrspace(1) %2, i64 %113, !dbg !36
  %115 = load float, ptr addrspace(1) %114, align 4, !dbg !33
  %116 = load float, ptr addrspace(1) %111, align 4, !dbg !33
  %117 = load float, ptr addrspace(1) %108, align 4, !dbg !33
  %118 = load <1 x float>, ptr addrspace(1) %105, align 4, !dbg !33
  br label %119, !dbg !33

119:                                              ; preds = %._crit_edge, %101
  %120 = phi float [ %117, %101 ], [ 0.000000e+00, %._crit_edge ]
  %121 = phi float [ %115, %101 ], [ 0.000000e+00, %._crit_edge ]
  %122 = phi float [ %116, %101 ], [ 0.000000e+00, %._crit_edge ]
  %123 = phi <1 x float> [ %118, %101 ], [ zeroinitializer, %._crit_edge ], !dbg !33
  %124 = extractelement <1 x float> %123, i64 0, !dbg !33
  %125 = getelementptr float, ptr addrspace(1) %3, i64 %86, !dbg !37
  %126 = load <1 x float>, ptr addrspace(1) %125, align 4, !dbg !38
  %127 = fcmp oeq float %97, 0xFFF0000000000000, !dbg !39
  %128 = fcmp oeq float %98, 0xFFF0000000000000, !dbg !39
  %129 = fcmp oeq float %99, 0xFFF0000000000000, !dbg !39
  %130 = fcmp oeq float %100, 0xFFF0000000000000, !dbg !39
  %131 = fsub float %121, %97, !dbg !40
  %132 = fsub float %122, %98, !dbg !40
  %133 = fsub float %120, %99, !dbg !40
  %134 = fsub float %124, %100, !dbg !40
  %135 = select i1 %127, float 0.000000e+00, float %131, !dbg !41
  %136 = select i1 %128, float 0.000000e+00, float %132, !dbg !41
  %137 = select i1 %129, float 0.000000e+00, float %133, !dbg !41
  %138 = select i1 %130, float 0.000000e+00, float %134, !dbg !41
  %139 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %135) #7, !dbg !42
  %140 = fsub float %135, %139, !dbg !42
  %141 = fptosi float %139 to i32, !dbg !42
  %142 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %140, float noundef 0x3F55F48C60000000) #7, !dbg !42
  %143 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %140, float noundef 5.000000e-01, float noundef 1.000000e+00) #7, !dbg !42
  %144 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %142, float noundef %140, float noundef 0x3F83B29960000000) #7, !dbg !42
  %145 = fadd float %143, -1.000000e+00, !dbg !42
  %146 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %144, float noundef %140, float noundef 0x3FAC6AECC0000000) #7, !dbg !42
  %147 = fneg float %145, !dbg !42
  %148 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %140, float noundef 5.000000e-01, float noundef %147) #7, !dbg !42
  %149 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %146, float noundef %140, float noundef 0x3FCEBFBE20000000) #7, !dbg !42
  %150 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %149, float noundef %140, float noundef 0x3FC8B90C40000000) #7, !dbg !42
  %151 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %150, float noundef %140, float noundef %148) #7, !dbg !42
  %152 = fadd float %143, %151, !dbg !42
  %153 = add i32 %141, -127, !dbg !42
  %154 = icmp ult i32 %153, -252, !dbg !42
  br i1 %154, label %160, label %155, !dbg !42

155:                                              ; preds = %119
  %156 = bitcast float %152 to i32, !dbg !42
  %157 = shl nsw i32 %141, 23, !dbg !42
  %158 = add i32 %157, %156, !dbg !42
  %159 = bitcast i32 %158 to float, !dbg !42
  br label %__devicelib_imf_exp2f.exit6, !dbg !42

160:                                              ; preds = %119
  %161 = tail call float @llvm.fabs.f32(float %135), !dbg !42
  %162 = bitcast float %161 to i32, !dbg !42
  %163 = icmp samesign ugt i32 %162, 2139095039, !dbg !42
  br i1 %163, label %164, label %168, !dbg !42

164:                                              ; preds = %160
  %165 = fcmp oeq float %135, 0xFFF0000000000000, !dbg !42
  %166 = fadd float %135, %135, !dbg !42
  %167 = select i1 %165, float 0.000000e+00, float %166, !dbg !42
  br label %__devicelib_imf_exp2f.exit6, !dbg !42

168:                                              ; preds = %160
  %169 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %135, float noundef 1.920000e+02) #7, !dbg !42
  %170 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %169, float noundef -1.920000e+02) #7, !dbg !42
  %171 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %170) #7, !dbg !42
  %172 = fptosi float %171 to i32, !dbg !42
  %173 = ashr i32 %172, 1, !dbg !42
  %174 = sub nsw i32 %172, %173, !dbg !42
  %175 = shl i32 %174, 23, !dbg !42
  %176 = add i32 %175, 1065353216, !dbg !42
  %177 = shl i32 %173, 23, !dbg !42
  %178 = add i32 %177, 1065353216, !dbg !42
  %179 = bitcast i32 %176 to float, !dbg !42
  %180 = fmul float %152, %179, !dbg !42
  %181 = bitcast i32 %178 to float, !dbg !42
  %182 = fmul float %180, %181, !dbg !42
  br label %__devicelib_imf_exp2f.exit6, !dbg !42

__devicelib_imf_exp2f.exit6:                      ; preds = %155, %164, %168
  %183 = phi float [ %182, %168 ], [ %159, %155 ], [ %167, %164 ], !dbg !42
  %184 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %136) #7, !dbg !42
  %185 = fsub float %136, %184, !dbg !42
  %186 = fptosi float %184 to i32, !dbg !42
  %187 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %185, float noundef 0x3F55F48C60000000) #7, !dbg !42
  %188 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %185, float noundef 5.000000e-01, float noundef 1.000000e+00) #7, !dbg !42
  %189 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %187, float noundef %185, float noundef 0x3F83B29960000000) #7, !dbg !42
  %190 = fadd float %188, -1.000000e+00, !dbg !42
  %191 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %189, float noundef %185, float noundef 0x3FAC6AECC0000000) #7, !dbg !42
  %192 = fneg float %190, !dbg !42
  %193 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %185, float noundef 5.000000e-01, float noundef %192) #7, !dbg !42
  %194 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %191, float noundef %185, float noundef 0x3FCEBFBE20000000) #7, !dbg !42
  %195 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %194, float noundef %185, float noundef 0x3FC8B90C40000000) #7, !dbg !42
  %196 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %195, float noundef %185, float noundef %193) #7, !dbg !42
  %197 = fadd float %188, %196, !dbg !42
  %198 = add i32 %186, -127, !dbg !42
  %199 = icmp ult i32 %198, -252, !dbg !42
  br i1 %199, label %205, label %200, !dbg !42

200:                                              ; preds = %__devicelib_imf_exp2f.exit6
  %201 = bitcast float %197 to i32, !dbg !42
  %202 = shl nsw i32 %186, 23, !dbg !42
  %203 = add i32 %202, %201, !dbg !42
  %204 = bitcast i32 %203 to float, !dbg !42
  br label %__devicelib_imf_exp2f.exit5, !dbg !42

205:                                              ; preds = %__devicelib_imf_exp2f.exit6
  %206 = tail call float @llvm.fabs.f32(float %136), !dbg !42
  %207 = bitcast float %206 to i32, !dbg !42
  %208 = icmp samesign ugt i32 %207, 2139095039, !dbg !42
  br i1 %208, label %209, label %213, !dbg !42

209:                                              ; preds = %205
  %210 = fcmp oeq float %136, 0xFFF0000000000000, !dbg !42
  %211 = fadd float %136, %136, !dbg !42
  %212 = select i1 %210, float 0.000000e+00, float %211, !dbg !42
  br label %__devicelib_imf_exp2f.exit5, !dbg !42

213:                                              ; preds = %205
  %214 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %136, float noundef 1.920000e+02) #7, !dbg !42
  %215 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %214, float noundef -1.920000e+02) #7, !dbg !42
  %216 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %215) #7, !dbg !42
  %217 = fptosi float %216 to i32, !dbg !42
  %218 = ashr i32 %217, 1, !dbg !42
  %219 = sub nsw i32 %217, %218, !dbg !42
  %220 = shl i32 %219, 23, !dbg !42
  %221 = add i32 %220, 1065353216, !dbg !42
  %222 = shl i32 %218, 23, !dbg !42
  %223 = add i32 %222, 1065353216, !dbg !42
  %224 = bitcast i32 %221 to float, !dbg !42
  %225 = fmul float %197, %224, !dbg !42
  %226 = bitcast i32 %223 to float, !dbg !42
  %227 = fmul float %225, %226, !dbg !42
  br label %__devicelib_imf_exp2f.exit5, !dbg !42

__devicelib_imf_exp2f.exit5:                      ; preds = %200, %209, %213
  %228 = phi float [ %227, %213 ], [ %204, %200 ], [ %212, %209 ], !dbg !42
  %229 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %137) #7, !dbg !42
  %230 = fsub float %137, %229, !dbg !42
  %231 = fptosi float %229 to i32, !dbg !42
  %232 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %230, float noundef 0x3F55F48C60000000) #7, !dbg !42
  %233 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %230, float noundef 5.000000e-01, float noundef 1.000000e+00) #7, !dbg !42
  %234 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %232, float noundef %230, float noundef 0x3F83B29960000000) #7, !dbg !42
  %235 = fadd float %233, -1.000000e+00, !dbg !42
  %236 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %234, float noundef %230, float noundef 0x3FAC6AECC0000000) #7, !dbg !42
  %237 = fneg float %235, !dbg !42
  %238 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %230, float noundef 5.000000e-01, float noundef %237) #7, !dbg !42
  %239 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %236, float noundef %230, float noundef 0x3FCEBFBE20000000) #7, !dbg !42
  %240 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %239, float noundef %230, float noundef 0x3FC8B90C40000000) #7, !dbg !42
  %241 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %240, float noundef %230, float noundef %238) #7, !dbg !42
  %242 = fadd float %233, %241, !dbg !42
  %243 = add i32 %231, -127, !dbg !42
  %244 = icmp ult i32 %243, -252, !dbg !42
  br i1 %244, label %250, label %245, !dbg !42

245:                                              ; preds = %__devicelib_imf_exp2f.exit5
  %246 = bitcast float %242 to i32, !dbg !42
  %247 = shl nsw i32 %231, 23, !dbg !42
  %248 = add i32 %247, %246, !dbg !42
  %249 = bitcast i32 %248 to float, !dbg !42
  br label %__devicelib_imf_exp2f.exit4, !dbg !42

250:                                              ; preds = %__devicelib_imf_exp2f.exit5
  %251 = tail call float @llvm.fabs.f32(float %137), !dbg !42
  %252 = bitcast float %251 to i32, !dbg !42
  %253 = icmp samesign ugt i32 %252, 2139095039, !dbg !42
  br i1 %253, label %254, label %258, !dbg !42

254:                                              ; preds = %250
  %255 = fcmp oeq float %137, 0xFFF0000000000000, !dbg !42
  %256 = fadd float %137, %137, !dbg !42
  %257 = select i1 %255, float 0.000000e+00, float %256, !dbg !42
  br label %__devicelib_imf_exp2f.exit4, !dbg !42

258:                                              ; preds = %250
  %259 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %137, float noundef 1.920000e+02) #7, !dbg !42
  %260 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %259, float noundef -1.920000e+02) #7, !dbg !42
  %261 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %260) #7, !dbg !42
  %262 = fptosi float %261 to i32, !dbg !42
  %263 = ashr i32 %262, 1, !dbg !42
  %264 = sub nsw i32 %262, %263, !dbg !42
  %265 = shl i32 %264, 23, !dbg !42
  %266 = add i32 %265, 1065353216, !dbg !42
  %267 = shl i32 %263, 23, !dbg !42
  %268 = add i32 %267, 1065353216, !dbg !42
  %269 = bitcast i32 %266 to float, !dbg !42
  %270 = fmul float %242, %269, !dbg !42
  %271 = bitcast i32 %268 to float, !dbg !42
  %272 = fmul float %270, %271, !dbg !42
  br label %__devicelib_imf_exp2f.exit4, !dbg !42

__devicelib_imf_exp2f.exit4:                      ; preds = %245, %254, %258
  %273 = phi float [ %272, %258 ], [ %249, %245 ], [ %257, %254 ], !dbg !42
  %274 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %138) #7, !dbg !42
  %275 = fsub float %138, %274, !dbg !42
  %276 = fptosi float %274 to i32, !dbg !42
  %277 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef 0x3F24499000000000, float noundef %275, float noundef 0x3F55F48C60000000) #7, !dbg !42
  %278 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %275, float noundef 5.000000e-01, float noundef 1.000000e+00) #7, !dbg !42
  %279 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %277, float noundef %275, float noundef 0x3F83B29960000000) #7, !dbg !42
  %280 = fadd float %278, -1.000000e+00, !dbg !42
  %281 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %279, float noundef %275, float noundef 0x3FAC6AECC0000000) #7, !dbg !42
  %282 = fneg float %280, !dbg !42
  %283 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %275, float noundef 5.000000e-01, float noundef %282) #7, !dbg !42
  %284 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %281, float noundef %275, float noundef 0x3FCEBFBE20000000) #7, !dbg !42
  %285 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %284, float noundef %275, float noundef 0x3FC8B90C40000000) #7, !dbg !42
  %286 = tail call spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef %285, float noundef %275, float noundef %283) #7, !dbg !42
  %287 = fadd float %278, %286, !dbg !42
  %288 = add i32 %276, -127, !dbg !42
  %289 = icmp ult i32 %288, -252, !dbg !42
  br i1 %289, label %295, label %290, !dbg !42

290:                                              ; preds = %__devicelib_imf_exp2f.exit4
  %291 = bitcast float %287 to i32, !dbg !42
  %292 = shl nsw i32 %276, 23, !dbg !42
  %293 = add i32 %292, %291, !dbg !42
  %294 = bitcast i32 %293 to float, !dbg !42
  br label %__devicelib_imf_exp2f.exit, !dbg !42

295:                                              ; preds = %__devicelib_imf_exp2f.exit4
  %296 = tail call float @llvm.fabs.f32(float %138), !dbg !42
  %297 = bitcast float %296 to i32, !dbg !42
  %298 = icmp samesign ugt i32 %297, 2139095039, !dbg !42
  br i1 %298, label %299, label %303, !dbg !42

299:                                              ; preds = %295
  %300 = fcmp oeq float %138, 0xFFF0000000000000, !dbg !42
  %301 = fadd float %138, %138, !dbg !42
  %302 = select i1 %300, float 0.000000e+00, float %301, !dbg !42
  br label %__devicelib_imf_exp2f.exit, !dbg !42

303:                                              ; preds = %295
  %304 = tail call spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef %138, float noundef 1.920000e+02) #7, !dbg !42
  %305 = tail call spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef %304, float noundef -1.920000e+02) #7, !dbg !42
  %306 = tail call spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef %305) #7, !dbg !42
  %307 = fptosi float %306 to i32, !dbg !42
  %308 = ashr i32 %307, 1, !dbg !42
  %309 = sub nsw i32 %307, %308, !dbg !42
  %310 = shl i32 %309, 23, !dbg !42
  %311 = add i32 %310, 1065353216, !dbg !42
  %312 = shl i32 %308, 23, !dbg !42
  %313 = add i32 %312, 1065353216, !dbg !42
  %314 = bitcast i32 %311 to float, !dbg !42
  %315 = fmul float %287, %314, !dbg !42
  %316 = bitcast i32 %313 to float, !dbg !42
  %317 = fmul float %315, %316, !dbg !42
  br label %__devicelib_imf_exp2f.exit, !dbg !42

__devicelib_imf_exp2f.exit:                       ; preds = %290, %299, %303
  %318 = phi float [ %317, %303 ], [ %294, %290 ], [ %302, %299 ], !dbg !42
  %319 = fmul float %70, %183, !dbg !43
  %320 = fmul float %75, %228, !dbg !43
  %321 = fmul float %80, %273, !dbg !43
  %322 = fmul float %85, %318, !dbg !43
  %323 = select i1 %27, float %319, float 0.000000e+00, !dbg !44
  %324 = select i1 %27, float %320, float 0.000000e+00, !dbg !44
  %325 = select i1 %27, float %321, float 0.000000e+00, !dbg !44
  %326 = select i1 %27, float %322, float 0.000000e+00, !dbg !44
  %327 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %323, i32 16) #6, !dbg !45
  %328 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %324, i32 16) #6, !dbg !45
  %329 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %325, i32 16) #6, !dbg !45
  %330 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %326, i32 16) #6, !dbg !45
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !49
  %331 = zext nneg i32 %17 to i64, !dbg !49
  %332 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %331, !dbg !49
  %333 = insertelement <1 x float> poison, float %327, i64 0, !dbg !49
  store <1 x float> %333, ptr addrspace(3) %332, align 4, !dbg !49
  %334 = getelementptr inbounds nuw i8, ptr addrspace(3) %332, i64 32, !dbg !49
  %335 = insertelement <1 x float> poison, float %328, i64 0, !dbg !49
  store <1 x float> %335, ptr addrspace(3) %334, align 4, !dbg !49
  %336 = getelementptr inbounds nuw i8, ptr addrspace(3) %332, i64 64, !dbg !49
  %337 = insertelement <1 x float> poison, float %329, i64 0, !dbg !49
  store <1 x float> %337, ptr addrspace(3) %336, align 4, !dbg !49
  %338 = getelementptr inbounds nuw i8, ptr addrspace(3) %332, i64 96, !dbg !49
  %339 = insertelement <1 x float> poison, float %330, i64 0, !dbg !49
  store <1 x float> %339, ptr addrspace(3) %338, align 4, !dbg !49
  tail call spir_func void @_Z7barrierj(i32 1) #6, !dbg !49
  %340 = and i32 %14, 96, !dbg !49
  %341 = icmp eq i32 %340, 0, !dbg !49
  br i1 %341, label %342, label %354, !dbg !49

342:                                              ; preds = %__devicelib_imf_exp2f.exit
  %343 = and i64 %13, 31, !dbg !49
  %344 = getelementptr inbounds nuw float, ptr addrspace(3) %8, i64 %343, !dbg !49
  %345 = load float, ptr addrspace(3) %344, align 4, !dbg !49
  %346 = fcmp oeq float %96, 0xFFF0000000000000, !dbg !39
  %347 = extractelement <1 x float> %126, i64 0, !dbg !38
  %348 = select i1 %346, float 1.000000e+00, float %347, !dbg !50
  %349 = fdiv float %345, %348, !dbg !51
  %350 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %349) #5
  %351 = insertelement <1 x i16> poison, i16 %350, i64 0, !dbg !49
  %352 = sext i32 %18 to i64, !dbg !52
  %353 = getelementptr bfloat, ptr addrspace(1) %4, i64 %352, !dbg !52
  store <1 x i16> %351, ptr addrspace(1) %353, align 2, !dbg !49
  br label %354, !dbg !49

354:                                              ; preds = %342, %__devicelib_imf_exp2f.exit
  ret void, !dbg !53
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_rintf(float noundef) local_unnamed_addr #3

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z15__spirv_ocl_fmafff(float noundef, float noundef, float noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #4

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_fminff(float noundef, float noundef) local_unnamed_addr #3

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z16__spirv_ocl_fmaxff(float noundef, float noundef) local_unnamed_addr #3

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nounwind willreturn memory(none) }
attributes #6 = { convergent nounwind willreturn }
attributes #7 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cjcxabxt5vbzvoukznvtn74s7574miu7aolwxzg2dwdrymcmrbir.py", directory: "/tmp/torchinductor_jovyan/jc")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7", linkageName: "triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_7", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!17 = !{i32 32}
!18 = !{i64 128, i64 1, i64 1}
!19 = !DILocation(line: 24, column: 28, scope: !16)
!20 = !DILocation(line: 24, column: 33, scope: !16)
!21 = !DILocation(line: 25, column: 44, scope: !16)
!22 = !DILocation(line: 25, column: 23, scope: !16)
!23 = !DILocation(line: 27, column: 38, scope: !16)
!24 = !DILocation(line: 29, column: 25, scope: !16)
!25 = !DILocation(line: 34, column: 19, scope: !16)
!26 = !DILocation(line: 0, scope: !16)
!27 = !DILocation(line: 35, column: 47, scope: !16)
!28 = !DILocation(line: 35, column: 40, scope: !16)
!29 = !DILocation(line: 35, column: 35, scope: !16)
!30 = !DILocation(line: 35, column: 30, scope: !16)
!31 = !DILocation(line: 36, column: 30, scope: !16)
!32 = !DILocation(line: 36, column: 35, scope: !16)
!33 = !DILocation(line: 37, column: 45, scope: !16)
!34 = !DILocation(line: 37, column: 38, scope: !16)
!35 = !DILocation(line: 37, column: 35, scope: !16)
!36 = !DILocation(line: 37, column: 30, scope: !16)
!37 = !DILocation(line: 38, column: 31, scope: !16)
!38 = !DILocation(line: 38, column: 36, scope: !16)
!39 = !DILocation(line: 40, column: 19, scope: !16)
!40 = !DILocation(line: 41, column: 18, scope: !16)
!41 = !DILocation(line: 43, column: 32, scope: !16)
!42 = !DILocation(line: 44, column: 26, scope: !16)
!43 = !DILocation(line: 45, column: 18, scope: !16)
!44 = !DILocation(line: 47, column: 37, scope: !16)
!45 = !DILocation(line: 290, column: 36, scope: !46, inlinedAt: !48)
!46 = distinct !DILexicalBlockFile(scope: !16, file: !47, discriminator: 0)
!47 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!48 = !DILocation(line: 48, column: 26, scope: !16)
!49 = !DILocation(line: 53, column: 37, scope: !16)
!50 = !DILocation(line: 50, column: 34, scope: !16)
!51 = !DILocation(line: 51, column: 21, scope: !16)
!52 = !DILocation(line: 53, column: 25, scope: !16)
!53 = !DILocation(line: 53, column: 4, scope: !16)
