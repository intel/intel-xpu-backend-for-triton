; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !17 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11(ptr addrspace(1) captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, ptr addrspace(1) readonly captures(none) %5, double %6, ptr addrspace(1) writeonly captures(none) %7, i32 %8, i32 %9, ptr addrspace(1) readnone captures(none) %10, ptr addrspace(3) captures(none) %11) local_unnamed_addr #2 !dbg !18 !intel_reqd_sub_group_size !19 !max_work_group_size !20 {
  %13 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #4, !dbg !21
  %14 = trunc i64 %13 to i32, !dbg !21
  %15 = icmp sgt i32 %8, %14, !dbg !22
  %16 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !23
  %17 = trunc i64 %16 to i32, !dbg !23
  %18 = shl i32 %17, 2, !dbg !23
  %19 = and i32 %18, 2044, !dbg !23
  %20 = shl i32 %14, 12, !dbg !24
  %21 = or disjoint i32 %19, %20
  %22 = sext i32 %21 to i64, !dbg !25
  %23 = getelementptr bfloat, ptr addrspace(1) %0, i64 %22, !dbg !26
  br i1 %15, label %24, label %26, !dbg !27

24:                                               ; preds = %12
  %25 = load <4 x i16>, ptr addrspace(1) %23, align 8, !dbg !27
  br label %26, !dbg !27

26:                                               ; preds = %24, %12
  %bc13 = phi <4 x i16> [ %25, %24 ], [ zeroinitializer, %12 ], !dbg !27
  %27 = extractelement <4 x i16> %bc13, i64 0, !dbg !28
  %28 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %27) #4
  %29 = extractelement <4 x i16> %bc13, i64 1, !dbg !28
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = extractelement <4 x i16> %bc13, i64 2, !dbg !28
  %32 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %31) #4
  %33 = extractelement <4 x i16> %bc13, i64 3, !dbg !28
  %34 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %33) #4
  br i1 %15, label %35, label %38, !dbg !29

35:                                               ; preds = %26
  %36 = getelementptr bfloat, ptr addrspace(1) %1, i64 %22, !dbg !30
  %37 = load <4 x i16>, ptr addrspace(1) %36, align 8, !dbg !29
  br label %38, !dbg !29

38:                                               ; preds = %35, %26
  %bc17 = phi <4 x i16> [ %37, %35 ], [ zeroinitializer, %26 ], !dbg !29
  %39 = extractelement <4 x i16> %bc17, i64 0, !dbg !31
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #4
  %41 = extractelement <4 x i16> %bc17, i64 1, !dbg !31
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #4
  %43 = extractelement <4 x i16> %bc17, i64 2, !dbg !31
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #4
  %45 = extractelement <4 x i16> %bc17, i64 3, !dbg !31
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #4
  br i1 %15, label %47, label %50, !dbg !32

47:                                               ; preds = %38
  %48 = getelementptr bfloat, ptr addrspace(1) %2, i64 %22, !dbg !33
  %49 = load <4 x i16>, ptr addrspace(1) %48, align 8, !dbg !32
  br label %50, !dbg !32

50:                                               ; preds = %47, %38
  %bc21 = phi <4 x i16> [ %49, %47 ], [ zeroinitializer, %38 ], !dbg !32
  %51 = extractelement <4 x i16> %bc21, i64 0, !dbg !34
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #4
  %53 = extractelement <4 x i16> %bc21, i64 1, !dbg !34
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #4
  %55 = extractelement <4 x i16> %bc21, i64 2, !dbg !34
  %56 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %55) #4
  %57 = extractelement <4 x i16> %bc21, i64 3, !dbg !34
  %58 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %57) #4
  br i1 %15, label %59, label %62, !dbg !35

59:                                               ; preds = %50
  %60 = getelementptr bfloat, ptr addrspace(1) %3, i64 %22, !dbg !36
  %61 = load <4 x i16>, ptr addrspace(1) %60, align 8, !dbg !35
  br label %62, !dbg !35

62:                                               ; preds = %59, %50
  %bc25 = phi <4 x i16> [ %61, %59 ], [ zeroinitializer, %50 ], !dbg !35
  %63 = extractelement <4 x i16> %bc25, i64 0, !dbg !37
  %64 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %63) #4
  %65 = extractelement <4 x i16> %bc25, i64 1, !dbg !37
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #4
  %67 = extractelement <4 x i16> %bc25, i64 2, !dbg !37
  %68 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %67) #4
  %69 = extractelement <4 x i16> %bc25, i64 3, !dbg !37
  %70 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %69) #4
  br i1 %15, label %71, label %74, !dbg !38

71:                                               ; preds = %62
  %72 = getelementptr bfloat, ptr addrspace(1) %4, i64 %22, !dbg !39
  %73 = load <4 x i16>, ptr addrspace(1) %72, align 8, !dbg !38
  br label %74, !dbg !38

74:                                               ; preds = %71, %62
  %bc29 = phi <4 x i16> [ %73, %71 ], [ zeroinitializer, %62 ], !dbg !38
  %75 = extractelement <4 x i16> %bc29, i64 0, !dbg !40
  %76 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %75) #4
  %77 = extractelement <4 x i16> %bc29, i64 1, !dbg !40
  %78 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %77) #4
  %79 = extractelement <4 x i16> %bc29, i64 2, !dbg !40
  %80 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %79) #4
  %81 = extractelement <4 x i16> %bc29, i64 3, !dbg !40
  %82 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %81) #4
  %83 = fadd float %28, %40, !dbg !41
  %84 = fadd float %30, %42, !dbg !41
  %85 = fadd float %32, %44, !dbg !41
  %86 = fadd float %34, %46, !dbg !41
  %87 = fadd float %83, %52, !dbg !42
  %88 = fadd float %84, %54, !dbg !42
  %89 = fadd float %85, %56, !dbg !42
  %90 = fadd float %86, %58, !dbg !42
  %91 = fadd float %87, %64, !dbg !43
  %92 = fadd float %88, %66, !dbg !43
  %93 = fadd float %89, %68, !dbg !43
  %94 = fadd float %90, %70, !dbg !43
  %95 = fadd float %91, %76, !dbg !44
  %96 = fadd float %92, %78, !dbg !44
  %97 = fadd float %93, %80, !dbg !44
  %98 = fadd float %94, %82, !dbg !44
  %99 = fmul float %95, %95, !dbg !45
  %100 = fmul float %96, %96, !dbg !45
  %101 = fmul float %97, %97, !dbg !45
  %102 = fmul float %98, %98, !dbg !45
  br i1 %15, label %106, label %103, !dbg !46

103:                                              ; preds = %74
  %104 = or disjoint i64 %22, 2048, !dbg !47
  %105 = getelementptr bfloat, ptr addrspace(1) %0, i64 %104, !dbg !26
  br label %122, !dbg !27

106:                                              ; preds = %74
  %107 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %95) #4
  %108 = insertelement <2 x i16> poison, i16 %107, i64 0, !dbg !46
  %109 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %96) #4
  %110 = insertelement <2 x i16> %108, i16 %109, i64 1, !dbg !46
  %111 = bitcast <2 x i16> %110 to i32, !dbg !46
  %112 = insertelement <2 x i32> poison, i32 %111, i64 0, !dbg !46
  %113 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %97) #4
  %114 = insertelement <2 x i16> poison, i16 %113, i64 0, !dbg !46
  %115 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %98) #4
  %116 = insertelement <2 x i16> %114, i16 %115, i64 1, !dbg !46
  %117 = bitcast <2 x i16> %116 to i32, !dbg !46
  %118 = insertelement <2 x i32> %112, i32 %117, i64 1, !dbg !46
  store <2 x i32> %118, ptr addrspace(1) %23, align 8, !dbg !46
  %119 = or disjoint i64 %22, 2048, !dbg !47
  %120 = getelementptr bfloat, ptr addrspace(1) %0, i64 %119, !dbg !26
  %121 = load <4 x i16>, ptr addrspace(1) %120, align 8, !dbg !27
  br label %122, !dbg !27

122:                                              ; preds = %103, %106
  %123 = phi ptr addrspace(1) [ %120, %106 ], [ %105, %103 ]
  %124 = phi i64 [ %119, %106 ], [ %104, %103 ]
  %bc13.1 = phi <4 x i16> [ %121, %106 ], [ zeroinitializer, %103 ], !dbg !27
  %125 = extractelement <4 x i16> %bc13.1, i64 0, !dbg !28
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = extractelement <4 x i16> %bc13.1, i64 1, !dbg !28
  %128 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %127) #4
  %129 = extractelement <4 x i16> %bc13.1, i64 2, !dbg !28
  %130 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %129) #4
  %131 = extractelement <4 x i16> %bc13.1, i64 3, !dbg !28
  %132 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %131) #4
  br i1 %15, label %133, label %136, !dbg !29

133:                                              ; preds = %122
  %134 = getelementptr bfloat, ptr addrspace(1) %1, i64 %124, !dbg !30
  %135 = load <4 x i16>, ptr addrspace(1) %134, align 8, !dbg !29
  br label %136, !dbg !29

136:                                              ; preds = %133, %122
  %bc17.1 = phi <4 x i16> [ %135, %133 ], [ zeroinitializer, %122 ], !dbg !29
  %137 = extractelement <4 x i16> %bc17.1, i64 0, !dbg !31
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #4
  %139 = extractelement <4 x i16> %bc17.1, i64 1, !dbg !31
  %140 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %139) #4
  %141 = extractelement <4 x i16> %bc17.1, i64 2, !dbg !31
  %142 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %141) #4
  %143 = extractelement <4 x i16> %bc17.1, i64 3, !dbg !31
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #4
  br i1 %15, label %145, label %148, !dbg !32

145:                                              ; preds = %136
  %146 = getelementptr bfloat, ptr addrspace(1) %2, i64 %124, !dbg !33
  %147 = load <4 x i16>, ptr addrspace(1) %146, align 8, !dbg !32
  br label %148, !dbg !32

148:                                              ; preds = %145, %136
  %bc21.1 = phi <4 x i16> [ %147, %145 ], [ zeroinitializer, %136 ], !dbg !32
  %149 = extractelement <4 x i16> %bc21.1, i64 0, !dbg !34
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = extractelement <4 x i16> %bc21.1, i64 1, !dbg !34
  %152 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %151) #4
  %153 = extractelement <4 x i16> %bc21.1, i64 2, !dbg !34
  %154 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %153) #4
  %155 = extractelement <4 x i16> %bc21.1, i64 3, !dbg !34
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  br i1 %15, label %157, label %160, !dbg !35

157:                                              ; preds = %148
  %158 = getelementptr bfloat, ptr addrspace(1) %3, i64 %124, !dbg !36
  %159 = load <4 x i16>, ptr addrspace(1) %158, align 8, !dbg !35
  br label %160, !dbg !35

160:                                              ; preds = %157, %148
  %bc25.1 = phi <4 x i16> [ %159, %157 ], [ zeroinitializer, %148 ], !dbg !35
  %161 = extractelement <4 x i16> %bc25.1, i64 0, !dbg !37
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = extractelement <4 x i16> %bc25.1, i64 1, !dbg !37
  %164 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %163) #4
  %165 = extractelement <4 x i16> %bc25.1, i64 2, !dbg !37
  %166 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %165) #4
  %167 = extractelement <4 x i16> %bc25.1, i64 3, !dbg !37
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #4
  br i1 %15, label %169, label %172, !dbg !38

169:                                              ; preds = %160
  %170 = getelementptr bfloat, ptr addrspace(1) %4, i64 %124, !dbg !39
  %171 = load <4 x i16>, ptr addrspace(1) %170, align 8, !dbg !38
  br label %172, !dbg !38

172:                                              ; preds = %169, %160
  %bc29.1 = phi <4 x i16> [ %171, %169 ], [ zeroinitializer, %160 ], !dbg !38
  %173 = extractelement <4 x i16> %bc29.1, i64 0, !dbg !40
  %174 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %173) #4
  %175 = extractelement <4 x i16> %bc29.1, i64 1, !dbg !40
  %176 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %175) #4
  %177 = extractelement <4 x i16> %bc29.1, i64 2, !dbg !40
  %178 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %177) #4
  %179 = extractelement <4 x i16> %bc29.1, i64 3, !dbg !40
  %180 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %179) #4
  %181 = fadd float %126, %138, !dbg !41
  %182 = fadd float %128, %140, !dbg !41
  %183 = fadd float %130, %142, !dbg !41
  %184 = fadd float %132, %144, !dbg !41
  %185 = fadd float %181, %150, !dbg !42
  %186 = fadd float %182, %152, !dbg !42
  %187 = fadd float %183, %154, !dbg !42
  %188 = fadd float %184, %156, !dbg !42
  %189 = fadd float %185, %162, !dbg !43
  %190 = fadd float %186, %164, !dbg !43
  %191 = fadd float %187, %166, !dbg !43
  %192 = fadd float %188, %168, !dbg !43
  %193 = fadd float %189, %174, !dbg !44
  %194 = fadd float %190, %176, !dbg !44
  %195 = fadd float %191, %178, !dbg !44
  %196 = fadd float %192, %180, !dbg !44
  %197 = fmul float %193, %193, !dbg !45
  %198 = fmul float %194, %194, !dbg !45
  %199 = fmul float %195, %195, !dbg !45
  %200 = fmul float %196, %196, !dbg !45
  %201 = fadd float %99, %197, !dbg !48
  %202 = fadd float %100, %198, !dbg !48
  %203 = fadd float %101, %199, !dbg !48
  %204 = fadd float %102, %200, !dbg !48
  br i1 %15, label %205, label %218, !dbg !46

205:                                              ; preds = %172
  %206 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %193) #4
  %207 = insertelement <2 x i16> poison, i16 %206, i64 0, !dbg !46
  %208 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %194) #4
  %209 = insertelement <2 x i16> %207, i16 %208, i64 1, !dbg !46
  %210 = bitcast <2 x i16> %209 to i32, !dbg !46
  %211 = insertelement <2 x i32> poison, i32 %210, i64 0, !dbg !46
  %212 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %195) #4
  %213 = insertelement <2 x i16> poison, i16 %212, i64 0, !dbg !46
  %214 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %196) #4
  %215 = insertelement <2 x i16> %213, i16 %214, i64 1, !dbg !46
  %216 = bitcast <2 x i16> %215 to i32, !dbg !46
  %217 = insertelement <2 x i32> %211, i32 %216, i64 1, !dbg !46
  store <2 x i32> %217, ptr addrspace(1) %123, align 8, !dbg !46
  br label %218, !dbg !46

218:                                              ; preds = %205, %172
  %219 = and i32 %17, 511, !dbg !23
  %220 = and i32 %17, 31, !dbg !23
  %221 = fadd float %201, %202, !dbg !49
  %222 = fadd float %203, %221, !dbg !49
  %223 = fadd float %204, %222, !dbg !49
  %224 = select i1 %15, float %223, float 0.000000e+00, !dbg !49
  %225 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %224) #5, !dbg !53
  %226 = icmp eq i32 %220, 0, !dbg !53
  br i1 %226, label %227, label %231, !dbg !53

227:                                              ; preds = %218
  %228 = lshr exact i32 %219, 5, !dbg !23
  %229 = zext nneg i32 %228 to i64, !dbg !53
  %230 = getelementptr float, ptr addrspace(3) %11, i64 %229, !dbg !53
  store float %225, ptr addrspace(3) %230, align 4, !dbg !53
  br label %231, !dbg !53

231:                                              ; preds = %227, %218
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !53
  %232 = icmp samesign ult i32 %219, 16, !dbg !53
  %233 = and i64 %16, 511, !dbg !53
  %234 = getelementptr float, ptr addrspace(3) %11, i64 %233, !dbg !53
  br i1 %232, label %235, label %237, !dbg !53

235:                                              ; preds = %231
  %236 = load float, ptr addrspace(3) %234, align 4, !dbg !53
  br label %237, !dbg !53

237:                                              ; preds = %235, %231
  %238 = phi float [ %236, %235 ], [ undef, %231 ], !dbg !52
  %239 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %238, i32 16) #5, !dbg !53
  %240 = and i32 %17, 15, !dbg !53
  %241 = icmp eq i32 %240, 0, !dbg !53
  %242 = and i1 %232, %241, !dbg !53
  br i1 %242, label %243, label %244, !dbg !53

243:                                              ; preds = %237
  store float %239, ptr addrspace(3) %234, align 4, !dbg !53
  br label %244, !dbg !53

244:                                              ; preds = %243, %237
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !53
  %245 = load float, ptr addrspace(3) %11, align 4, !dbg !53
  %246 = fmul float %245, 0x3F30000000000000, !dbg !54
  %247 = fptrunc double %6 to float, !dbg !55
  %248 = fadd float %246, %247, !dbg !56
  %249 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %248) #6, !dbg !57
  br i1 %15, label %.split.us.preheader, label %.split33.us

.split.us.preheader:                              ; preds = %244
  %250 = zext nneg i32 %19 to i64, !dbg !58
  %251 = getelementptr bfloat, ptr addrspace(1) %5, i64 %250, !dbg !59
  %252 = getelementptr inbounds nuw i8, ptr addrspace(1) %251, i64 6, !dbg !60
  %253 = load i16, ptr addrspace(1) %252, align 2, !dbg !60
  %254 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %253) #4
  %255 = getelementptr inbounds nuw i8, ptr addrspace(1) %251, i64 4, !dbg !60
  %256 = load i16, ptr addrspace(1) %255, align 4, !dbg !60
  %257 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %256) #4
  %258 = getelementptr inbounds nuw i8, ptr addrspace(1) %251, i64 2, !dbg !60
  %259 = load i16, ptr addrspace(1) %258, align 2, !dbg !60
  %260 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %259) #4
  %261 = load i16, ptr addrspace(1) %251, align 8, !dbg !60
  %262 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %261) #4
  %263 = load i16, ptr addrspace(1) %23, align 8, !dbg !61
  %264 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %263) #4
  %265 = fmul float %249, %264, !dbg !62
  %266 = fmul float %262, %265, !dbg !63
  %267 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %266) #4
  %268 = insertelement <2 x i16> poison, i16 %267, i64 0, !dbg !64
  %269 = getelementptr inbounds nuw i8, ptr addrspace(1) %23, i64 2, !dbg !61
  %270 = load i16, ptr addrspace(1) %269, align 2, !dbg !61
  %271 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %270) #4
  %272 = fmul float %249, %271, !dbg !62
  %273 = fmul float %260, %272, !dbg !63
  %274 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %273) #4
  %275 = insertelement <2 x i16> %268, i16 %274, i64 1, !dbg !64
  %276 = bitcast <2 x i16> %275 to i32, !dbg !64
  %277 = insertelement <2 x i32> poison, i32 %276, i64 0, !dbg !64
  %278 = getelementptr inbounds nuw i8, ptr addrspace(1) %23, i64 4, !dbg !61
  %279 = load i16, ptr addrspace(1) %278, align 4, !dbg !61
  %280 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %279) #4
  %281 = fmul float %249, %280, !dbg !62
  %282 = fmul float %257, %281, !dbg !63
  %283 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %282) #4
  %284 = insertelement <2 x i16> poison, i16 %283, i64 0, !dbg !64
  %285 = getelementptr inbounds nuw i8, ptr addrspace(1) %23, i64 6, !dbg !61
  %286 = load i16, ptr addrspace(1) %285, align 2, !dbg !61
  %287 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %286) #4
  %288 = fmul float %249, %287, !dbg !62
  %289 = fmul float %254, %288, !dbg !63
  %290 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %289) #4
  %291 = insertelement <2 x i16> %284, i16 %290, i64 1, !dbg !64
  %292 = bitcast <2 x i16> %291 to i32, !dbg !64
  %293 = insertelement <2 x i32> %277, i32 %292, i64 1, !dbg !64
  %294 = getelementptr bfloat, ptr addrspace(1) %7, i64 %22, !dbg !65
  store <2 x i32> %293, ptr addrspace(1) %294, align 8, !dbg !64
  %295 = getelementptr bfloat, ptr addrspace(1) %5, i64 %250, !dbg !59
  %296 = getelementptr i8, ptr addrspace(1) %295, i64 4096, !dbg !59
  %297 = getelementptr i8, ptr addrspace(1) %295, i64 4102, !dbg !60
  %298 = load i16, ptr addrspace(1) %297, align 2, !dbg !60
  %299 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %298) #4
  %300 = getelementptr i8, ptr addrspace(1) %295, i64 4100, !dbg !60
  %301 = load i16, ptr addrspace(1) %300, align 4, !dbg !60
  %302 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %301) #4
  %303 = getelementptr i8, ptr addrspace(1) %295, i64 4098, !dbg !60
  %304 = load i16, ptr addrspace(1) %303, align 2, !dbg !60
  %305 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %304) #4
  %306 = load i16, ptr addrspace(1) %296, align 8, !dbg !60
  %307 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %306) #4
  %308 = load i16, ptr addrspace(1) %123, align 8, !dbg !61
  %309 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %308) #4
  %310 = fmul float %249, %309, !dbg !62
  %311 = fmul float %307, %310, !dbg !63
  %312 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %311) #4
  %313 = insertelement <2 x i16> poison, i16 %312, i64 0, !dbg !64
  %314 = getelementptr inbounds nuw i8, ptr addrspace(1) %123, i64 2, !dbg !61
  %315 = load i16, ptr addrspace(1) %314, align 2, !dbg !61
  %316 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %315) #4
  %317 = fmul float %249, %316, !dbg !62
  %318 = fmul float %305, %317, !dbg !63
  %319 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %318) #4
  %320 = insertelement <2 x i16> %313, i16 %319, i64 1, !dbg !64
  %321 = bitcast <2 x i16> %320 to i32, !dbg !64
  %322 = insertelement <2 x i32> poison, i32 %321, i64 0, !dbg !64
  %323 = getelementptr inbounds nuw i8, ptr addrspace(1) %123, i64 4, !dbg !61
  %324 = load i16, ptr addrspace(1) %323, align 4, !dbg !61
  %325 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %324) #4
  %326 = fmul float %249, %325, !dbg !62
  %327 = fmul float %302, %326, !dbg !63
  %328 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %327) #4
  %329 = insertelement <2 x i16> poison, i16 %328, i64 0, !dbg !64
  %330 = getelementptr inbounds nuw i8, ptr addrspace(1) %123, i64 6, !dbg !61
  %331 = load i16, ptr addrspace(1) %330, align 2, !dbg !61
  %332 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %331) #4
  %333 = fmul float %249, %332, !dbg !62
  %334 = fmul float %299, %333, !dbg !63
  %335 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %334) #4
  %336 = insertelement <2 x i16> %329, i16 %335, i64 1, !dbg !64
  %337 = bitcast <2 x i16> %336 to i32, !dbg !64
  %338 = insertelement <2 x i32> %322, i32 %337, i64 1, !dbg !64
  %339 = getelementptr bfloat, ptr addrspace(1) %7, i64 %124, !dbg !65
  store <2 x i32> %338, ptr addrspace(1) %339, align 8, !dbg !64
  br label %.split33.us, !dbg !66

.split33.us:                                      ; preds = %244, %.split.us.preheader
  ret void, !dbg !66
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c2vtk24cvkldy7p5uve3fzerglyrj4skllcrngsdc4mq3qstdsyi.py", directory: "/tmp/torchinductor_jovyan/2v")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!18 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_11", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !{i32 32}
!20 = !{i64 512, i64 1, i64 1}
!21 = !DILocation(line: 22, column: 28, scope: !18)
!22 = !DILocation(line: 24, column: 21, scope: !18)
!23 = !DILocation(line: 25, column: 37, scope: !18)
!24 = !DILocation(line: 35, column: 50, scope: !18)
!25 = !DILocation(line: 29, column: 40, scope: !18)
!26 = !DILocation(line: 35, column: 38, scope: !18)
!27 = !DILocation(line: 35, column: 55, scope: !18)
!28 = !DILocation(line: 35, column: 117, scope: !18)
!29 = !DILocation(line: 36, column: 51, scope: !18)
!30 = !DILocation(line: 36, column: 34, scope: !18)
!31 = !DILocation(line: 36, column: 113, scope: !18)
!32 = !DILocation(line: 37, column: 51, scope: !18)
!33 = !DILocation(line: 37, column: 34, scope: !18)
!34 = !DILocation(line: 37, column: 113, scope: !18)
!35 = !DILocation(line: 38, column: 51, scope: !18)
!36 = !DILocation(line: 38, column: 34, scope: !18)
!37 = !DILocation(line: 38, column: 113, scope: !18)
!38 = !DILocation(line: 39, column: 51, scope: !18)
!39 = !DILocation(line: 39, column: 34, scope: !18)
!40 = !DILocation(line: 39, column: 113, scope: !18)
!41 = !DILocation(line: 40, column: 22, scope: !18)
!42 = !DILocation(line: 41, column: 22, scope: !18)
!43 = !DILocation(line: 42, column: 22, scope: !18)
!44 = !DILocation(line: 43, column: 22, scope: !18)
!45 = !DILocation(line: 45, column: 23, scope: !18)
!46 = !DILocation(line: 49, column: 55, scope: !18)
!47 = !DILocation(line: 35, column: 45, scope: !18)
!48 = !DILocation(line: 47, column: 25, scope: !18)
!49 = !DILocation(line: 260, column: 15, scope: !50, inlinedAt: !52)
!50 = distinct !DILexicalBlockFile(scope: !18, file: !51, discriminator: 0)
!51 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!52 = !DILocation(line: 50, column: 27, scope: !18)
!53 = !DILocation(line: 290, column: 36, scope: !50, inlinedAt: !52)
!54 = !DILocation(line: 62, column: 25, scope: !18)
!55 = !DILocation(line: 63, column: 25, scope: !18)
!56 = !DILocation(line: 64, column: 24, scope: !18)
!57 = !DILocation(line: 65, column: 32, scope: !18)
!58 = !DILocation(line: 52, column: 40, scope: !18)
!59 = !DILocation(line: 58, column: 35, scope: !18)
!60 = !DILocation(line: 58, column: 95, scope: !18)
!61 = !DILocation(line: 59, column: 118, scope: !18)
!62 = !DILocation(line: 66, column: 24, scope: !18)
!63 = !DILocation(line: 68, column: 24, scope: !18)
!64 = !DILocation(line: 69, column: 53, scope: !18)
!65 = !DILocation(line: 69, column: 29, scope: !18)
!66 = !DILocation(line: 52, column: 4, scope: !18)
