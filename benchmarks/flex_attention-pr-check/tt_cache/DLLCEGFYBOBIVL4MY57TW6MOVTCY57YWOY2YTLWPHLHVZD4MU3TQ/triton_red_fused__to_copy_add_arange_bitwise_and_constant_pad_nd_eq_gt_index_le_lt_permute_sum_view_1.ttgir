#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 4], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0)
#loc1 = loc(unknown)
#loc60 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":62:27)
#loc87 = loc(callsite(#loc1 at #loc60))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "xpu", "ttg.threads-per-warp" = 32 : i32, ttig.min_sg_size = 16 : i32, ttig.support_bf16_conversion, ttig.support_dpas, ttig.support_sg_2d_block, ttig.target_arch = "spir64"} {
  tt.func public @triton_red_fused__to_copy_add_arange_bitwise_and_constant_pad_nd_eq_gt_index_le_lt_permute_sum_view_1(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg2: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg4: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg5: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg6: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg7: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg8: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg9: i64 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg10: i32 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0), %arg11: i32 loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<64x1xi64, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x4xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x4xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x4xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<false> : tensor<64x4xi1, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<64x4xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<64x4xi1, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<64x4xi64, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<64x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<64x1xi32, #blocked1> loc(#loc5)
    %10 = tt.splat %arg10 : i32 -> tensor<64x1xi32, #blocked> loc(#loc6)
    %11 = tt.splat %arg10 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc6)
    %12 = arith.cmpi slt, %8, %10 : tensor<64x1xi32, #blocked> loc(#loc6)
    %13 = arith.cmpi slt, %9, %11 : tensor<64x1xi32, #blocked1> loc(#loc6)
    %14 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %15 = tt.expand_dims %14 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc7)
    %16 = arith.extsi %8 : tensor<64x1xi32, #blocked> to tensor<64x1xi64, #blocked> loc(#loc8)
    %17 = tt.splat %arg5 : i64 -> tensor<64x1xi64, #blocked> loc(#loc8)
    %18 = arith.divsi %16, %17 : tensor<64x1xi64, #blocked> loc(#loc8)
    %19 = arith.remsi %16, %17 : tensor<64x1xi64, #blocked> loc(#loc9)
    %20 = tt.splat %arg11 : i32 -> tensor<1x4xi32, #blocked> loc(#loc10)
    %21 = tt.splat %arg4 : i64 -> tensor<1x4xi64, #blocked> loc(#loc77)
    %22 = arith.cmpi slt, %arg4, %c0_i64 : i64 loc(#loc78)
    %23 = tt.splat %22 : i1 -> tensor<1x4xi1, #blocked> loc(#loc79)
    %24 = tt.splat %arg4 : i64 -> tensor<64x1xi64, #blocked> loc(#loc15)
    %25 = arith.muli %24, %18 : tensor<64x1xi64, #blocked> loc(#loc15)
    %26 = tt.broadcast %25 : tensor<64x1xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc16)
    %27 = tt.splat %arg6 : i64 -> tensor<64x4xi64, #blocked> loc(#loc17)
    %28 = arith.muli %24, %19 : tensor<64x1xi64, #blocked> loc(#loc18)
    %29 = tt.broadcast %28 : tensor<64x1xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc19)
    %30 = tt.splat %arg7 : i64 -> tensor<64x4xi64, #blocked> loc(#loc20)
    %31 = tt.splat %arg8 : i64 -> tensor<1x4xi64, #blocked> loc(#loc21)
    %32 = arith.addi %arg8, %arg9 : i64 loc(#loc22)
    %33 = tt.splat %32 : i64 -> tensor<1x4xi64, #blocked> loc(#loc23)
    %34 = tt.splat %arg9 : i64 -> tensor<64x4xi64, #blocked> loc(#loc24)
    %35 = tt.broadcast %12 : tensor<64x1xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc25)
    %36 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<64x4x!tt.ptr<i1>, #blocked> loc(#loc26)
    %37 = scf.for %arg12 = %c0_i32 to %arg11 step %c4_i32 iter_args(%arg13 = %cst_6) -> (tensor<64x4xi64, #blocked>)  : i32 {
      %54 = tt.splat %arg12 : i32 -> tensor<1x4xi32, #blocked> loc(#loc28)
      %55 = arith.addi %54, %15 : tensor<1x4xi32, #blocked> loc(#loc28)
      %56 = arith.cmpi slt, %55, %20 : tensor<1x4xi32, #blocked> loc(#loc10)
      %57 = arith.extsi %55 : tensor<1x4xi32, #blocked> to tensor<1x4xi64, #blocked> loc(#loc77)
      %58 = arith.divsi %57, %21 : tensor<1x4xi64, #blocked> loc(#loc77)
      %59 = arith.remsi %57, %21 : tensor<1x4xi64, #blocked> loc(#loc80)
      %60 = arith.cmpi ne, %59, %cst_0 : tensor<1x4xi64, #blocked> loc(#loc81)
      %61 = arith.subi %58, %cst_2 : tensor<1x4xi64, #blocked> loc(#loc82)
      %62 = arith.select %60, %61, %58 : tensor<1x4xi1, #blocked>, tensor<1x4xi64, #blocked> loc(#loc83)
      %63 = arith.cmpi slt, %55, %cst_1 : tensor<1x4xi32, #blocked> loc(#loc84)
      %64 = arith.cmpi ne, %63, %23 : tensor<1x4xi1, #blocked> loc(#loc79)
      %65 = arith.select %64, %62, %58 : tensor<1x4xi1, #blocked>, tensor<1x4xi64, #blocked> loc(#loc85)
      %66 = tt.broadcast %65 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc16)
      %67 = arith.addi %66, %26 : tensor<64x4xi64, #blocked> loc(#loc16)
      %68 = arith.cmpi slt, %67, %27 : tensor<64x4xi64, #blocked> loc(#loc17)
      %69 = tt.broadcast %59 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc19)
      %70 = arith.addi %69, %29 : tensor<64x4xi64, #blocked> loc(#loc19)
      %71 = arith.cmpi slt, %70, %30 : tensor<64x4xi64, #blocked> loc(#loc20)
      %72 = arith.andi %68, %71 : tensor<64x4xi1, #blocked> loc(#loc35)
      %73 = tt.load %arg0 : !tt.ptr<i64> loc(#loc36)
      %74 = tt.splat %73 : i64 -> tensor<64x4xi64, #blocked> loc(#loc37)
      %75 = arith.select %72, %74, %cst_6 : tensor<64x4xi1, #blocked>, tensor<64x4xi64, #blocked> loc(#loc38)
      %76 = arith.addi %67, %75 : tensor<64x4xi64, #blocked> loc(#loc39)
      %77 = arith.addi %31, %59 : tensor<1x4xi64, #blocked> loc(#loc21)
      %78 = tt.broadcast %77 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc40)
      %79 = arith.addi %78, %29 : tensor<64x4xi64, #blocked> loc(#loc40)
      %80 = arith.cmpi sle, %79, %76 : tensor<64x4xi64, #blocked> loc(#loc41)
      %81 = arith.cmpi slt, %79, %cst_6 : tensor<64x4xi64, #blocked> loc(#loc42)
      %82 = arith.addi %33, %59 : tensor<1x4xi64, #blocked> loc(#loc23)
      %83 = tt.broadcast %82 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc43)
      %84 = arith.addi %83, %29 : tensor<64x4xi64, #blocked> loc(#loc43)
      %85 = arith.select %81, %84, %79 : tensor<64x4xi1, #blocked>, tensor<64x4xi64, #blocked> loc(#loc44)
      %86 = arith.cmpi sge, %85, %cst_6 : tensor<64x4xi64, #blocked> loc(#loc45)
      %87 = arith.cmpi slt, %85, %34 : tensor<64x4xi64, #blocked> loc(#loc24)
      %88 = arith.andi %86, %87 : tensor<64x4xi1, #blocked> loc(#loc46)
      %89 = tt.broadcast %56 : tensor<1x4xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc47)
      %90 = arith.andi %89, %72 : tensor<64x4xi1, #blocked> loc(#loc47)
      %91 = arith.andi %90, %35 : tensor<64x4xi1, #blocked> loc(#loc25)
      %92 = arith.xori %91, %cst_5 : tensor<64x4xi1, #blocked> loc(#loc48)
      %93 = arith.ori %88, %92 : tensor<64x4xi1, #blocked> loc(#loc49)
      tt.assert %93, "index out of bounds: 0 <= tl.where(ks4 + r0_2 + ks0*x0 < 0, ks4 + ks5 + r0_2 + ks0*x0, ks4 + r0_2 + ks0*x0) < ks5" : tensor<64x4xi1, #blocked> loc(#loc50)
      %94 = tt.addptr %36, %85 : tensor<64x4x!tt.ptr<i1>, #blocked>, tensor<64x4xi64, #blocked> loc(#loc26)
      %95 = tt.bitcast %94 : tensor<64x4x!tt.ptr<i1>, #blocked> -> tensor<64x4x!tt.ptr<i8>, #blocked> loc(#loc51)
      %96 = tt.load %95, %91, %cst_4 evictionPolicy = evict_last : tensor<64x4x!tt.ptr<i8>, #blocked> loc(#loc51)
      %97 = arith.cmpi ne, %96, %cst_4 : tensor<64x4xi8, #blocked> loc(#loc51)
      %98 = arith.andi %80, %97 : tensor<64x4xi1, #blocked> loc(#loc52)
      %99 = arith.select %72, %98, %cst_3 : tensor<64x4xi1, #blocked>, tensor<64x4xi1, #blocked> loc(#loc53)
      %100 = arith.extui %99 : tensor<64x4xi1, #blocked> to tensor<64x4xi64, #blocked> loc(#loc54)
      %101 = arith.addi %arg13, %100 : tensor<64x4xi64, #blocked> loc(#loc55)
      %102 = arith.andi %89, %35 : tensor<64x4xi1, #blocked> loc(#loc56)
      %103 = arith.select %102, %101, %arg13 : tensor<64x4xi1, #blocked>, tensor<64x4xi64, #blocked> loc(#loc57)
      scf.yield %103 : tensor<64x4xi64, #blocked> loc(#loc58)
    } loc(#loc27)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg12: i64 loc(callsite(#loc1 at #loc60)), %arg13: i64 loc(callsite(#loc1 at #loc60))):
      %54 = arith.addi %arg12, %arg13 : i64 loc(#loc90)
      tt.reduce.return %54 : i64 loc(#loc86)
    }) : (tensor<64x4xi64, #blocked>) -> tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc86)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi64, #blocked> loc(#loc62)
    %40 = arith.cmpi sgt, %39, %cst : tensor<64x1xi64, #blocked> loc(#loc63)
    %41 = arith.muli %arg4, %arg4 : i64 loc(#loc64)
    %42 = tt.splat %41 : i64 -> tensor<64x1xi64, #blocked> loc(#loc65)
    %43 = arith.cmpi slt, %39, %42 : tensor<64x1xi64, #blocked> loc(#loc65)
    %44 = arith.andi %40, %43 : tensor<64x1xi1, #blocked> loc(#loc66)
    %45 = ttg.convert_layout %44 : tensor<64x1xi1, #blocked> -> tensor<64x1xi1, #blocked1> loc(#loc88)
    %46 = arith.extui %45 : tensor<64x1xi1, #blocked1> to tensor<64x1xi32, #blocked1> loc(#loc88)
    %47 = arith.cmpi eq, %39, %42 : tensor<64x1xi64, #blocked> loc(#loc69)
    %48 = ttg.convert_layout %47 : tensor<64x1xi1, #blocked> -> tensor<64x1xi1, #blocked1> loc(#loc89)
    %49 = arith.extui %48 : tensor<64x1xi1, #blocked1> to tensor<64x1xi32, #blocked1> loc(#loc89)
    %50 = tt.splat %arg2 : !tt.ptr<i32> -> tensor<64x1x!tt.ptr<i32>, #blocked1> loc(#loc72)
    %51 = tt.addptr %50, %9 : tensor<64x1x!tt.ptr<i32>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc72)
    tt.store %51, %46, %13 : tensor<64x1x!tt.ptr<i32>, #blocked1> loc(#loc73)
    %52 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<64x1x!tt.ptr<i32>, #blocked1> loc(#loc74)
    %53 = tt.addptr %52, %9 : tensor<64x1x!tt.ptr<i32>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc74)
    tt.store %53, %49, %13 : tensor<64x1x!tt.ptr<i32>, #blocked1> loc(#loc75)
    tt.return loc(#loc76)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":21:28)
#loc3 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":21:33)
#loc4 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":22:44)
#loc5 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":22:23)
#loc6 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":23:21)
#loc7 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":24:37)
#loc8 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":26:19)
#loc9 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":27:19)
#loc10 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":32:29)
#loc11 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":73:16)
#loc12 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":35:59)
#loc13 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:36)
#loc14 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:32)
#loc15 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":37:26)
#loc16 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":37:22)
#loc17 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":39:22)
#loc18 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":40:26)
#loc19 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":40:22)
#loc20 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":42:22)
#loc21 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":49:22)
#loc22 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:72)
#loc23 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:78)
#loc24 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:202)
#loc25 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:229)
#loc26 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":54:35)
#loc27 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":30:40)
#loc28 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":31:31)
#loc29 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":74:20)
#loc30 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:34)
#loc31 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:44)
#loc32 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":75:47)
#loc33 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:25)
#loc34 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":76:47)
#loc35 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":43:22)
#loc36 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":44:23)
#loc37 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":45:37)
#loc38 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":46:36)
#loc39 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":48:24)
#loc40 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":49:29)
#loc41 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":50:25)
#loc42 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:63)
#loc43 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:85)
#loc44 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:93)
#loc45 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:32)
#loc46 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:118)
#loc47 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:222)
#loc48 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:212)
#loc49 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:210)
#loc50 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":53:237)
#loc51 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":54:119)
#loc52 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":55:24)
#loc53 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":57:38)
#loc54 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":58:25)
#loc55 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":60:25)
#loc56 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:36)
#loc57 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:50)
#loc58 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":61:8)
#loc59 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc61 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc62 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":62:30)
#loc63 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":64:20)
#loc64 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":65:16)
#loc65 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":66:20)
#loc66 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":67:20)
#loc67 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":69:21)
#loc68 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":68:21)
#loc69 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":70:21)
#loc70 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":72:21)
#loc71 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":71:21)
#loc72 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":73:25)
#loc73 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":73:37)
#loc74 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:25)
#loc75 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:37)
#loc76 = loc("/tmp/torchinductor_jovyan/xy/cxyoogamh7dg7j34p4loxlxkukmxdlc3ahbomu6gjvshyzn4v5uk.py":74:4)
#loc77 = loc(callsite(#loc11 at #loc12))
#loc78 = loc(callsite(#loc13 at #loc12))
#loc79 = loc(callsite(#loc14 at #loc12))
#loc80 = loc(callsite(#loc29 at #loc12))
#loc81 = loc(callsite(#loc30 at #loc12))
#loc82 = loc(callsite(#loc31 at #loc12))
#loc83 = loc(callsite(#loc32 at #loc12))
#loc84 = loc(callsite(#loc33 at #loc12))
#loc85 = loc(callsite(#loc34 at #loc12))
#loc86 = loc(callsite(#loc59 at #loc60))
#loc88 = loc(fused[#loc67, #loc68])
#loc89 = loc(fused[#loc70, #loc71])
#loc90 = loc(callsite(#loc61 at #loc86))
