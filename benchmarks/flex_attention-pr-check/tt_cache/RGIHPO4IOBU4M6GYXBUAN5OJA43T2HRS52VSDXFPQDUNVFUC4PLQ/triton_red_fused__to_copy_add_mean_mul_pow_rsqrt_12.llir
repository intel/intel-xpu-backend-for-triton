; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !9 spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32, i32, float, i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !12 spir_func void @_Z7barrierj(i32) local_unnamed_addr #0

; Function Attrs: convergent mustprogress nounwind willreturn
declare !dbg !13 spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32, i32, float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

; Function Attrs: mustprogress nounwind willreturn
define spir_kernel void @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12(ptr addrspace(1) captures(none) %0, ptr addrspace(1) readonly captures(none) %1, ptr addrspace(1) readonly captures(none) %2, ptr addrspace(1) readonly captures(none) %3, ptr addrspace(1) readonly captures(none) %4, ptr addrspace(1) readonly captures(none) %5, double %6, ptr addrspace(1) writeonly captures(none) %7, i32 %8, ptr addrspace(1) readnone captures(none) %9, ptr addrspace(3) captures(none) %10) local_unnamed_addr #2 !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %12 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #4, !dbg !20
  %13 = trunc i64 %12 to i32, !dbg !20
  %14 = shl i64 %12, 2, !dbg !20
  %15 = and i64 %14, 2044, !dbg !20
  %16 = getelementptr bfloat, ptr addrspace(1) %1, i64 %15, !dbg !21
  %17 = load i16, ptr addrspace(1) %16, align 8, !dbg !22
  %18 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %17) #4
  %19 = getelementptr inbounds nuw i8, ptr addrspace(1) %16, i64 2, !dbg !22
  %20 = load i16, ptr addrspace(1) %19, align 2, !dbg !22
  %21 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %20) #4
  %22 = getelementptr inbounds nuw i8, ptr addrspace(1) %16, i64 4, !dbg !22
  %23 = load i16, ptr addrspace(1) %22, align 4, !dbg !22
  %24 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %23) #4
  %25 = getelementptr inbounds nuw i8, ptr addrspace(1) %16, i64 6, !dbg !22
  %26 = load i16, ptr addrspace(1) %25, align 2, !dbg !22
  %27 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %26) #4
  %28 = getelementptr bfloat, ptr addrspace(1) %0, i64 %15, !dbg !23
  %29 = load i16, ptr addrspace(1) %28, align 8, !dbg !24
  %30 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %29) #4
  %31 = getelementptr inbounds nuw i8, ptr addrspace(1) %28, i64 2, !dbg !24
  %32 = load i16, ptr addrspace(1) %31, align 2, !dbg !24
  %33 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %32) #4
  %34 = getelementptr inbounds nuw i8, ptr addrspace(1) %28, i64 4, !dbg !24
  %35 = load i16, ptr addrspace(1) %34, align 4, !dbg !24
  %36 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %35) #4
  %37 = getelementptr inbounds nuw i8, ptr addrspace(1) %28, i64 6, !dbg !24
  %38 = load i16, ptr addrspace(1) %37, align 2, !dbg !24
  %39 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %38) #4
  %40 = getelementptr bfloat, ptr addrspace(1) %2, i64 %15, !dbg !25
  %41 = load i16, ptr addrspace(1) %40, align 8, !dbg !26
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #4
  %43 = getelementptr inbounds nuw i8, ptr addrspace(1) %40, i64 2, !dbg !26
  %44 = load i16, ptr addrspace(1) %43, align 2, !dbg !26
  %45 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %44) #4
  %46 = getelementptr inbounds nuw i8, ptr addrspace(1) %40, i64 4, !dbg !26
  %47 = load i16, ptr addrspace(1) %46, align 4, !dbg !26
  %48 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %47) #4
  %49 = getelementptr inbounds nuw i8, ptr addrspace(1) %40, i64 6, !dbg !26
  %50 = load i16, ptr addrspace(1) %49, align 2, !dbg !26
  %51 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %50) #4
  %52 = getelementptr bfloat, ptr addrspace(1) %3, i64 %15, !dbg !27
  %53 = load i16, ptr addrspace(1) %52, align 8, !dbg !28
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #4
  %55 = getelementptr inbounds nuw i8, ptr addrspace(1) %52, i64 2, !dbg !28
  %56 = load i16, ptr addrspace(1) %55, align 2, !dbg !28
  %57 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %56) #4
  %58 = getelementptr inbounds nuw i8, ptr addrspace(1) %52, i64 4, !dbg !28
  %59 = load i16, ptr addrspace(1) %58, align 4, !dbg !28
  %60 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %59) #4
  %61 = getelementptr inbounds nuw i8, ptr addrspace(1) %52, i64 6, !dbg !28
  %62 = load i16, ptr addrspace(1) %61, align 2, !dbg !28
  %63 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %62) #4
  %64 = getelementptr bfloat, ptr addrspace(1) %4, i64 %15, !dbg !29
  %65 = load i16, ptr addrspace(1) %64, align 8, !dbg !30
  %66 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %65) #4
  %67 = getelementptr inbounds nuw i8, ptr addrspace(1) %64, i64 2, !dbg !30
  %68 = load i16, ptr addrspace(1) %67, align 2, !dbg !30
  %69 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %68) #4
  %70 = getelementptr inbounds nuw i8, ptr addrspace(1) %64, i64 4, !dbg !30
  %71 = load i16, ptr addrspace(1) %70, align 4, !dbg !30
  %72 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %71) #4
  %73 = getelementptr inbounds nuw i8, ptr addrspace(1) %64, i64 6, !dbg !30
  %74 = load i16, ptr addrspace(1) %73, align 2, !dbg !30
  %75 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %74) #4
  %76 = fadd float %18, %30, !dbg !31
  %77 = fadd float %21, %33, !dbg !31
  %78 = fadd float %24, %36, !dbg !31
  %79 = fadd float %27, %39, !dbg !31
  %80 = fadd float %76, %42, !dbg !32
  %81 = fadd float %77, %45, !dbg !32
  %82 = fadd float %78, %48, !dbg !32
  %83 = fadd float %79, %51, !dbg !32
  %84 = fadd float %80, %54, !dbg !33
  %85 = fadd float %81, %57, !dbg !33
  %86 = fadd float %82, %60, !dbg !33
  %87 = fadd float %83, %63, !dbg !33
  %88 = fadd float %84, %66, !dbg !34
  %89 = fadd float %85, %69, !dbg !34
  %90 = fadd float %86, %72, !dbg !34
  %91 = fadd float %87, %75, !dbg !34
  %92 = fmul float %88, %88, !dbg !35
  %93 = fmul float %89, %89, !dbg !35
  %94 = fmul float %90, %90, !dbg !35
  %95 = fmul float %91, %91, !dbg !35
  %96 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %88) #4
  %97 = insertelement <2 x i16> poison, i16 %96, i64 0, !dbg !36
  %98 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %89) #4
  %99 = insertelement <2 x i16> %97, i16 %98, i64 1, !dbg !36
  %100 = bitcast <2 x i16> %99 to i32, !dbg !36
  %101 = insertelement <2 x i32> poison, i32 %100, i64 0, !dbg !36
  %102 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %90) #4
  %103 = insertelement <2 x i16> poison, i16 %102, i64 0, !dbg !36
  %104 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %91) #4
  %105 = insertelement <2 x i16> %103, i16 %104, i64 1, !dbg !36
  %106 = bitcast <2 x i16> %105 to i32, !dbg !36
  %107 = insertelement <2 x i32> %101, i32 %106, i64 1, !dbg !36
  store <2 x i32> %107, ptr addrspace(1) %28, align 8, !dbg !36
  %108 = or disjoint i64 %15, 2048, !dbg !37
  %109 = getelementptr bfloat, ptr addrspace(1) %1, i64 %108, !dbg !21
  %110 = load i16, ptr addrspace(1) %109, align 8, !dbg !22
  %111 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %110) #4
  %112 = getelementptr inbounds nuw i8, ptr addrspace(1) %109, i64 2, !dbg !22
  %113 = load i16, ptr addrspace(1) %112, align 2, !dbg !22
  %114 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %113) #4
  %115 = getelementptr inbounds nuw i8, ptr addrspace(1) %109, i64 4, !dbg !22
  %116 = load i16, ptr addrspace(1) %115, align 4, !dbg !22
  %117 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %116) #4
  %118 = getelementptr inbounds nuw i8, ptr addrspace(1) %109, i64 6, !dbg !22
  %119 = load i16, ptr addrspace(1) %118, align 2, !dbg !22
  %120 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %119) #4
  %121 = getelementptr bfloat, ptr addrspace(1) %0, i64 %108, !dbg !23
  %122 = load i16, ptr addrspace(1) %121, align 8, !dbg !24
  %123 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %122) #4
  %124 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 2, !dbg !24
  %125 = load i16, ptr addrspace(1) %124, align 2, !dbg !24
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #4
  %127 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 4, !dbg !24
  %128 = load i16, ptr addrspace(1) %127, align 4, !dbg !24
  %129 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %128) #4
  %130 = getelementptr inbounds nuw i8, ptr addrspace(1) %121, i64 6, !dbg !24
  %131 = load i16, ptr addrspace(1) %130, align 2, !dbg !24
  %132 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %131) #4
  %133 = getelementptr bfloat, ptr addrspace(1) %2, i64 %108, !dbg !25
  %134 = load i16, ptr addrspace(1) %133, align 8, !dbg !26
  %135 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %134) #4
  %136 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 2, !dbg !26
  %137 = load i16, ptr addrspace(1) %136, align 2, !dbg !26
  %138 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %137) #4
  %139 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 4, !dbg !26
  %140 = load i16, ptr addrspace(1) %139, align 4, !dbg !26
  %141 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %140) #4
  %142 = getelementptr inbounds nuw i8, ptr addrspace(1) %133, i64 6, !dbg !26
  %143 = load i16, ptr addrspace(1) %142, align 2, !dbg !26
  %144 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %143) #4
  %145 = getelementptr bfloat, ptr addrspace(1) %3, i64 %108, !dbg !27
  %146 = load i16, ptr addrspace(1) %145, align 8, !dbg !28
  %147 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %146) #4
  %148 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 2, !dbg !28
  %149 = load i16, ptr addrspace(1) %148, align 2, !dbg !28
  %150 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %149) #4
  %151 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 4, !dbg !28
  %152 = load i16, ptr addrspace(1) %151, align 4, !dbg !28
  %153 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %152) #4
  %154 = getelementptr inbounds nuw i8, ptr addrspace(1) %145, i64 6, !dbg !28
  %155 = load i16, ptr addrspace(1) %154, align 2, !dbg !28
  %156 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %155) #4
  %157 = getelementptr bfloat, ptr addrspace(1) %4, i64 %108, !dbg !29
  %158 = load i16, ptr addrspace(1) %157, align 8, !dbg !30
  %159 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %158) #4
  %160 = getelementptr inbounds nuw i8, ptr addrspace(1) %157, i64 2, !dbg !30
  %161 = load i16, ptr addrspace(1) %160, align 2, !dbg !30
  %162 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %161) #4
  %163 = getelementptr inbounds nuw i8, ptr addrspace(1) %157, i64 4, !dbg !30
  %164 = load i16, ptr addrspace(1) %163, align 4, !dbg !30
  %165 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %164) #4
  %166 = getelementptr inbounds nuw i8, ptr addrspace(1) %157, i64 6, !dbg !30
  %167 = load i16, ptr addrspace(1) %166, align 2, !dbg !30
  %168 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %167) #4
  %169 = fadd float %111, %123, !dbg !31
  %170 = fadd float %114, %126, !dbg !31
  %171 = fadd float %117, %129, !dbg !31
  %172 = fadd float %120, %132, !dbg !31
  %173 = fadd float %169, %135, !dbg !32
  %174 = fadd float %170, %138, !dbg !32
  %175 = fadd float %171, %141, !dbg !32
  %176 = fadd float %172, %144, !dbg !32
  %177 = fadd float %173, %147, !dbg !33
  %178 = fadd float %174, %150, !dbg !33
  %179 = fadd float %175, %153, !dbg !33
  %180 = fadd float %176, %156, !dbg !33
  %181 = fadd float %177, %159, !dbg !34
  %182 = fadd float %178, %162, !dbg !34
  %183 = fadd float %179, %165, !dbg !34
  %184 = fadd float %180, %168, !dbg !34
  %185 = fmul float %181, %181, !dbg !35
  %186 = fmul float %182, %182, !dbg !35
  %187 = fmul float %183, %183, !dbg !35
  %188 = fmul float %184, %184, !dbg !35
  %189 = fadd float %92, %185, !dbg !38
  %190 = fadd float %93, %186, !dbg !38
  %191 = fadd float %94, %187, !dbg !38
  %192 = fadd float %95, %188, !dbg !38
  %193 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %181) #4
  %194 = insertelement <2 x i16> poison, i16 %193, i64 0, !dbg !36
  %195 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %182) #4
  %196 = insertelement <2 x i16> %194, i16 %195, i64 1, !dbg !36
  %197 = bitcast <2 x i16> %196 to i32, !dbg !36
  %198 = insertelement <2 x i32> poison, i32 %197, i64 0, !dbg !36
  %199 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %183) #4
  %200 = insertelement <2 x i16> poison, i16 %199, i64 0, !dbg !36
  %201 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %184) #4
  %202 = insertelement <2 x i16> %200, i16 %201, i64 1, !dbg !36
  %203 = bitcast <2 x i16> %202 to i32, !dbg !36
  %204 = insertelement <2 x i32> %198, i32 %203, i64 1, !dbg !36
  store <2 x i32> %204, ptr addrspace(1) %121, align 8, !dbg !36
  %205 = and i32 %13, 511, !dbg !20
  %206 = and i32 %13, 31, !dbg !20
  %207 = fadd float %189, %190, !dbg !39
  %208 = fadd float %191, %207, !dbg !39
  %209 = fadd float %192, %208, !dbg !39
  %210 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiif(i32 3, i32 0, float %209) #5, !dbg !43
  %211 = icmp eq i32 %206, 0, !dbg !43
  br i1 %211, label %212, label %216, !dbg !43

212:                                              ; preds = %11
  %213 = lshr exact i32 %205, 5, !dbg !20
  %214 = zext nneg i32 %213 to i64, !dbg !43
  %215 = getelementptr float, ptr addrspace(3) %10, i64 %214, !dbg !43
  store float %210, ptr addrspace(3) %215, align 4, !dbg !43
  br label %216, !dbg !43

216:                                              ; preds = %212, %11
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !43
  %217 = icmp samesign ult i32 %205, 16, !dbg !43
  %218 = and i64 %12, 511, !dbg !43
  %219 = getelementptr float, ptr addrspace(3) %10, i64 %218, !dbg !43
  br i1 %217, label %220, label %222, !dbg !43

220:                                              ; preds = %216
  %221 = load float, ptr addrspace(3) %219, align 4, !dbg !43
  br label %222, !dbg !43

222:                                              ; preds = %220, %216
  %223 = phi float [ %221, %220 ], [ undef, %216 ], !dbg !42
  %224 = tail call spir_func float @_Z27__spirv_GroupNonUniformFAddiifj(i32 3, i32 3, float %223, i32 16) #5, !dbg !43
  %225 = and i32 %13, 15, !dbg !43
  %226 = icmp eq i32 %225, 0, !dbg !43
  %227 = and i1 %217, %226, !dbg !43
  br i1 %227, label %228, label %229, !dbg !43

228:                                              ; preds = %222
  store float %224, ptr addrspace(3) %219, align 4, !dbg !43
  br label %229, !dbg !43

229:                                              ; preds = %228, %222
  tail call spir_func void @_Z7barrierj(i32 1) #5, !dbg !43
  %230 = load float, ptr addrspace(3) %10, align 4, !dbg !43
  %231 = fmul float %230, 0x3F30000000000000, !dbg !44
  %232 = fptrunc double %6 to float, !dbg !45
  %233 = fadd float %231, %232, !dbg !46
  %234 = tail call spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef %233) #6, !dbg !47
  %235 = getelementptr bfloat, ptr addrspace(1) %5, i64 %15, !dbg !48
  %236 = load i16, ptr addrspace(1) %235, align 8, !dbg !49
  %237 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %236) #4
  %238 = getelementptr inbounds nuw i8, ptr addrspace(1) %235, i64 2, !dbg !49
  %239 = load i16, ptr addrspace(1) %238, align 2, !dbg !49
  %240 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %239) #4
  %241 = getelementptr inbounds nuw i8, ptr addrspace(1) %235, i64 4, !dbg !49
  %242 = load i16, ptr addrspace(1) %241, align 4, !dbg !49
  %243 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %242) #4
  %244 = getelementptr inbounds nuw i8, ptr addrspace(1) %235, i64 6, !dbg !49
  %245 = load i16, ptr addrspace(1) %244, align 2, !dbg !49
  %246 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %245) #4
  %247 = load i16, ptr addrspace(1) %28, align 8, !dbg !50
  %248 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %247) #4
  %249 = fmul float %234, %248, !dbg !51
  %250 = fmul float %237, %249, !dbg !52
  %251 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %250) #4
  %252 = insertelement <2 x i16> poison, i16 %251, i64 0, !dbg !53
  %253 = load i16, ptr addrspace(1) %31, align 2, !dbg !50
  %254 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %253) #4
  %255 = fmul float %234, %254, !dbg !51
  %256 = fmul float %240, %255, !dbg !52
  %257 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %256) #4
  %258 = insertelement <2 x i16> %252, i16 %257, i64 1, !dbg !53
  %259 = bitcast <2 x i16> %258 to i32, !dbg !53
  %260 = insertelement <2 x i32> poison, i32 %259, i64 0, !dbg !53
  %261 = load i16, ptr addrspace(1) %34, align 4, !dbg !50
  %262 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %261) #4
  %263 = fmul float %234, %262, !dbg !51
  %264 = fmul float %243, %263, !dbg !52
  %265 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %264) #4
  %266 = insertelement <2 x i16> poison, i16 %265, i64 0, !dbg !53
  %267 = load i16, ptr addrspace(1) %37, align 2, !dbg !50
  %268 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %267) #4
  %269 = fmul float %234, %268, !dbg !51
  %270 = fmul float %246, %269, !dbg !52
  %271 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %270) #4
  %272 = insertelement <2 x i16> %266, i16 %271, i64 1, !dbg !53
  %273 = bitcast <2 x i16> %272 to i32, !dbg !53
  %274 = insertelement <2 x i32> %260, i32 %273, i64 1, !dbg !53
  %275 = getelementptr bfloat, ptr addrspace(1) %7, i64 %15, !dbg !54
  store <2 x i32> %274, ptr addrspace(1) %275, align 8, !dbg !53
  %276 = getelementptr bfloat, ptr addrspace(1) %5, i64 %108, !dbg !48
  %277 = load i16, ptr addrspace(1) %276, align 8, !dbg !49
  %278 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %277) #4
  %279 = getelementptr inbounds nuw i8, ptr addrspace(1) %276, i64 2, !dbg !49
  %280 = load i16, ptr addrspace(1) %279, align 2, !dbg !49
  %281 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %280) #4
  %282 = getelementptr inbounds nuw i8, ptr addrspace(1) %276, i64 4, !dbg !49
  %283 = load i16, ptr addrspace(1) %282, align 4, !dbg !49
  %284 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %283) #4
  %285 = getelementptr inbounds nuw i8, ptr addrspace(1) %276, i64 6, !dbg !49
  %286 = load i16, ptr addrspace(1) %285, align 2, !dbg !49
  %287 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %286) #4
  %288 = load i16, ptr addrspace(1) %121, align 8, !dbg !50
  %289 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %288) #4
  %290 = fmul float %234, %289, !dbg !51
  %291 = fmul float %278, %290, !dbg !52
  %292 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %291) #4
  %293 = insertelement <2 x i16> poison, i16 %292, i64 0, !dbg !53
  %294 = load i16, ptr addrspace(1) %124, align 2, !dbg !50
  %295 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %294) #4
  %296 = fmul float %234, %295, !dbg !51
  %297 = fmul float %281, %296, !dbg !52
  %298 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %297) #4
  %299 = insertelement <2 x i16> %293, i16 %298, i64 1, !dbg !53
  %300 = bitcast <2 x i16> %299 to i32, !dbg !53
  %301 = insertelement <2 x i32> poison, i32 %300, i64 0, !dbg !53
  %302 = load i16, ptr addrspace(1) %127, align 4, !dbg !50
  %303 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %302) #4
  %304 = fmul float %234, %303, !dbg !51
  %305 = fmul float %284, %304, !dbg !52
  %306 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %305) #4
  %307 = insertelement <2 x i16> poison, i16 %306, i64 0, !dbg !53
  %308 = load i16, ptr addrspace(1) %130, align 2, !dbg !50
  %309 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %308) #4
  %310 = fmul float %234, %309, !dbg !51
  %311 = fmul float %287, %310, !dbg !52
  %312 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %311) #4
  %313 = insertelement <2 x i16> %307, i16 %312, i64 1, !dbg !53
  %314 = bitcast <2 x i16> %313 to i32, !dbg !53
  %315 = insertelement <2 x i32> %301, i32 %314, i64 1, !dbg !53
  %316 = getelementptr bfloat, ptr addrspace(1) %7, i64 %108, !dbg !54
  store <2 x i32> %315, ptr addrspace(1) %316, align 8, !dbg !53
  ret void, !dbg !55
}

; Function Attrs: convergent mustprogress nofree nounwind willreturn memory(none)
declare dso_local spir_func noundef float @_Z17__spirv_ocl_rsqrtf(float noundef) local_unnamed_addr #3

attributes #0 = { convergent mustprogress nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #2 = { mustprogress nounwind willreturn }
attributes #3 = { convergent mustprogress nofree nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #4 = { nounwind willreturn memory(none) }
attributes #5 = { convergent nounwind willreturn }
attributes #6 = { convergent nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cuqt54xlq3stf544bx5zq547wcdpjtk32k4nsgklma3kfqfuuvu4.py", directory: "/tmp/torchinductor_jovyan/uq")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiifj", linkageName: "_Z27__spirv_GroupNonUniformFAddiifj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z7barrierj", linkageName: "_Z7barrierj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z27__spirv_GroupNonUniformFAddiif", linkageName: "_Z27__spirv_GroupNonUniformFAddiif", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12", linkageName: "triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_12", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 512, i64 1, i64 1}
!20 = !DILocation(line: 26, column: 37, scope: !17)
!21 = !DILocation(line: 35, column: 34, scope: !17)
!22 = !DILocation(line: 35, column: 95, scope: !17)
!23 = !DILocation(line: 36, column: 38, scope: !17)
!24 = !DILocation(line: 36, column: 99, scope: !17)
!25 = !DILocation(line: 37, column: 34, scope: !17)
!26 = !DILocation(line: 37, column: 95, scope: !17)
!27 = !DILocation(line: 38, column: 34, scope: !17)
!28 = !DILocation(line: 38, column: 95, scope: !17)
!29 = !DILocation(line: 39, column: 34, scope: !17)
!30 = !DILocation(line: 39, column: 95, scope: !17)
!31 = !DILocation(line: 40, column: 22, scope: !17)
!32 = !DILocation(line: 41, column: 22, scope: !17)
!33 = !DILocation(line: 42, column: 22, scope: !17)
!34 = !DILocation(line: 43, column: 22, scope: !17)
!35 = !DILocation(line: 45, column: 23, scope: !17)
!36 = !DILocation(line: 49, column: 82, scope: !17)
!37 = !DILocation(line: 30, column: 31, scope: !17)
!38 = !DILocation(line: 47, column: 25, scope: !17)
!39 = !DILocation(line: 260, column: 15, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !17, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!42 = !DILocation(line: 50, column: 27, scope: !17)
!43 = !DILocation(line: 290, column: 36, scope: !40, inlinedAt: !42)
!44 = !DILocation(line: 62, column: 25, scope: !17)
!45 = !DILocation(line: 63, column: 25, scope: !17)
!46 = !DILocation(line: 64, column: 24, scope: !17)
!47 = !DILocation(line: 65, column: 32, scope: !17)
!48 = !DILocation(line: 58, column: 35, scope: !17)
!49 = !DILocation(line: 58, column: 96, scope: !17)
!50 = !DILocation(line: 59, column: 100, scope: !17)
!51 = !DILocation(line: 66, column: 24, scope: !17)
!52 = !DILocation(line: 68, column: 24, scope: !17)
!53 = !DILocation(line: 69, column: 80, scope: !17)
!54 = !DILocation(line: 69, column: 29, scope: !17)
!55 = !DILocation(line: 52, column: 4, scope: !17)
