; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !13 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare !dbg !15 float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_poi_fused_mul_silu_7(ptr addrspace(1) captures(none) %0, ptr addrspace(1) readonly captures(none) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr #2 !dbg !16 !intel_reqd_sub_group_size !17 !max_work_group_size !18 {
  %5 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #3, !dbg !19
  %6 = trunc i64 %5 to i32, !dbg !19
  %7 = shl i32 %6, 10, !dbg !20
  %8 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #3, !dbg !21
  %9 = trunc i64 %8 to i32, !dbg !21
  %10 = shl i32 %9, 3, !dbg !21
  %11 = and i32 %10, 1016, !dbg !21
  %12 = or disjoint i32 %11, %7, !dbg !22
  %13 = icmp slt i32 %12, %2, !dbg !23
  br i1 %13, label %14, label %132, !dbg !24

14:                                               ; preds = %4
  %15 = sext i32 %12 to i64, !dbg !25
  %16 = getelementptr bfloat, ptr addrspace(1) %0, i64 %15, !dbg !25
  %17 = load <8 x i16>, ptr addrspace(1) %16, align 16, !dbg !24
  %18 = extractelement <8 x i16> %17, i64 7, !dbg !26
  %19 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %18) #3
  %20 = extractelement <8 x i16> %17, i64 6, !dbg !26
  %21 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %20) #3
  %22 = extractelement <8 x i16> %17, i64 5, !dbg !26
  %23 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %22) #3
  %24 = extractelement <8 x i16> %17, i64 4, !dbg !26
  %25 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %24) #3
  %26 = extractelement <8 x i16> %17, i64 3, !dbg !26
  %27 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %26) #3
  %28 = extractelement <8 x i16> %17, i64 2, !dbg !26
  %29 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %28) #3
  %30 = extractelement <8 x i16> %17, i64 1, !dbg !26
  %31 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %30) #3
  %32 = extractelement <8 x i16> %17, i64 0, !dbg !26
  %33 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %32) #3
  %34 = getelementptr bfloat, ptr addrspace(1) %1, i64 %15, !dbg !27
  %35 = load <8 x i16>, ptr addrspace(1) %34, align 16, !dbg !28
  %36 = fsub float 0.000000e+00, %33, !dbg !29
  %37 = fmul float %36, 0x3FF7154760000000, !dbg !33
  %38 = tail call float @llvm.exp2.f32(float %37), !dbg !33
  %39 = fadd float %38, 1.000000e+00, !dbg !34
  %40 = fdiv float 1.000000e+00, %39, !dbg !35
  %41 = fmul float %33, %40, !dbg !36
  %42 = extractelement <8 x i16> %35, i64 0, !dbg !37
  %43 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %42) #3
  %44 = fmul float %43, %41, !dbg !38
  %45 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %44) #3
  %46 = insertelement <2 x i16> poison, i16 %45, i64 0, !dbg !39
  %47 = fsub float 0.000000e+00, %31, !dbg !29
  %48 = fmul float %47, 0x3FF7154760000000, !dbg !33
  %49 = tail call float @llvm.exp2.f32(float %48), !dbg !33
  %50 = fadd float %49, 1.000000e+00, !dbg !34
  %51 = fdiv float 1.000000e+00, %50, !dbg !35
  %52 = fmul float %31, %51, !dbg !36
  %53 = extractelement <8 x i16> %35, i64 1, !dbg !37
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #3
  %55 = fmul float %54, %52, !dbg !38
  %56 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %55) #3
  %57 = insertelement <2 x i16> %46, i16 %56, i64 1, !dbg !39
  %58 = bitcast <2 x i16> %57 to i32, !dbg !39
  %59 = insertelement <4 x i32> poison, i32 %58, i64 0, !dbg !39
  %60 = fsub float 0.000000e+00, %29, !dbg !29
  %61 = fmul float %60, 0x3FF7154760000000, !dbg !33
  %62 = tail call float @llvm.exp2.f32(float %61), !dbg !33
  %63 = fadd float %62, 1.000000e+00, !dbg !34
  %64 = fdiv float 1.000000e+00, %63, !dbg !35
  %65 = fmul float %29, %64, !dbg !36
  %66 = extractelement <8 x i16> %35, i64 2, !dbg !37
  %67 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %66) #3
  %68 = fmul float %65, %67, !dbg !38
  %69 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %68) #3
  %70 = insertelement <2 x i16> poison, i16 %69, i64 0, !dbg !39
  %71 = fsub float 0.000000e+00, %27, !dbg !29
  %72 = fmul float %71, 0x3FF7154760000000, !dbg !33
  %73 = tail call float @llvm.exp2.f32(float %72), !dbg !33
  %74 = fadd float %73, 1.000000e+00, !dbg !34
  %75 = fdiv float 1.000000e+00, %74, !dbg !35
  %76 = fmul float %27, %75, !dbg !36
  %77 = extractelement <8 x i16> %35, i64 3, !dbg !37
  %78 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %77) #3
  %79 = fmul float %76, %78, !dbg !38
  %80 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %79) #3
  %81 = insertelement <2 x i16> %70, i16 %80, i64 1, !dbg !39
  %82 = bitcast <2 x i16> %81 to i32, !dbg !39
  %83 = insertelement <4 x i32> %59, i32 %82, i64 1, !dbg !39
  %84 = fsub float 0.000000e+00, %25, !dbg !29
  %85 = fmul float %84, 0x3FF7154760000000, !dbg !33
  %86 = tail call float @llvm.exp2.f32(float %85), !dbg !33
  %87 = fadd float %86, 1.000000e+00, !dbg !34
  %88 = fdiv float 1.000000e+00, %87, !dbg !35
  %89 = fmul float %25, %88, !dbg !36
  %90 = extractelement <8 x i16> %35, i64 4, !dbg !37
  %91 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %90) #3
  %92 = fmul float %89, %91, !dbg !38
  %93 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %92) #3
  %94 = insertelement <2 x i16> poison, i16 %93, i64 0, !dbg !39
  %95 = fsub float 0.000000e+00, %23, !dbg !29
  %96 = fmul float %95, 0x3FF7154760000000, !dbg !33
  %97 = tail call float @llvm.exp2.f32(float %96), !dbg !33
  %98 = fadd float %97, 1.000000e+00, !dbg !34
  %99 = fdiv float 1.000000e+00, %98, !dbg !35
  %100 = fmul float %23, %99, !dbg !36
  %101 = extractelement <8 x i16> %35, i64 5, !dbg !37
  %102 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %101) #3
  %103 = fmul float %100, %102, !dbg !38
  %104 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %103) #3
  %105 = insertelement <2 x i16> %94, i16 %104, i64 1, !dbg !39
  %106 = bitcast <2 x i16> %105 to i32, !dbg !39
  %107 = insertelement <4 x i32> %83, i32 %106, i64 2, !dbg !39
  %108 = fsub float 0.000000e+00, %21, !dbg !29
  %109 = fmul float %108, 0x3FF7154760000000, !dbg !33
  %110 = tail call float @llvm.exp2.f32(float %109), !dbg !33
  %111 = fadd float %110, 1.000000e+00, !dbg !34
  %112 = fdiv float 1.000000e+00, %111, !dbg !35
  %113 = fmul float %21, %112, !dbg !36
  %114 = extractelement <8 x i16> %35, i64 6, !dbg !37
  %115 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %114) #3
  %116 = fmul float %113, %115, !dbg !38
  %117 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %116) #3
  %118 = insertelement <2 x i16> poison, i16 %117, i64 0, !dbg !39
  %119 = fsub float 0.000000e+00, %19, !dbg !29
  %120 = fmul float %119, 0x3FF7154760000000, !dbg !33
  %121 = tail call float @llvm.exp2.f32(float %120), !dbg !33
  %122 = fadd float %121, 1.000000e+00, !dbg !34
  %123 = fdiv float 1.000000e+00, %122, !dbg !35
  %124 = fmul float %19, %123, !dbg !36
  %125 = extractelement <8 x i16> %35, i64 7, !dbg !37
  %126 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %125) #3
  %127 = fmul float %124, %126, !dbg !38
  %128 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %127) #3
  %129 = insertelement <2 x i16> %118, i16 %128, i64 1, !dbg !39
  %130 = bitcast <2 x i16> %129 to i32, !dbg !39
  %131 = insertelement <4 x i32> %107, i32 %130, i64 3, !dbg !39
  store <4 x i32> %131, ptr addrspace(1) %16, align 16, !dbg !39
  br label %132, !dbg !39

132:                                              ; preds = %4, %14
  ret void, !dbg !40
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cmqt3lj56pfodmyqkqmp6lxdyf63hgnotrf4nescs54cnsgdn2ah.py", directory: "/tmp/torchinductor_jovyan/mq")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "llvm.exp2.f32", linkageName: "llvm.exp2.f32", scope: !1, file: !1, line: 26, type: !10, scopeLine: 26, spFlags: DISPFlagOptimized)
!16 = distinct !DISubprogram(name: "triton_poi_fused_mul_silu_7", linkageName: "triton_poi_fused_mul_silu_7", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!17 = !{i32 32}
!18 = !{i64 128, i64 1, i64 1}
!19 = !DILocation(line: 19, column: 28, scope: !16)
!20 = !DILocation(line: 19, column: 33, scope: !16)
!21 = !DILocation(line: 20, column: 36, scope: !16)
!22 = !DILocation(line: 20, column: 23, scope: !16)
!23 = !DILocation(line: 21, column: 21, scope: !16)
!24 = !DILocation(line: 23, column: 39, scope: !16)
!25 = !DILocation(line: 23, column: 34, scope: !16)
!26 = !DILocation(line: 23, column: 49, scope: !16)
!27 = !DILocation(line: 24, column: 30, scope: !16)
!28 = !DILocation(line: 24, column: 35, scope: !16)
!29 = !DILocation(line: 47, column: 30, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !16, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/jovyan/intel-xpu-backend-for-triton/python/triton/language")
!32 = !DILocation(line: 26, column: 22, scope: !16)
!33 = !DILocation(line: 47, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 47, column: 20, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 47, column: 16, scope: !30, inlinedAt: !32)
!36 = !DILocation(line: 27, column: 18, scope: !16)
!37 = !DILocation(line: 24, column: 45, scope: !16)
!38 = !DILocation(line: 29, column: 18, scope: !16)
!39 = !DILocation(line: 30, column: 39, scope: !16)
!40 = !DILocation(line: 30, column: 4, scope: !16)
