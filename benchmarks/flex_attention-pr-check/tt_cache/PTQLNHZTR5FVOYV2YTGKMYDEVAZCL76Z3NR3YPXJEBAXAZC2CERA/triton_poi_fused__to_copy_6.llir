; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !12 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define spir_kernel void @triton_poi_fused__to_copy_6(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) writeonly captures(none) %1, i64 %2, i64 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr #1 !dbg !13 !intel_reqd_sub_group_size !14 !max_work_group_size !15 {
  %7 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #2, !dbg !16
  %8 = trunc i64 %7 to i32, !dbg !16
  %9 = shl i32 %8, 6, !dbg !17
  %10 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #2, !dbg !18
  %11 = trunc i64 %10 to i32, !dbg !18
  %12 = and i32 %11, 31, !dbg !18
  %13 = or disjoint i32 %12, %9, !dbg !19
  %14 = or disjoint i32 %13, 32, !dbg !19
  %15 = icmp slt i32 %13, %4, !dbg !20
  %16 = icmp slt i32 %14, %4, !dbg !20
  %17 = sext i32 %13 to i64, !dbg !21
  %18 = sext i32 %14 to i64, !dbg !21
  %.frozen = freeze i64 %17, !dbg !22
  %.frozen1 = freeze i64 %2, !dbg !22
  %19 = sdiv i64 %.frozen, %.frozen1, !dbg !22
  %20 = mul i64 %19, %.frozen1, !dbg !21
  %.decomposed = sub i64 %.frozen, %20, !dbg !21
  %.frozen2 = freeze i64 %18, !dbg !22
  %.frozen3 = freeze i64 %2, !dbg !22
  %21 = sdiv i64 %.frozen2, %.frozen3, !dbg !22
  %22 = mul i64 %21, %.frozen3, !dbg !21
  %.decomposed4 = sub i64 %.frozen2, %22, !dbg !21
  %23 = icmp slt i64 %3, 2, !dbg !23
  %24 = icmp sgt i64 %3, 1, !dbg !24
  %25 = select i1 %24, i64 %3, i64 0, !dbg !25
  %26 = zext i1 %23 to i64, !dbg !26
  %27 = add i64 %25, %26, !dbg !27
  %28 = mul i64 %.decomposed4, %27, !dbg !28
  %29 = getelementptr i64, ptr addrspace(1) %0, i64 %21, !dbg !29
  %30 = getelementptr i64, ptr addrspace(1) %29, i64 %28, !dbg !29
  br i1 %15, label %31, label %37, !dbg !30

31:                                               ; preds = %6
  %32 = mul i64 %.decomposed, %27, !dbg !28
  %33 = getelementptr i64, ptr addrspace(1) %0, i64 %19, !dbg !29
  %34 = getelementptr i64, ptr addrspace(1) %33, i64 %32, !dbg !29
  %35 = load i64, ptr addrspace(1) %34, align 8, !dbg !30
  %36 = trunc i64 %35 to i32, !dbg !31
  br label %37, !dbg !30

37:                                               ; preds = %31, %6
  %38 = phi i32 [ %36, %31 ], [ 0, %6 ], !dbg !30
  br i1 %16, label %39, label %42, !dbg !30

39:                                               ; preds = %37
  %40 = load i64, ptr addrspace(1) %30, align 8, !dbg !30
  %41 = trunc i64 %40 to i32, !dbg !31
  br label %42, !dbg !30

42:                                               ; preds = %39, %37
  %43 = phi i32 [ %41, %39 ], [ 0, %37 ], !dbg !30
  %44 = icmp slt i64 %2, 2, !dbg !32
  %45 = icmp sgt i64 %2, 1, !dbg !33
  %46 = select i1 %45, i64 %2, i64 0, !dbg !34
  %47 = zext i1 %44 to i64, !dbg !35
  %48 = add i64 %46, %47, !dbg !36
  %49 = mul i64 %21, %48, !dbg !37
  %50 = getelementptr i32, ptr addrspace(1) %1, i64 %.decomposed4, !dbg !38
  %51 = getelementptr i32, ptr addrspace(1) %50, i64 %49, !dbg !38
  br i1 %15, label %52, label %57, !dbg !39

52:                                               ; preds = %42
  %53 = insertelement <1 x i32> poison, i32 %38, i64 0, !dbg !39
  %54 = mul i64 %19, %48, !dbg !37
  %55 = getelementptr i32, ptr addrspace(1) %1, i64 %.decomposed, !dbg !38
  %56 = getelementptr i32, ptr addrspace(1) %55, i64 %54, !dbg !38
  store <1 x i32> %53, ptr addrspace(1) %56, align 4, !dbg !39
  br label %57, !dbg !39

57:                                               ; preds = %52, %42
  br i1 %16, label %58, label %60, !dbg !39

58:                                               ; preds = %57
  %59 = insertelement <1 x i32> poison, i32 %43, i64 0, !dbg !39
  store <1 x i32> %59, ptr addrspace(1) %51, align 4, !dbg !39
  br label %60, !dbg !39

60:                                               ; preds = %58, %57
  ret void, !dbg !40
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cqbuq57iz3yxj774lbjf2p3v4x5oonbyj7nxw2wmnuxw2knmetun.py", directory: "/tmp/torchinductor_jovyan/qb")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_6", linkageName: "triton_poi_fused__to_copy_6", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!14 = !{i32 32}
!15 = !{i64 32, i64 1, i64 1}
!16 = !DILocation(line: 19, column: 28, scope: !13)
!17 = !DILocation(line: 19, column: 33, scope: !13)
!18 = !DILocation(line: 20, column: 36, scope: !13)
!19 = !DILocation(line: 20, column: 23, scope: !13)
!20 = !DILocation(line: 21, column: 21, scope: !13)
!21 = !DILocation(line: 22, column: 19, scope: !13)
!22 = !DILocation(line: 23, column: 19, scope: !13)
!23 = !DILocation(line: 24, column: 54, scope: !13)
!24 = !DILocation(line: 24, column: 80, scope: !13)
!25 = !DILocation(line: 24, column: 71, scope: !13)
!26 = !DILocation(line: 24, scope: !13)
!27 = !DILocation(line: 24, column: 62, scope: !13)
!28 = !DILocation(line: 24, column: 39, scope: !13)
!29 = !DILocation(line: 24, column: 30, scope: !13)
!30 = !DILocation(line: 24, column: 87, scope: !13)
!31 = !DILocation(line: 25, column: 19, scope: !13)
!32 = !DILocation(line: 26, column: 49, scope: !13)
!33 = !DILocation(line: 26, column: 75, scope: !13)
!34 = !DILocation(line: 26, column: 66, scope: !13)
!35 = !DILocation(line: 26, scope: !13)
!36 = !DILocation(line: 26, column: 57, scope: !13)
!37 = !DILocation(line: 26, column: 34, scope: !13)
!38 = !DILocation(line: 26, column: 25, scope: !13)
!39 = !DILocation(line: 26, column: 88, scope: !13)
!40 = !DILocation(line: 26, column: 4, scope: !13)
