#loc = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0)
#loc1 = loc(unknown)
#loc20 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":38:37)
#loc33 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":48:26)
#loc42 = loc(callsite(#loc1 at #loc20))
#loc44 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_per_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0), %arg5: i32 loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<32x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<32x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<32x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<14> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_4 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_3 : tensor<1x16xi32> loc(#loc10)
    %10 = arith.muli %8, %cst_2 : tensor<1x16xi32> loc(#loc11)
    %11 = tt.broadcast %5 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc12)
    %12 = tt.broadcast %10 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<32x16xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc13)
    %16 = tt.broadcast %9 : tensor<1x16xi1> -> tensor<32x16xi1> loc(#loc14)
    %17 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc14)
    %18 = arith.andi %16, %17 : tensor<32x16xi1> loc(#loc14)
    %19 = tt.load %15, %18, %cst_1 : tensor<32x16x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %20, %13 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc16)
    %22 = tt.load %21, %18, %cst_1 : tensor<32x16x!tt.ptr<f32>> loc(#loc17)
    %23 = arith.select %18, %19, %cst_0 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc18)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc20)), %arg7: f32 loc(callsite(#loc1 at #loc20))):
      %40 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc45)
      %41 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc46)
      %42 = arith.ori %40, %41 : i1 loc(#loc47)
      %43 = arith.select %42, %arg6, %arg7 : f32 loc(#loc48)
      tt.reduce.return %43 : f32 loc(#loc41)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc41)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc25)
    %26 = arith.cmpf oeq, %25, %cst : tensor<32x1xf32> loc(#loc26)
    %27 = tt.broadcast %25 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc27)
    %28 = arith.subf %19, %27 : tensor<32x16xf32> loc(#loc27)
    %29 = tt.broadcast %26 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc28)
    %30 = arith.select %29, %cst_1, %28 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc28)
    %31 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__imf_exp2f"} : (tensor<32x16xf32>) -> tensor<32x16xf32> loc(#loc29)
    %32 = arith.mulf %22, %31 : tensor<32x16xf32> loc(#loc30)
    %33 = arith.select %18, %32, %cst_1 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc31)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc33)), %arg7: f32 loc(callsite(#loc1 at #loc33))):
      %40 = arith.addf %arg6, %arg7 : f32 loc(#loc49)
      tt.reduce.return %40 : f32 loc(#loc43)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc43)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc35)
    %36 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc36)
    %37 = tt.addptr %36, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc36)
    tt.store %37, %25, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc37)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc38)
    %39 = tt.addptr %38, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc38)
    tt.store %39, %35, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":24:28)
#loc3 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":24:33)
#loc4 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":25:36)
#loc5 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":25:44)
#loc6 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":25:23)
#loc7 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":26:21)
#loc8 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":27:28)
#loc9 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":27:38)
#loc10 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":29:25)
#loc11 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":34:38)
#loc12 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":34:35)
#loc13 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":34:30)
#loc14 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":34:55)
#loc15 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":34:45)
#loc16 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":35:30)
#loc17 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":35:45)
#loc18 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":37:43)
#loc19 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":124:29)
#loc21 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":111:15)
#loc22 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":113:21)
#loc23 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":113:16)
#loc24 = loc("/home/jovyan/envs/miniforge3/envs/triton/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":114:29)
#loc25 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":38:40)
#loc26 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":40:19)
#loc27 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":41:18)
#loc28 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":43:33)
#loc29 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":44:27)
#loc30 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":45:19)
#loc31 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":47:45)
#loc32 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":290:36)
#loc34 = loc("/home/jovyan/intel-xpu-backend-for-triton/python/triton/language/standard.py":260:15)
#loc35 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":48:29)
#loc36 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":49:25)
#loc37 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":49:36)
#loc38 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":50:25)
#loc39 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":50:37)
#loc40 = loc("/tmp/torchinductor_jovyan/yb/cybxcm2ysqqjeppp4gqjrwzvxkghmjsswnfi5vbuprncjjcw2hqd.py":50:4)
#loc41 = loc(callsite(#loc19 at #loc20))
#loc43 = loc(callsite(#loc32 at #loc33))
#loc45 = loc(callsite(#loc21 at #loc41))
#loc46 = loc(callsite(#loc22 at #loc41))
#loc47 = loc(callsite(#loc23 at #loc41))
#loc48 = loc(callsite(#loc24 at #loc41))
#loc49 = loc(callsite(#loc34 at #loc43))
