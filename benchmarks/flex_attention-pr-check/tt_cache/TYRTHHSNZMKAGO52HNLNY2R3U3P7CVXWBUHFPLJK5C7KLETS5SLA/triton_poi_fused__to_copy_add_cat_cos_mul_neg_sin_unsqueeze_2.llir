; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !9 spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float) local_unnamed_addr #0

declare !dbg !12 spir_func float @_Z15__spirv_ocl_sinf(float) local_unnamed_addr

declare !dbg !13 spir_func float @_Z15__spirv_ocl_cosf(float) local_unnamed_addr

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !14 spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !15 spir_func i64 @_Z12get_local_idj(i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare !dbg !16 spir_func i64 @_Z12get_group_idj(i32) local_unnamed_addr #0

define spir_kernel void @triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2(ptr addrspace(1) readonly captures(none) %0, ptr addrspace(1) readonly captures(none) %1, double %2, ptr addrspace(1) writeonly captures(none) %3, i64 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !17 !intel_reqd_sub_group_size !18 !max_work_group_size !19 {
  %8 = tail call spir_func i64 @_Z12get_group_idj(i32 0) #1, !dbg !20
  %9 = trunc i64 %8 to i32, !dbg !20
  %10 = shl i32 %9, 10, !dbg !21
  %11 = tail call spir_func i64 @_Z12get_local_idj(i32 0) #1, !dbg !22
  %12 = trunc i64 %11 to i32, !dbg !22
  %13 = shl i32 %12, 3, !dbg !22
  %14 = and i32 %13, 1016, !dbg !22
  %15 = or disjoint i32 %14, %10, !dbg !23
  %16 = or disjoint i32 %15, 1, !dbg !23
  %17 = or disjoint i32 %15, 2, !dbg !23
  %18 = or disjoint i32 %15, 3, !dbg !23
  %19 = or disjoint i32 %15, 4, !dbg !23
  %20 = or disjoint i32 %15, 5, !dbg !23
  %21 = or disjoint i32 %15, 6, !dbg !23
  %22 = or disjoint i32 %15, 7, !dbg !23
  %23 = icmp slt i32 %15, %5, !dbg !24
  %.frozen = freeze i32 %15, !dbg !25
  %24 = sdiv i32 %.frozen, 128, !dbg !25
  %25 = mul i32 %24, 128, !dbg !26
  %.decomposed = sub i32 %.frozen, %25, !dbg !26
  %26 = srem i32 %16, 128, !dbg !26
  %27 = srem i32 %17, 128, !dbg !26
  %28 = srem i32 %18, 128, !dbg !26
  %29 = srem i32 %19, 128, !dbg !26
  %30 = srem i32 %20, 128, !dbg !26
  %31 = srem i32 %21, 128, !dbg !26
  %32 = srem i32 %22, 128, !dbg !26
  %33 = sdiv i32 %15, 1024, !dbg !27
  br i1 %23, label %34, label %38, !dbg !28

34:                                               ; preds = %7
  %35 = sext i32 %15 to i64, !dbg !29
  %36 = getelementptr bfloat, ptr addrspace(1) %0, i64 %35, !dbg !29
  %37 = load <8 x i16>, ptr addrspace(1) %36, align 16, !dbg !28
  br label %38, !dbg !28

38:                                               ; preds = %34, %7
  %bc10 = phi <8 x i16> [ %37, %34 ], [ zeroinitializer, %7 ], !dbg !28
  %39 = extractelement <8 x i16> %bc10, i64 0, !dbg !30
  %40 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %39) #1
  %41 = extractelement <8 x i16> %bc10, i64 1, !dbg !30
  %42 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %41) #1
  %43 = extractelement <8 x i16> %bc10, i64 2, !dbg !30
  %44 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %43) #1
  %45 = extractelement <8 x i16> %bc10, i64 3, !dbg !30
  %46 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %45) #1
  %47 = extractelement <8 x i16> %bc10, i64 4, !dbg !30
  %48 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %47) #1
  %49 = extractelement <8 x i16> %bc10, i64 5, !dbg !30
  %50 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %49) #1
  %51 = extractelement <8 x i16> %bc10, i64 6, !dbg !30
  %52 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %51) #1
  %53 = extractelement <8 x i16> %bc10, i64 7, !dbg !30
  %54 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %53) #1
  br i1 %23, label %55, label %105, !dbg !31

55:                                               ; preds = %38
  %.lhs.trunc47 = trunc nsw i32 %32 to i8, !dbg !32
  %56 = srem i8 %.lhs.trunc47, 64, !dbg !32
  %57 = sext i8 %56 to i64, !dbg !33
  %58 = mul i64 %4, %57, !dbg !33
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !34
  %60 = sext i32 %33 to i64, !dbg !35
  %61 = getelementptr float, ptr addrspace(1) %59, i64 %60, !dbg !34
  %.lhs.trunc45 = trunc nsw i32 %31 to i8, !dbg !32
  %62 = srem i8 %.lhs.trunc45, 64, !dbg !32
  %63 = sext i8 %62 to i64, !dbg !33
  %64 = mul i64 %4, %63, !dbg !33
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !34
  %66 = getelementptr float, ptr addrspace(1) %65, i64 %60, !dbg !34
  %.lhs.trunc43 = trunc nsw i32 %30 to i8, !dbg !32
  %67 = srem i8 %.lhs.trunc43, 64, !dbg !32
  %68 = sext i8 %67 to i64, !dbg !33
  %69 = mul i64 %4, %68, !dbg !33
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %69, !dbg !34
  %71 = getelementptr float, ptr addrspace(1) %70, i64 %60, !dbg !34
  %.lhs.trunc41 = trunc nsw i32 %29 to i8, !dbg !32
  %72 = srem i8 %.lhs.trunc41, 64, !dbg !32
  %73 = sext i8 %72 to i64, !dbg !33
  %74 = mul i64 %4, %73, !dbg !33
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !34
  %76 = getelementptr float, ptr addrspace(1) %75, i64 %60, !dbg !34
  %.lhs.trunc39 = trunc nsw i32 %28 to i8, !dbg !32
  %77 = srem i8 %.lhs.trunc39, 64, !dbg !32
  %78 = sext i8 %77 to i64, !dbg !33
  %79 = mul i64 %4, %78, !dbg !33
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !34
  %81 = getelementptr float, ptr addrspace(1) %80, i64 %60, !dbg !34
  %.lhs.trunc37 = trunc nsw i32 %27 to i8, !dbg !32
  %82 = srem i8 %.lhs.trunc37, 64, !dbg !32
  %83 = sext i8 %82 to i64, !dbg !33
  %84 = mul i64 %4, %83, !dbg !33
  %85 = getelementptr float, ptr addrspace(1) %1, i64 %84, !dbg !34
  %86 = getelementptr float, ptr addrspace(1) %85, i64 %60, !dbg !34
  %.lhs.trunc = trunc nsw i32 %26 to i8, !dbg !32
  %87 = srem i8 %.lhs.trunc, 64, !dbg !32
  %88 = sext i8 %87 to i64, !dbg !33
  %89 = mul i64 %4, %88, !dbg !33
  %90 = getelementptr float, ptr addrspace(1) %1, i64 %89, !dbg !34
  %91 = getelementptr float, ptr addrspace(1) %90, i64 %60, !dbg !34
  %.lhs.trunc49 = trunc nsw i32 %.decomposed to i8, !dbg !32
  %92 = srem i8 %.lhs.trunc49, 64, !dbg !32
  %93 = sext i8 %92 to i64, !dbg !33
  %94 = mul i64 %4, %93, !dbg !33
  %95 = getelementptr float, ptr addrspace(1) %1, i64 %94, !dbg !34
  %96 = getelementptr float, ptr addrspace(1) %95, i64 %60, !dbg !34
  %97 = load float, ptr addrspace(1) %96, align 4, !dbg !31
  %98 = load float, ptr addrspace(1) %91, align 4, !dbg !31
  %99 = load float, ptr addrspace(1) %86, align 4, !dbg !31
  %100 = load float, ptr addrspace(1) %81, align 4, !dbg !31
  %101 = load float, ptr addrspace(1) %76, align 4, !dbg !31
  %102 = load float, ptr addrspace(1) %71, align 4, !dbg !31
  %103 = load float, ptr addrspace(1) %66, align 4, !dbg !31
  %104 = load <1 x float>, ptr addrspace(1) %61, align 4, !dbg !31
  br label %105, !dbg !31

105:                                              ; preds = %38, %55
  %106 = phi float [ %103, %55 ], [ 0.000000e+00, %38 ]
  %107 = phi float [ %101, %55 ], [ 0.000000e+00, %38 ]
  %108 = phi float [ %99, %55 ], [ 0.000000e+00, %38 ]
  %109 = phi float [ %97, %55 ], [ 0.000000e+00, %38 ]
  %110 = phi float [ %98, %55 ], [ 0.000000e+00, %38 ]
  %111 = phi float [ %100, %55 ], [ 0.000000e+00, %38 ]
  %112 = phi float [ %102, %55 ], [ 0.000000e+00, %38 ]
  %113 = phi <1 x float> [ %104, %55 ], [ zeroinitializer, %38 ], !dbg !31
  %114 = extractelement <1 x float> %113, i64 0, !dbg !31
  %115 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %109), !dbg !36
  %116 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %110), !dbg !36
  %117 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %108), !dbg !36
  %118 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %111), !dbg !36
  %119 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %107), !dbg !36
  %120 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %112), !dbg !36
  %121 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %106), !dbg !36
  %122 = tail call spir_func float @_Z15__spirv_ocl_cosf(float %114), !dbg !36
  %123 = fptrunc double %2 to float, !dbg !37
  %124 = fmul float %115, %123, !dbg !38
  %125 = fmul float %116, %123, !dbg !38
  %126 = fmul float %117, %123, !dbg !38
  %127 = fmul float %118, %123, !dbg !38
  %128 = fmul float %119, %123, !dbg !38
  %129 = fmul float %120, %123, !dbg !38
  %130 = fmul float %121, %123, !dbg !38
  %131 = fmul float %122, %123, !dbg !38
  %132 = fmul float %40, %124, !dbg !39
  %133 = fmul float %42, %125, !dbg !39
  %134 = fmul float %44, %126, !dbg !39
  %135 = fmul float %46, %127, !dbg !39
  %136 = fmul float %48, %128, !dbg !39
  %137 = fmul float %50, %129, !dbg !39
  %138 = fmul float %52, %130, !dbg !39
  %139 = fmul float %54, %131, !dbg !39
  %140 = icmp slt i32 %.decomposed, 64, !dbg !40
  %141 = shl nsw i32 %24, 7, !dbg !41
  %142 = and i1 %23, %140, !dbg !42
  br i1 %142, label %143, label %149, !dbg !43

143:                                              ; preds = %105
  %144 = add nsw i32 %.decomposed, 64, !dbg !44
  %145 = add i32 %144, %141, !dbg !45
  %146 = sext i32 %145 to i64, !dbg !46
  %147 = getelementptr bfloat, ptr addrspace(1) %0, i64 %146, !dbg !46
  %148 = load <8 x i16>, ptr addrspace(1) %147, align 16, !dbg !43
  br label %149, !dbg !43

149:                                              ; preds = %143, %105
  %bc20 = phi <8 x i16> [ %148, %143 ], [ zeroinitializer, %105 ], !dbg !43
  %150 = extractelement <8 x i16> %bc20, i64 0, !dbg !47
  %151 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %150) #1
  %152 = extractelement <8 x i16> %bc20, i64 1, !dbg !47
  %153 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %152) #1
  %154 = extractelement <8 x i16> %bc20, i64 2, !dbg !47
  %155 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %154) #1
  %156 = extractelement <8 x i16> %bc20, i64 3, !dbg !47
  %157 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %156) #1
  %158 = extractelement <8 x i16> %bc20, i64 4, !dbg !47
  %159 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %158) #1
  %160 = extractelement <8 x i16> %bc20, i64 5, !dbg !47
  %161 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %160) #1
  %162 = extractelement <8 x i16> %bc20, i64 6, !dbg !47
  %163 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %162) #1
  %164 = extractelement <8 x i16> %bc20, i64 7, !dbg !47
  %165 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %164) #1
  %166 = fsub float 0.000000e+00, %151, !dbg !48
  %167 = fsub float 0.000000e+00, %153, !dbg !48
  %168 = fsub float 0.000000e+00, %155, !dbg !48
  %169 = fsub float 0.000000e+00, %157, !dbg !48
  %170 = fsub float 0.000000e+00, %159, !dbg !48
  %171 = fsub float 0.000000e+00, %161, !dbg !48
  %172 = fsub float 0.000000e+00, %163, !dbg !48
  %173 = fsub float 0.000000e+00, %165, !dbg !48
  %174 = icmp sgt i32 %.decomposed, 63, !dbg !49
  %175 = and i1 %23, %174, !dbg !50
  br i1 %175, label %176, label %182, !dbg !51

176:                                              ; preds = %149
  %177 = add nsw i32 %.decomposed, -64, !dbg !52
  %178 = add nsw i32 %177, %141, !dbg !53
  %179 = sext i32 %178 to i64, !dbg !54
  %180 = getelementptr bfloat, ptr addrspace(1) %0, i64 %179, !dbg !54
  %181 = load <8 x i16>, ptr addrspace(1) %180, align 16, !dbg !51
  br label %182, !dbg !51

182:                                              ; preds = %176, %149
  %bc30 = phi <8 x i16> [ %181, %176 ], [ zeroinitializer, %149 ], !dbg !51
  %183 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %109), !dbg !55
  %184 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %110), !dbg !55
  %185 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %108), !dbg !55
  %186 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %111), !dbg !55
  %187 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %107), !dbg !55
  %188 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %112), !dbg !55
  %189 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %106), !dbg !55
  %190 = tail call spir_func float @_Z15__spirv_ocl_sinf(float %114), !dbg !55
  br i1 %23, label %191, label %266, !dbg !56

191:                                              ; preds = %182
  %192 = extractelement <8 x i16> %bc30, i64 0, !dbg !57
  %193 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %192) #1
  %194 = select i1 %140, float %166, float %193, !dbg !58
  %195 = fmul float %183, %123, !dbg !59
  %196 = fmul float %195, %194, !dbg !60
  %197 = fadd float %132, %196, !dbg !61
  %198 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %197) #1
  %199 = insertelement <2 x i16> poison, i16 %198, i64 0, !dbg !56
  %200 = extractelement <8 x i16> %bc30, i64 1, !dbg !57
  %201 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %200) #1
  %202 = select i1 %140, float %167, float %201, !dbg !58
  %203 = fmul float %184, %123, !dbg !59
  %204 = fmul float %203, %202, !dbg !60
  %205 = fadd float %133, %204, !dbg !61
  %206 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %205) #1
  %207 = insertelement <2 x i16> %199, i16 %206, i64 1, !dbg !56
  %208 = bitcast <2 x i16> %207 to i32, !dbg !56
  %209 = insertelement <4 x i32> poison, i32 %208, i64 0, !dbg !56
  %210 = extractelement <8 x i16> %bc30, i64 2, !dbg !57
  %211 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %210) #1
  %212 = select i1 %140, float %168, float %211, !dbg !58
  %213 = fmul float %185, %123, !dbg !59
  %214 = fmul float %213, %212, !dbg !60
  %215 = fadd float %134, %214, !dbg !61
  %216 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %215) #1
  %217 = insertelement <2 x i16> poison, i16 %216, i64 0, !dbg !56
  %218 = extractelement <8 x i16> %bc30, i64 3, !dbg !57
  %219 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %218) #1
  %220 = select i1 %140, float %169, float %219, !dbg !58
  %221 = fmul float %186, %123, !dbg !59
  %222 = fmul float %221, %220, !dbg !60
  %223 = fadd float %135, %222, !dbg !61
  %224 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %223) #1
  %225 = insertelement <2 x i16> %217, i16 %224, i64 1, !dbg !56
  %226 = bitcast <2 x i16> %225 to i32, !dbg !56
  %227 = insertelement <4 x i32> %209, i32 %226, i64 1, !dbg !56
  %228 = extractelement <8 x i16> %bc30, i64 4, !dbg !57
  %229 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %228) #1
  %230 = select i1 %140, float %170, float %229, !dbg !58
  %231 = fmul float %187, %123, !dbg !59
  %232 = fmul float %231, %230, !dbg !60
  %233 = fadd float %136, %232, !dbg !61
  %234 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %233) #1
  %235 = insertelement <2 x i16> poison, i16 %234, i64 0, !dbg !56
  %236 = extractelement <8 x i16> %bc30, i64 5, !dbg !57
  %237 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %236) #1
  %238 = select i1 %140, float %171, float %237, !dbg !58
  %239 = fmul float %188, %123, !dbg !59
  %240 = fmul float %239, %238, !dbg !60
  %241 = fadd float %137, %240, !dbg !61
  %242 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %241) #1
  %243 = insertelement <2 x i16> %235, i16 %242, i64 1, !dbg !56
  %244 = bitcast <2 x i16> %243 to i32, !dbg !56
  %245 = insertelement <4 x i32> %227, i32 %244, i64 2, !dbg !56
  %246 = extractelement <8 x i16> %bc30, i64 6, !dbg !57
  %247 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %246) #1
  %248 = select i1 %140, float %172, float %247, !dbg !58
  %249 = fmul float %189, %123, !dbg !59
  %250 = fmul float %249, %248, !dbg !60
  %251 = fadd float %138, %250, !dbg !61
  %252 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %251) #1
  %253 = insertelement <2 x i16> poison, i16 %252, i64 0, !dbg !56
  %254 = extractelement <8 x i16> %bc30, i64 7, !dbg !57
  %255 = tail call spir_func float @_Z27__spirv_ConvertBF16ToFINTELs(i16 %254) #1
  %256 = select i1 %140, float %173, float %255, !dbg !58
  %257 = fmul float %190, %123, !dbg !59
  %258 = fmul float %257, %256, !dbg !60
  %259 = fadd float %139, %258, !dbg !61
  %260 = tail call spir_func i16 @_Z27__spirv_ConvertFToBF16INTELf(float %259) #1
  %261 = insertelement <2 x i16> %253, i16 %260, i64 1, !dbg !56
  %262 = bitcast <2 x i16> %261 to i32, !dbg !56
  %263 = insertelement <4 x i32> %245, i32 %262, i64 3, !dbg !56
  %264 = sext i32 %15 to i64, !dbg !62
  %265 = getelementptr bfloat, ptr addrspace(1) %3, i64 %264, !dbg !62
  store <4 x i32> %263, ptr addrspace(1) %265, align 16, !dbg !56
  br label %266, !dbg !56

266:                                              ; preds = %191, %182
  ret void, !dbg !63
}

attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) }
attributes #1 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!opencl.spir.version = !{!6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6, !6}
!spirv.Source = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !7}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cjexvu5kn4wkr6ih3d5hl4oask22y3owwddi732zchwvsw5mxozv.py", directory: "/tmp/torchinductor_jovyan/je")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, i32 2}
!7 = !{i32 3, i32 100000}
!8 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"}
!9 = !DISubprogram(name: "_Z27__spirv_ConvertFToBF16INTELf", linkageName: "_Z27__spirv_ConvertFToBF16INTELf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DISubprogram(name: "_Z15__spirv_ocl_sinf", linkageName: "_Z15__spirv_ocl_sinf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!13 = !DISubprogram(name: "_Z15__spirv_ocl_cosf", linkageName: "_Z15__spirv_ocl_cosf", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!14 = !DISubprogram(name: "_Z27__spirv_ConvertBF16ToFINTELs", linkageName: "_Z27__spirv_ConvertBF16ToFINTELs", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!15 = !DISubprogram(name: "_Z12get_local_idj", linkageName: "_Z12get_local_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!16 = !DISubprogram(name: "_Z12get_group_idj", linkageName: "_Z12get_group_idj", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagOptimized)
!17 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", linkageName: "triton_poi_fused__to_copy_add_cat_cos_mul_neg_sin_unsqueeze_2", scope: !1, file: !1, line: 18, type: !10, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!18 = !{i32 32}
!19 = !{i64 128, i64 1, i64 1}
!20 = !DILocation(line: 19, column: 28, scope: !17)
!21 = !DILocation(line: 19, column: 33, scope: !17)
!22 = !DILocation(line: 20, column: 36, scope: !17)
!23 = !DILocation(line: 20, column: 23, scope: !17)
!24 = !DILocation(line: 21, column: 21, scope: !17)
!25 = !DILocation(line: 25, column: 19, scope: !17)
!26 = !DILocation(line: 23, column: 19, scope: !17)
!27 = !DILocation(line: 24, column: 19, scope: !17)
!28 = !DILocation(line: 26, column: 35, scope: !17)
!29 = !DILocation(line: 26, column: 30, scope: !17)
!30 = !DILocation(line: 26, column: 45, scope: !17)
!31 = !DILocation(line: 27, column: 53, scope: !17)
!32 = !DILocation(line: 27, column: 46, scope: !17)
!33 = !DILocation(line: 27, column: 41, scope: !17)
!34 = !DILocation(line: 27, column: 30, scope: !17)
!35 = !DILocation(line: 27, column: 35, scope: !17)
!36 = !DILocation(line: 29, column: 23, scope: !17)
!37 = !DILocation(line: 30, column: 19, scope: !17)
!38 = !DILocation(line: 31, column: 18, scope: !17)
!39 = !DILocation(line: 33, column: 18, scope: !17)
!40 = !DILocation(line: 38, column: 19, scope: !17)
!41 = !DILocation(line: 39, column: 40, scope: !17)
!42 = !DILocation(line: 39, column: 60, scope: !17)
!43 = !DILocation(line: 39, column: 52, scope: !17)
!44 = !DILocation(line: 39, column: 36, scope: !17)
!45 = !DILocation(line: 39, column: 46, scope: !17)
!46 = !DILocation(line: 39, column: 31, scope: !17)
!47 = !DILocation(line: 39, column: 111, scope: !17)
!48 = !DILocation(line: 40, column: 13, scope: !17)
!49 = !DILocation(line: 43, column: 20, scope: !17)
!50 = !DILocation(line: 46, column: 63, scope: !17)
!51 = !DILocation(line: 46, column: 55, scope: !17)
!52 = !DILocation(line: 46, column: 49, scope: !17)
!53 = !DILocation(line: 46, column: 41, scope: !17)
!54 = !DILocation(line: 46, column: 31, scope: !17)
!55 = !DILocation(line: 48, column: 24, scope: !17)
!56 = !DILocation(line: 53, column: 37, scope: !17)
!57 = !DILocation(line: 46, column: 114, scope: !17)
!58 = !DILocation(line: 0, scope: !17)
!59 = !DILocation(line: 49, column: 20, scope: !17)
!60 = !DILocation(line: 51, column: 20, scope: !17)
!61 = !DILocation(line: 52, column: 19, scope: !17)
!62 = !DILocation(line: 53, column: 25, scope: !17)
!63 = !DILocation(line: 53, column: 4, scope: !17)
