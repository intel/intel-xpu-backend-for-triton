name: Nightly Tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8,11 * * *"

jobs:

  Nightly-Tests:
    runs-on: [self-hosted, PVC_E2E]


    steps:

      - name: Create conda environment
        run: |
          source ${HOME}/miniconda3/bin/activate triton-nightly-test
          conda install -y astunparse numpy ninja pyyaml setuptools cmake cffi typing_extensions future six requests dataclasses mkl mkl-include
          conda install -y -c conda-forge libstdcxx-ng
          python3 -m pip install --upgrade pre-commit

      - name: Check Pre-commit
        run: |
          source ${HOME}/miniconda3/bin/activate triton-nightly-test
          rm -rf triton
          git clone https://github.com/openai/triton triton
          cd triton
          triton_commit=`git rev-parse HEAD`
          echo "triton_commit: ${triton_commit}" | tee sw_info.log
          git submodule sync
          git submodule update --init --recursive --jobs 0
          cd third_party/intel_xpu_backend
          git checkout main && git pull
          # cd ../..
          # git checkout `cat third_party/intel_xpu_backend/triton_hash.txt`
          python3 -m pre_commit run --all-files

      - name: Install Dependency
        run: |
          python --version
          source ${HOME}/miniconda3/bin/activate triton-nightly-test
          python --version
          pip install setuptools cython numpy wheel scikit-build scipy
          pip install psutil cpuid
          cd ${HOME}/triton-nightly
          bash ${HOME}/triton-nightly/env_prepare_nightly.sh
          python -c "import torch;import intel_extension_for_pytorch"
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
              echo -e "[ERROR] Private-torch or IPEX BUILD FAIL"
              exit 1
          fi

      - name: Build Triton
        shell: bash
        run:  |
          source ${HOME}/miniconda3/bin/activate triton-nightly-test
          source ${HOME}/env_triton.sh
          export LLVM_SYSPATH=${HOME}/triton-nightly/llvm/build/
          pip uninstall -y triton
          sudo update-ca-certificates --fresh
          export SSL_CERT_DIR=/etc/ssl/certs          
          cd triton/python
          python setup.py clean
          TRITON_CODEGEN_INTEL_XPU_BACKEND=1 python setup.py develop
          python -c "import triton"
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
              echo -e "[ERROR] Triton BUILD FAIL"
              exit 1
          fi

      - name: E2E Test for triton on PVC
        run: |
          echo -e "[ INFO ] Run E2E test on Node $(hostname)"
          source ${HOME}/miniconda3/bin/activate triton-nightly-test
          source ${HOME}/env_triton.sh
          export LLVM_SYSPATH=${HOME}/triton-nightly/llvm/build/
          pip install pandas
          cd ${HOME}/triton-nightly
          bash set_proxy.sh
          cp inductor_xpu_test.sh ${HOME}/triton-nightly/frameworks.ai.pytorch.private-gpu
          cd ${HOME}/triton-nightly/frameworks.ai.pytorch.private-gpu
          rm -rf inductor_log
          bash inductor_xpu_test.sh huggingface amp inference accuracy xpu 0 static
          export INDUCTOR_AMP_DT=fp16
          bash inductor_xpu_test.sh huggingface amp inference accuracy xpu 0 static

      - name: Upload Triton PVC nightly Data
        uses: actions/upload-artifact@v3
        with:
          name: Triton-nightly-data
          path: /home/gta/triton-nightly/frameworks.ai.pytorch.private-gpu/inductor_log/huggingface/amp/*.log
