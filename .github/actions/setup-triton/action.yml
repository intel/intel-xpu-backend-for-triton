# Builds and installs Triton. Uses git clone in the current directory.
# Sets the following environment variables:
# * LLVM_COMMIT_ID
# * TRITON_USE_SPIRV_BACKEND (if use_spirv_backend is true)
name: setup-triton
description: Build and install Triton
inputs:
  build_llvm:
    description: Build LLVM
    default: "false"
  use_spirv_backend:
    description: Use SPIR-V backend
    default: "false"
  command:
    description: Command to execute
    default: DEBUG=1 pip install -v '.[build,tests,tutorials]'
runs:
  using: "composite"
  steps:
    - name: Get LLVM commit id
      shell: bash
      run: |
        LLVM_COMMIT_ID=$(<cmake/llvm-hash.txt)
        echo "LLVM_COMMIT_ID=$LLVM_COMMIT_ID" | tee -a $GITHUB_ENV

    - name: Generate LLVM cache key
      if: ${{ inputs.build_llvm == 'true' }}
      shell: bash
      run: |
        LLVM_CACHE_KEY=$(echo $LLVM_COMMIT_ID ${{ inputs.use_spirv_backend }} | sha256sum - | cut -d\  -f1)
        echo "LLVM_CACHE_KEY=$LLVM_CACHE_KEY" | tee -a $GITHUB_ENV

    - name: Load LLVM cache
      if: ${{ inputs.build_llvm == 'true' }}
      id: llvm-cache
      uses: ./.github/actions/load
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 3
      with:
        path: $HOME/packages
        key: packages-${{ env.LLVM_CACHE_KEY }}-${{ env.CACHE_NUMBER }}

    - name: Clone LLVM
      if: ${{ inputs.build_llvm == 'true' && steps.llvm-cache.outputs.status == 'miss' }}
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        ref: ${{ env.LLVM_COMMIT_ID }}
        path: llvm
        submodules: recursive

    - name: Use SPIR-V backend
      if: ${{ inputs.use_spirv_backend == 'true' }}
      shell: bash
      run: |
        echo "TRITON_USE_SPIRV_BACKEND=1" | tee -a $GITHUB_ENV

    - name: Build LLVM
      if: ${{ inputs.build_llvm == 'true' && steps.llvm-cache.outputs.status == 'miss' }}
      shell: bash
      run: |
        export BASE=$HOME
        ln -s $PWD/llvm $BASE/llvm
        ./scripts/compile-triton.sh --llvm

    - name: Set LLVM_SYSPATH
      if: ${{ inputs.build_llvm == 'true' }}
      shell: bash
      run: |
        echo "LLVM_SYSPATH=$HOME/packages/llvm" | tee -a $GITHUB_ENV

    - name: Save LLVM cache
      if: ${{ inputs.build_llvm == 'true' && steps.llvm-cache.outputs.status == 'miss' }}
      uses: ./.github/actions/save
      with:
        path: ${{ steps.llvm-cache.outputs.path }}
        dest: ${{ steps.llvm-cache.outputs.dest }}

    - name: Prepare Triton cache
      shell: bash
      run: |
        mkdir -p ~/.triton
        TRITON_CACHE_KEY="$(sha256sum python/setup.py | cut -d\  -f1)"
        echo "TRITON_CACHE_KEY=$TRITON_CACHE_KEY" | tee -a $GITHUB_ENV

    - name: Load Triton cache
      id: triton-cache
      uses: ./.github/actions/load
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 1
      with:
        path: $HOME/.triton/nvidia
        key: triton-nvidia-${{ env.TRITON_CACHE_KEY }}-${{ env.CACHE_NUMBER }}

    - name: Build Triton
      shell: bash
      run: |
        cd python
        pip install -r requirements.txt
        ${{ inputs.command }}

    - name: Save Triton cache
      if: steps.triton-cache.outputs.status == 'miss'
      uses: ./.github/actions/save
      with:
        path: ${{ steps.triton-cache.outputs.path }}
        dest: ${{ steps.triton-cache.outputs.dest }}
