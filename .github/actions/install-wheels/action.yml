# Installs wheels from the latest run of a specified workflow
name: install-wheels
description: Install latest wheels from a specified workflow using a custom wildcard
inputs:
  workflow:
    description: Name of the workflow to install wheels from
    default: Triton wheels
  repository:
    description: Repository name with owner
    default: intel/intel-xpu-backend-for-triton
  wheels_pattern:
    # Example of specifying only some packages to install: '{intel_extension_for_pytorch-*,torch-*}'
    # Extended globbing is enabled for this pattern so for example to exclude intel_extension_for_pytorch use pattern
    # !(intel_extension_for_pytorch-*).whl
    description: Pattern to match the wheel files to download
    default: '*'
  gh_token:
    description: GitHub token
    required: true
  install_cmd:
    description: The command used to install wheels
    default: 'pip install'
  python_version:
    required: true

runs:
  using: "composite"
  steps:
    - name: Get the latest run id
      id: run_id
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
      run: |
        set -e
        run_id=$(gh run list -w "${{ inputs.workflow }}" -s success --repo ${{ inputs.repository }} --json databaseId --jq '.[0].databaseId')
        if [[ ! $run_id ]]; then
          exit 1
        fi
        echo "${{ inputs.workflow }}: $run_id"
        echo "run_id=$run_id" >> $GITHUB_OUTPUT

    - name: Download wheels from specified workflow run artifacts
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
      run: |
        set -x
        mkdir -p ~/wheels
        gh run download ${{ steps.run_id.outputs.run_id }} \
          --repo ${{ inputs.repository }} \
          --pattern "*-py${{ inputs.python_version }}*" \
          --dir ~/wheels

    - name: Install wheels
      shell: bash
      run: |
        set -x
        shopt -s extglob
        cd ~/wheels/*-py${{ inputs.python_version }}*
        ${{ inputs.install_cmd }} ${{ inputs.wheels_pattern }}
