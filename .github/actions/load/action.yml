name: load
description: Load a directory from a cache based on a shared directory
inputs:
  root:
    description: Directory for cache
    default: /cache
  path:
    description: A directory to load from a cache
    required: true
  key:
    description: A cache key
    required: true
  symlink:
    description: Create a symlink instead of copying from cache
    default: "true"
  enabled:
    description: Enable cache
    default: "true"
outputs:
  path:
    description: A directory to save to a cache
    value: ${{ inputs.path }}
  status:
    description: Cache status, hit or miss
    value: ${{ steps.load.outputs.status }}
  dest:
    description: Directory in cache
    value: ${{ steps.load.outputs.dest }}

runs:
  using: "composite"
  steps:
    - name: Load ${{ inputs.path }} from cache
      id: load
      shell: bash
      run: |
        ITEM_PATH="${{ inputs.root }}/${{ inputs.key }}"
        echo "dest=$ITEM_PATH" >> $GITHUB_OUTPUT
        if [[ -d ${{ inputs.path }} ]]; then
          echo "Directory ${{ inputs.path }} exists and will not be restored from cache"
          exit 1
        fi
        if [[ ${{ inputs.enabled == 'true' }} && -d $ITEM_PATH ]]; then
          echo "Cache hit for ${{ inputs.key }}"
          echo "status=hit" >> $GITHUB_OUTPUT
          if [[ ${{ inputs.symlink }} == true ]]; then
            mkdir -p $(dirname ${{ inputs.path }})
            ln -s $ITEM_PATH ${{ inputs.path }}
          else
            mkdir -p ${{ inputs.path }}
            cp -rT $ITEM_PATH ${{ inputs.path }}
          fi
          touch $ITEM_PATH.hit
        else
          echo "Cache miss for ${{ inputs.key }}"
          echo "status=miss" >> $GITHUB_OUTPUT
        fi
